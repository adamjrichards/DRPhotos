%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: camera_shutter_1.1.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Adam Richards
%%CreationDate: 5/4/2018
%%BoundingBox: 0 0 585 582
%%HiResBoundingBox: 0 0 584.7178 581.3179
%%CropBox: 0 0 584.7178 581.3179
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-05-04T09:16:30-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8y/N78/PKH5cQG2n&#xA;P6T8xOvKDR4HAZQRVWuH+L0kPbYsewpvir5j86fnb+bvmJmk1jzAvlHTZRyg0uxLw3DIRUDhDyuf&#xA;iXeszojdtsVeY3tz5fuJvVub/U9RlPWaaOONh7fFNcE/8FirIfKltrscQvvKur63o8atxN6I5IbG&#xA;NlNT6t5BLQdan91/XFXrPlX/AJyX/MrybNDD5zW381+XSyxjV7CWCWVaiqgTwH0mfjv6cwWTxIxV&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bílá</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Èerná</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB èervená</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>228</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB žlutá</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB zelená</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>103</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB azurová</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>110</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>216</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB modrá</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>50</xmpG:red>
                           <xmpG:green>74</xmpG:green>
                           <xmpG:blue>151</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB purpurová</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>83</xmpG:green>
                           <xmpG:blue>150</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>228</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>40</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>91</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>61</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>46</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>215</xmpG:red>
                           <xmpG:green>218</xmpG:green>
                           <xmpG:blue>46</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>143</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>73</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>76</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>49</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>112</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>99</xmpG:red>
                           <xmpG:green>50</xmpG:green>
                           <xmpG:blue>135</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>143</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>134</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>157</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>94</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>118</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>116</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>21</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>34</xmpG:green>
                           <xmpG:blue>17</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>204</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>153</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=241  B=242</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -581.318 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 581.318 li
584.718 581.318 li
584.718 0 li
cp
clp
10 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
135.318 70.1592 mo
135.318 106.146 106.146 135.318 70.1592 135.318 cv
34.1729 135.318 5.00004 106.146 5.00004 70.1592 cv
5.00004 34.1729 34.1729 5.00001 70.1592 5.00001 cv
106.146 5.00001 135.318 34.1729 135.318 70.1592 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
97.9537 15.6016 mo
89.8467 14.8565 81.4385 16.5215 73.8516 20.9019 cv
72.565 21.645 71.3394 22.4546 70.1656 23.3115 cv
70.3965 23.4795 70.6182 23.6558 70.8448 23.8286 cv
70.6143 23.6558 70.3872 23.4805 70.1543 23.3106 cv
62.836 28.6528 57.7452 36.0947 55.2344 44.3071 cv
53.6309 49.5527 53.083 55.1128 53.6787 60.6411 cv
54.0235 63.8477 54.751 67.0444 55.8858 70.1626 cv
56.6905 67.9502 57.6954 65.7759 58.9136 63.666 cv
60.1319 61.5562 61.5122 59.5991 63.0259 57.7959 cv
65.1578 55.2573 67.5562 53.0259 70.1592 51.1245 cv
74.6495 47.8452 79.7398 45.5415 85.085 44.3071 cv
93.4551 42.3745 102.447 43.065 110.735 46.7339 cv
112.064 47.3218 113.376 47.9849 114.664 48.728 cv
122.24 53.1026 127.882 59.541 131.292 66.9229 cv
130.123 44.4971 116.888 25.2666 97.9537 15.6016 cv
cp
f
1 lw
97.9537 15.6016 mo
89.8467 14.8565 81.4385 16.5215 73.8516 20.9019 cv
72.565 21.645 71.3394 22.4546 70.1656 23.3115 cv
70.3965 23.4795 70.6182 23.6558 70.8448 23.8286 cv
70.6143 23.6558 70.3872 23.4805 70.1543 23.3106 cv
62.836 28.6528 57.7452 36.0947 55.2344 44.3071 cv
53.6309 49.5527 53.083 55.1128 53.6787 60.6411 cv
54.0235 63.8477 54.751 67.0444 55.8858 70.1626 cv
56.6905 67.9502 57.6954 65.7759 58.9136 63.666 cv
60.1319 61.5562 61.5122 59.5991 63.0259 57.7959 cv
65.1578 55.2573 67.5562 53.0259 70.1592 51.1245 cv
74.6495 47.8452 79.7398 45.5415 85.085 44.3071 cv
93.4551 42.3745 102.447 43.065 110.735 46.7339 cv
112.064 47.3218 113.376 47.9849 114.664 48.728 cv
122.24 53.1026 127.882 59.541 131.292 66.9229 cv
130.123 44.4971 116.888 25.2666 97.9537 15.6016 cv
cp
1 1 1 rgb
@
29.5845 46.7339 mo
30.5508 55.7466 34.4512 63.8799 40.3116 70.1626 cv
44.0537 74.1743 48.5938 77.4302 53.6802 79.6782 cv
56.6289 80.981 59.7608 81.9468 63.0274 82.522 cv
61.5127 80.7188 60.1319 78.7617 58.9136 76.6514 cv
57.6968 74.544 56.6905 72.3726 55.8858 70.1626 cv
54.751 67.0444 54.0235 63.8477 53.6787 60.6411 cv
53.083 55.1128 53.6309 49.5527 55.2344 44.3071 cv
57.7452 36.0947 62.836 28.6528 70.1543 23.3106 cv
71.3301 22.4522 72.562 21.646 73.8516 20.9019 cv
81.4385 16.5215 89.8467 14.8565 97.9537 15.6016 cv
89.6128 11.3433 80.167 8.94142 70.1592 8.94142 cv
57.8511 8.94142 46.3931 12.5772 36.795 18.8286 cv
32.1045 25.4736 29.3477 33.5806 29.3477 42.333 cv
29.3477 43.8198 29.4297 45.2881 29.5845 46.7339 cv
cp
0 0 0 rgb
f
29.5845 46.7339 mo
30.5508 55.7466 34.4512 63.8799 40.3116 70.1626 cv
44.0537 74.1743 48.5938 77.4302 53.6802 79.6782 cv
56.6289 80.981 59.7608 81.9468 63.0274 82.522 cv
61.5127 80.7188 60.1319 78.7617 58.9136 76.6514 cv
57.6968 74.544 56.6905 72.3726 55.8858 70.1626 cv
54.751 67.0444 54.0235 63.8477 53.6787 60.6411 cv
53.083 55.1128 53.6309 49.5527 55.2344 44.3071 cv
57.7452 36.0947 62.836 28.6528 70.1543 23.3106 cv
71.3301 22.4522 72.562 21.646 73.8516 20.9019 cv
81.4385 16.5215 89.8467 14.8565 97.9537 15.6016 cv
89.6128 11.3433 80.167 8.94142 70.1592 8.94142 cv
57.8511 8.94142 46.3931 12.5772 36.795 18.8286 cv
32.1045 25.4736 29.3477 33.5806 29.3477 42.333 cv
29.3477 43.8198 29.4297 45.2881 29.5845 46.7339 cv
cp
1 1 1 rgb
@
110.734 93.584 mo
109.768 84.5733 105.866 76.4444 100.007 70.1626 cv
96.2642 66.1499 91.7261 62.8887 86.6387 60.6402 cv
83.6895 59.3369 80.5591 58.3716 77.2925 57.7959 cv
78.8067 59.5991 80.1875 61.5562 81.4058 63.666 cv
82.6216 65.7735 83.6285 67.9448 84.4336 70.1548 cv
85.5684 73.2735 86.2954 76.4697 86.6412 79.6768 cv
87.2364 85.2031 86.6895 90.7612 85.087 96.0054 cv
82.5762 104.22 77.4849 111.664 70.1651 117.007 cv
68.9883 117.865 67.7574 118.671 66.4678 119.416 cv
58.8799 123.796 50.4712 125.461 42.3628 124.715 cv
50.7041 128.974 60.1509 131.376 70.1592 131.376 cv
82.4678 131.376 93.9253 127.741 103.523 121.489 cv
108.214 114.844 110.971 106.737 110.971 97.9854 cv
110.971 96.4976 110.889 95.0298 110.734 93.584 cv
cp
0 0 0 rgb
f
110.734 93.584 mo
109.768 84.5733 105.866 76.4444 100.007 70.1626 cv
96.2642 66.1499 91.7261 62.8887 86.6387 60.6402 cv
83.6895 59.3369 80.5591 58.3716 77.2925 57.7959 cv
78.8067 59.5991 80.1875 61.5562 81.4058 63.666 cv
82.6216 65.7735 83.6285 67.9448 84.4336 70.1548 cv
85.5684 73.2735 86.2954 76.4697 86.6412 79.6768 cv
87.2364 85.2031 86.6895 90.7612 85.087 96.0054 cv
82.5762 104.22 77.4849 111.664 70.1651 117.007 cv
68.9883 117.865 67.7574 118.671 66.4678 119.416 cv
58.8799 123.796 50.4712 125.461 42.3628 124.715 cv
50.7041 128.974 60.1509 131.376 70.1592 131.376 cv
82.4678 131.376 93.9253 127.741 103.523 121.489 cv
108.214 114.844 110.971 106.737 110.971 97.9854 cv
110.971 96.4976 110.889 95.0298 110.734 93.584 cv
cp
1 1 1 rgb
@
131.377 70.1587 mo
131.377 69.0733 131.348 67.9946 131.292 66.9229 cv
127.882 59.541 122.24 53.1026 114.664 48.728 cv
113.376 47.9849 112.064 47.3218 110.735 46.7339 cv
102.447 43.065 93.4551 42.3745 85.085 44.3071 cv
79.7398 45.5415 74.6495 47.8452 70.1592 51.1245 cv
67.5562 53.0259 65.1578 55.2573 63.0259 57.7959 cv
65.3423 57.3877 67.7261 57.1734 70.1592 57.1734 cv
72.5923 57.1734 74.9766 57.3877 77.2925 57.7959 cv
80.5591 58.3716 83.6895 59.3369 86.6387 60.6402 cv
91.7261 62.8887 96.2642 66.1499 100.007 70.1626 cv
105.866 76.4444 109.768 84.5733 110.734 93.584 cv
110.889 95.0298 110.971 96.4976 110.971 97.9854 cv
110.971 106.737 108.214 114.844 103.523 121.489 cv
120.29 110.569 131.377 91.6597 131.377 70.1587 cv
cp
0 0 0 rgb
f
131.377 70.1587 mo
131.377 69.0733 131.348 67.9946 131.292 66.9229 cv
127.882 59.541 122.24 53.1026 114.664 48.728 cv
113.376 47.9849 112.064 47.3218 110.735 46.7339 cv
102.447 43.065 93.4551 42.3745 85.085 44.3071 cv
79.7398 45.5415 74.6495 47.8452 70.1592 51.1245 cv
67.5562 53.0259 65.1578 55.2573 63.0259 57.7959 cv
65.3423 57.3877 67.7261 57.1734 70.1592 57.1734 cv
72.5923 57.1734 74.9766 57.3877 77.2925 57.7959 cv
80.5591 58.3716 83.6895 59.3369 86.6387 60.6402 cv
91.7261 62.8887 96.2642 66.1499 100.007 70.1626 cv
105.866 76.4444 109.768 84.5733 110.734 93.584 cv
110.889 95.0298 110.971 96.4976 110.971 97.9854 cv
110.971 106.737 108.214 114.844 103.523 121.489 cv
120.29 110.569 131.377 91.6597 131.377 70.1587 cv
cp
1 1 1 rgb
@
25.6553 91.5899 mo
25.9537 91.7617 26.2535 91.9292 26.5542 92.0933 cv
26.6534 92.147 26.7535 92.1987 26.8531 92.252 cv
27.0552 92.3604 27.2569 92.4688 27.4605 92.5723 cv
27.5821 92.6343 27.7037 92.6939 27.8247 92.7544 cv
28.0064 92.8457 28.188 92.937 28.3711 93.0249 cv
28.5049 93.0899 28.6397 93.1509 28.774 93.2144 cv
28.9454 93.2944 29.1167 93.3755 29.2891 93.4536 cv
29.3872 93.4981 29.4859 93.5405 29.5845 93.584 cv
29.628 93.6026 29.6714 93.6216 29.7144 93.6411 cv
29.8799 93.7129 30.045 93.7866 30.211 93.8569 cv
30.3594 93.9194 30.5083 93.9795 30.6573 94.041 cv
30.8174 94.106 30.9776 94.1719 31.1372 94.2354 cv
31.292 94.2964 31.4468 94.354 31.6016 94.4136 cv
31.7569 94.4727 31.9126 94.5313 32.0684 94.5889 cv
32.229 94.647 32.3887 94.7036 32.5489 94.7603 cv
32.7002 94.813 32.8511 94.8667 33.003 94.9175 cv
33.169 94.9741 33.3345 95.0278 33.5005 95.0825 cv
33.6465 95.1299 33.793 95.1758 33.9395 95.2222 cv
34.1114 95.2759 34.2832 95.3277 34.4556 95.3794 cv
34.5962 95.4209 34.7369 95.4624 34.8775 95.502 cv
35.0557 95.5532 35.2344 95.603 35.4126 95.6509 cv
35.5474 95.688 35.6827 95.7236 35.8174 95.7588 cv
36.0025 95.8067 36.187 95.854 36.3731 95.8989 cv
36.5005 95.9302 36.628 95.9605 36.7559 95.9907 cv
36.9488 96.0357 37.1426 96.0801 37.336 96.1226 cv
37.4546 96.1489 37.5733 96.1734 37.6929 96.1978 cv
37.8946 96.2402 38.0977 96.2827 38.3003 96.3213 cv
38.4087 96.3423 38.5181 96.3618 38.6265 96.3828 cv
38.8394 96.4224 39.0528 96.461 39.2662 96.4966 cv
39.3623 96.5127 39.458 96.5278 39.5542 96.543 cv
39.7803 96.5796 40.0064 96.6157 40.2334 96.6475 cv
40.3116 96.6587 40.3902 96.6694 40.4683 96.6807 cv
40.7129 96.7134 40.9576 96.7466 41.2017 96.7759 cv
41.2549 96.7822 41.3081 96.7871 41.3614 96.7935 cv
41.6304 96.8237 41.8999 96.854 42.169 96.8794 cv
42.1866 96.8814 42.2037 96.8823 42.2203 96.8843 cv
46.2852 97.2652 50.3623 97.0293 54.312 96.2119 cv
54.3174 96.211 54.3223 96.21 54.3272 96.209 cv
54.625 96.148 54.9224 96.082 55.2183 96.0142 cv
55.2237 96.0132 55.2286 96.0112 55.2339 96.0103 cv
60.5787 94.7764 65.669 92.4722 70.1602 89.1929 cv
72.7627 87.2915 75.1612 85.0611 77.2935 82.522 cv
74.9766 82.9302 72.5933 83.1445 70.1592 83.1445 cv
67.7261 83.1445 65.3433 82.9302 63.0274 82.522 cv
59.7608 81.9468 56.6289 80.981 53.6802 79.6782 cv
48.5938 77.4302 44.0537 74.1743 40.3116 70.1626 cv
34.4512 63.8799 30.5508 55.7466 29.5845 46.7339 cv
29.4297 45.2881 29.3477 43.8198 29.3477 42.333 cv
29.3477 33.5806 32.1045 25.4736 36.795 18.8286 cv
20.0284 29.749 8.94193 48.6577 8.94193 70.1587 cv
8.94193 71.2446 8.97123 72.3233 9.02689 73.395 cv
12.4366 80.7764 18.0782 87.2144 25.6553 91.5899 cv
cp
0 0 0 rgb
f
25.6553 91.5899 mo
25.9537 91.7617 26.2535 91.9292 26.5542 92.0933 cv
26.6534 92.147 26.7535 92.1987 26.8531 92.252 cv
27.0552 92.3604 27.2569 92.4688 27.4605 92.5723 cv
27.5821 92.6343 27.7037 92.6939 27.8247 92.7544 cv
28.0064 92.8457 28.188 92.937 28.3711 93.0249 cv
28.5049 93.0899 28.6397 93.1509 28.774 93.2144 cv
28.9454 93.2944 29.1167 93.3755 29.2891 93.4536 cv
29.3872 93.4981 29.4859 93.5405 29.5845 93.584 cv
29.628 93.6026 29.6714 93.6216 29.7144 93.6411 cv
29.8799 93.7129 30.045 93.7866 30.211 93.8569 cv
30.3594 93.9194 30.5083 93.9795 30.6573 94.041 cv
30.8174 94.106 30.9776 94.1719 31.1372 94.2354 cv
31.292 94.2964 31.4468 94.354 31.6016 94.4136 cv
31.7569 94.4727 31.9126 94.5313 32.0684 94.5889 cv
32.229 94.647 32.3887 94.7036 32.5489 94.7603 cv
32.7002 94.813 32.8511 94.8667 33.003 94.9175 cv
33.169 94.9741 33.3345 95.0278 33.5005 95.0825 cv
33.6465 95.1299 33.793 95.1758 33.9395 95.2222 cv
34.1114 95.2759 34.2832 95.3277 34.4556 95.3794 cv
34.5962 95.4209 34.7369 95.4624 34.8775 95.502 cv
35.0557 95.5532 35.2344 95.603 35.4126 95.6509 cv
35.5474 95.688 35.6827 95.7236 35.8174 95.7588 cv
36.0025 95.8067 36.187 95.854 36.3731 95.8989 cv
36.5005 95.9302 36.628 95.9605 36.7559 95.9907 cv
36.9488 96.0357 37.1426 96.0801 37.336 96.1226 cv
37.4546 96.1489 37.5733 96.1734 37.6929 96.1978 cv
37.8946 96.2402 38.0977 96.2827 38.3003 96.3213 cv
38.4087 96.3423 38.5181 96.3618 38.6265 96.3828 cv
38.8394 96.4224 39.0528 96.461 39.2662 96.4966 cv
39.3623 96.5127 39.458 96.5278 39.5542 96.543 cv
39.7803 96.5796 40.0064 96.6157 40.2334 96.6475 cv
40.3116 96.6587 40.3902 96.6694 40.4683 96.6807 cv
40.7129 96.7134 40.9576 96.7466 41.2017 96.7759 cv
41.2549 96.7822 41.3081 96.7871 41.3614 96.7935 cv
41.6304 96.8237 41.8999 96.854 42.169 96.8794 cv
42.1866 96.8814 42.2037 96.8823 42.2203 96.8843 cv
46.2852 97.2652 50.3623 97.0293 54.312 96.2119 cv
54.3174 96.211 54.3223 96.21 54.3272 96.209 cv
54.625 96.148 54.9224 96.082 55.2183 96.0142 cv
55.2237 96.0132 55.2286 96.0112 55.2339 96.0103 cv
60.5787 94.7764 65.669 92.4722 70.1602 89.1929 cv
72.7627 87.2915 75.1612 85.0611 77.2935 82.522 cv
74.9766 82.9302 72.5933 83.1445 70.1592 83.1445 cv
67.7261 83.1445 65.3433 82.9302 63.0274 82.522 cv
59.7608 81.9468 56.6289 80.981 53.6802 79.6782 cv
48.5938 77.4302 44.0537 74.1743 40.3116 70.1626 cv
34.4512 63.8799 30.5508 55.7466 29.5845 46.7339 cv
29.4297 45.2881 29.3477 43.8198 29.3477 42.333 cv
29.3477 33.5806 32.1045 25.4736 36.795 18.8286 cv
20.0284 29.749 8.94193 48.6577 8.94193 70.1587 cv
8.94193 71.2446 8.97123 72.3233 9.02689 73.395 cv
12.4366 80.7764 18.0782 87.2144 25.6553 91.5899 cv
cp
1 1 1 rgb
@
66.4678 119.416 mo
66.7852 119.233 67.0992 119.045 67.4102 118.854 cv
67.4497 118.83 67.4883 118.805 67.5274 118.78 cv
67.8033 118.609 68.0767 118.437 68.3472 118.262 cv
68.3653 118.25 68.3824 118.237 68.4009 118.226 cv
68.7442 118.001 69.2393 117.656 69.6011 117.402 cv
69.7481 117.301 69.9302 117.174 70.127 117.03 cv
70.1392 117.021 70.1509 117.012 70.1641 117.002 cv
70.1641 117.004 70.1641 117.005 70.1651 117.007 cv
70.2515 116.943 70.3345 116.875 70.4214 116.811 cv
70.4815 116.766 70.5391 116.722 70.5909 116.682 cv
77.6792 111.364 82.6265 104.058 85.087 96.0054 cv
86.6895 90.7612 87.2364 85.2031 86.6412 79.6768 cv
86.2954 76.4697 85.5684 73.2735 84.4336 70.1548 cv
83.6285 72.3677 82.6236 74.542 81.4058 76.6514 cv
80.1875 78.7617 78.8077 80.7188 77.2935 82.522 cv
75.1612 85.0611 72.7627 87.2915 70.1602 89.1929 cv
65.669 92.4722 60.5787 94.7764 55.2339 96.0103 cv
46.8638 97.9429 37.8716 97.252 29.5845 93.584 cv
28.2549 92.9956 26.9434 92.333 25.6553 91.5899 cv
18.0782 87.2144 12.4366 80.7764 9.02689 73.395 cv
10.1949 95.8198 23.4302 115.05 42.3628 124.715 cv
50.4712 125.461 58.8799 123.796 66.4678 119.416 cv
cp
0 0 0 rgb
f
66.4678 119.416 mo
66.7852 119.233 67.0992 119.045 67.4102 118.854 cv
67.4497 118.83 67.4883 118.805 67.5274 118.78 cv
67.8033 118.609 68.0767 118.437 68.3472 118.262 cv
68.3653 118.25 68.3824 118.237 68.4009 118.226 cv
68.7442 118.001 69.2393 117.656 69.6011 117.402 cv
69.7481 117.301 69.9302 117.174 70.127 117.03 cv
70.1392 117.021 70.1509 117.012 70.1641 117.002 cv
70.1641 117.004 70.1641 117.005 70.1651 117.007 cv
70.2515 116.943 70.3345 116.875 70.4214 116.811 cv
70.4815 116.766 70.5391 116.722 70.5909 116.682 cv
77.6792 111.364 82.6265 104.058 85.087 96.0054 cv
86.6895 90.7612 87.2364 85.2031 86.6412 79.6768 cv
86.2954 76.4697 85.5684 73.2735 84.4336 70.1548 cv
83.6285 72.3677 82.6236 74.542 81.4058 76.6514 cv
80.1875 78.7617 78.8077 80.7188 77.2935 82.522 cv
75.1612 85.0611 72.7627 87.2915 70.1602 89.1929 cv
65.669 92.4722 60.5787 94.7764 55.2339 96.0103 cv
46.8638 97.9429 37.8716 97.252 29.5845 93.584 cv
28.2549 92.9956 26.9434 92.333 25.6553 91.5899 cv
18.0782 87.2144 12.4366 80.7764 9.02689 73.395 cv
10.1949 95.8198 23.4302 115.05 42.3628 124.715 cv
50.4712 125.461 58.8799 123.796 66.4678 119.416 cv
cp
1 1 1 rgb
@
10 lw
283.451 70.1592 mo
283.451 106.146 254.278 135.318 218.292 135.318 cv
182.305 135.318 153.133 106.146 153.133 70.1592 cv
153.133 34.1729 182.305 5.00001 218.292 5.00001 cv
254.278 5.00001 283.451 34.1729 283.451 70.1592 cv
cp
0 0 0 rgb
@
221.838 9.58888 mo
220.621 10.3345 219.435 11.1123 218.3 11.94 cv
218.587 12.1494 218.862 12.3687 219.143 12.583 cv
218.857 12.3682 218.576 12.1509 218.286 11.939 cv
209.191 18.5781 202.865 27.8272 199.744 38.0327 cv
197.752 44.5513 197.071 51.461 197.811 58.3311 cv
198.24 62.3164 199.144 66.2891 200.554 70.1636 cv
201.553 67.4141 202.802 64.7129 204.317 62.0903 cv
205.831 59.4683 207.546 57.0366 209.427 54.7949 cv
212.076 51.6402 215.058 48.8672 218.292 46.5044 cv
223.872 42.4292 230.198 39.5664 236.84 38.0327 cv
247.242 35.6304 258.418 36.4888 268.717 41.0479 cv
270.001 41.6167 271.27 42.2608 272.525 42.9444 cv
263.048 24.0977 244.05 10.8696 221.838 9.58888 cv
cp
f
1 lw
221.838 9.58888 mo
220.621 10.3345 219.435 11.1123 218.3 11.94 cv
218.587 12.1494 218.862 12.3687 219.143 12.583 cv
218.857 12.3682 218.576 12.1509 218.286 11.939 cv
209.191 18.5781 202.865 27.8272 199.744 38.0327 cv
197.752 44.5513 197.071 51.461 197.811 58.3311 cv
198.24 62.3164 199.144 66.2891 200.554 70.1636 cv
201.553 67.4141 202.802 64.7129 204.317 62.0903 cv
205.831 59.4683 207.546 57.0366 209.427 54.7949 cv
212.076 51.6402 215.058 48.8672 218.292 46.5044 cv
223.872 42.4292 230.198 39.5664 236.84 38.0327 cv
247.242 35.6304 258.418 36.4888 268.717 41.0479 cv
270.001 41.6167 271.27 42.2608 272.525 42.9444 cv
263.048 24.0977 244.05 10.8696 221.838 9.58888 cv
cp
1 1 1 rgb
@
181.199 70.1636 mo
185.85 75.1489 191.491 79.1953 197.813 81.9893 cv
201.478 83.6084 205.369 84.8081 209.429 85.523 cv
207.547 83.2827 205.831 80.8501 204.317 78.2276 cv
202.804 75.6089 201.553 72.9107 200.554 70.1636 cv
199.144 66.2891 198.24 62.3164 197.811 58.3311 cv
197.071 51.461 197.752 44.5513 199.744 38.0327 cv
202.865 27.8272 209.191 18.5781 218.286 11.939 cv
219.422 11.1099 220.614 10.334 221.835 9.58839 cv
220.662 9.52101 219.482 9.47804 218.292 9.47804 cv
197.102 9.47804 178.46 20.3462 167.607 36.8042 cv
167.642 38.2329 167.718 39.6509 167.869 41.0479 cv
169.07 52.249 173.917 62.356 181.199 70.1636 cv
cp
0 0 0 rgb
f
181.199 70.1636 mo
185.85 75.1489 191.491 79.1953 197.813 81.9893 cv
201.478 83.6084 205.369 84.8081 209.429 85.523 cv
207.547 83.2827 205.831 80.8501 204.317 78.2276 cv
202.804 75.6089 201.553 72.9107 200.554 70.1636 cv
199.144 66.2891 198.24 62.3164 197.811 58.3311 cv
197.071 51.461 197.752 44.5513 199.744 38.0327 cv
202.865 27.8272 209.191 18.5781 218.286 11.939 cv
219.422 11.1099 220.614 10.334 221.835 9.58839 cv
220.662 9.52101 219.482 9.47804 218.292 9.47804 cv
197.102 9.47804 178.46 20.3462 167.607 36.8042 cv
167.642 38.2329 167.718 39.6509 167.869 41.0479 cv
169.07 52.249 173.917 62.356 181.199 70.1636 cv
cp
1 1 1 rgb
@
268.977 103.513 mo
268.942 102.085 268.865 100.667 268.715 99.27 cv
267.515 88.0718 262.666 77.9697 255.384 70.1636 cv
250.734 65.1773 245.094 61.1245 238.771 58.3301 cv
235.107 56.7105 231.216 55.5112 227.157 54.7949 cv
229.039 57.0366 230.754 59.4683 232.268 62.0903 cv
233.779 64.709 235.03 67.4077 236.031 70.1538 cv
237.442 74.0293 238.345 78.0015 238.775 81.9873 cv
239.514 88.855 238.834 95.7622 236.843 102.28 cv
233.723 112.488 227.396 121.738 218.298 128.379 cv
217.163 129.208 215.971 129.984 214.75 130.729 cv
215.923 130.797 217.103 130.84 218.292 130.84 cv
239.481 130.84 258.124 119.972 268.977 103.513 cv
cp
0 0 0 rgb
f
268.977 103.513 mo
268.942 102.085 268.865 100.667 268.715 99.27 cv
267.515 88.0718 262.666 77.9697 255.384 70.1636 cv
250.734 65.1773 245.094 61.1245 238.771 58.3301 cv
235.107 56.7105 231.216 55.5112 227.157 54.7949 cv
229.039 57.0366 230.754 59.4683 232.268 62.0903 cv
233.779 64.709 235.03 67.4077 236.031 70.1538 cv
237.442 74.0293 238.345 78.0015 238.775 81.9873 cv
239.514 88.855 238.834 95.7622 236.843 102.28 cv
233.723 112.488 227.396 121.738 218.298 128.379 cv
217.163 129.208 215.971 129.984 214.75 130.729 cv
215.923 130.797 217.103 130.84 218.292 130.84 cv
239.481 130.84 258.124 119.972 268.977 103.513 cv
cp
1 1 1 rgb
@
272.525 42.9444 mo
271.27 42.2608 270.001 41.6167 268.717 41.0479 cv
258.418 36.4888 247.242 35.6304 236.84 38.0327 cv
230.198 39.5664 223.872 42.4292 218.292 46.5044 cv
215.058 48.8672 212.076 51.6402 209.427 54.7949 cv
212.306 54.2881 215.268 54.0215 218.292 54.0215 cv
221.315 54.0215 224.278 54.2881 227.157 54.7949 cv
231.216 55.5112 235.107 56.7105 238.771 58.3301 cv
245.094 61.1245 250.734 65.1773 255.384 70.1636 cv
262.666 77.9697 267.515 88.0718 268.715 99.27 cv
268.865 100.667 268.942 102.085 268.977 103.513 cv
275.288 93.9409 278.973 82.4824 278.973 70.1587 cv
278.973 60.3706 276.642 51.1319 272.525 42.9444 cv
cp
0 0 0 rgb
f
272.525 42.9444 mo
271.27 42.2608 270.001 41.6167 268.717 41.0479 cv
258.418 36.4888 247.242 35.6304 236.84 38.0327 cv
230.198 39.5664 223.872 42.4292 218.292 46.5044 cv
215.058 48.8672 212.076 51.6402 209.427 54.7949 cv
212.306 54.2881 215.268 54.0215 218.292 54.0215 cv
221.315 54.0215 224.278 54.2881 227.157 54.7949 cv
231.216 55.5112 235.107 56.7105 238.771 58.3301 cv
245.094 61.1245 250.734 65.1773 255.384 70.1636 cv
262.666 77.9697 267.515 88.0718 268.715 99.27 cv
268.865 100.667 268.942 102.085 268.977 103.513 cv
275.288 93.9409 278.973 82.4824 278.973 70.1587 cv
278.973 60.3706 276.642 51.1319 272.525 42.9444 cv
cp
1 1 1 rgb
@
164.474 97.6148 mo
164.726 97.7495 164.977 97.8833 165.23 98.0137 cv
165.38 98.0908 165.531 98.1646 165.682 98.2388 cv
165.908 98.353 166.132 98.4658 166.36 98.5752 cv
166.526 98.6563 166.694 98.7319 166.861 98.8111 cv
167.074 98.9111 167.286 99.0108 167.502 99.1089 cv
167.623 99.1636 167.747 99.2163 167.869 99.27 cv
167.923 99.2935 167.977 99.3164 168.029 99.3408 cv
168.235 99.4302 168.44 99.522 168.648 99.6094 cv
168.832 99.688 169.017 99.7622 169.202 99.8384 cv
169.4 99.9194 169.6 100.001 169.798 100.08 cv
169.99 100.155 170.182 100.227 170.375 100.3 cv
170.569 100.375 170.761 100.448 170.955 100.519 cv
171.155 100.591 171.353 100.662 171.553 100.732 cv
171.741 100.798 171.928 100.864 172.117 100.928 cv
172.322 100.998 172.529 101.064 172.735 101.133 cv
172.916 101.191 173.098 101.249 173.28 101.305 cv
173.494 101.374 173.708 101.438 173.922 101.501 cv
174.096 101.553 174.272 101.605 174.446 101.654 cv
174.668 101.717 174.89 101.78 175.112 101.839 cv
175.278 101.884 175.446 101.93 175.614 101.973 cv
175.844 102.032 176.074 102.092 176.304 102.147 cv
176.463 102.186 176.621 102.224 176.78 102.261 cv
177.021 102.317 177.261 102.373 177.502 102.425 cv
177.648 102.458 177.796 102.488 177.944 102.519 cv
178.195 102.571 178.448 102.624 178.7 102.672 cv
178.835 102.698 178.97 102.722 179.105 102.748 cv
179.37 102.797 179.635 102.846 179.899 102.89 cv
180.02 102.91 180.139 102.929 180.258 102.948 cv
180.539 102.993 180.82 103.038 181.103 103.078 cv
181.199 103.091 181.297 103.104 181.395 103.118 cv
181.698 103.159 182.002 103.2 182.305 103.237 cv
182.371 103.246 182.438 103.251 182.503 103.259 cv
182.838 103.296 183.173 103.334 183.508 103.366 cv
183.529 103.368 183.551 103.369 183.57 103.372 cv
188.624 103.845 193.689 103.552 198.598 102.537 cv
198.605 102.535 198.61 102.534 198.617 102.533 cv
198.987 102.457 199.357 102.375 199.725 102.29 cv
199.731 102.29 199.738 102.287 199.743 102.286 cv
206.386 100.752 212.712 97.8892 218.293 93.813 cv
221.527 91.4507 224.508 88.6787 227.158 85.523 cv
224.278 86.0308 221.317 86.2969 218.292 86.2969 cv
215.268 86.2969 212.308 86.0308 209.429 85.523 cv
205.369 84.8081 201.478 83.6084 197.813 81.9893 cv
191.491 79.1953 185.85 75.1489 181.199 70.1636 cv
173.917 62.356 169.07 52.249 167.869 41.0479 cv
167.718 39.6509 167.642 38.2329 167.607 36.8042 cv
161.294 46.3765 157.61 57.8355 157.61 70.1587 cv
157.61 79.9585 159.948 89.207 164.074 97.4009 cv
164.083 97.4063 164.092 97.4121 164.103 97.4175 cv
164.226 97.4849 164.35 97.5498 164.474 97.6148 cv
cp
0 0 0 rgb
f
164.474 97.6148 mo
164.726 97.7495 164.977 97.8833 165.23 98.0137 cv
165.38 98.0908 165.531 98.1646 165.682 98.2388 cv
165.908 98.353 166.132 98.4658 166.36 98.5752 cv
166.526 98.6563 166.694 98.7319 166.861 98.8111 cv
167.074 98.9111 167.286 99.0108 167.502 99.1089 cv
167.623 99.1636 167.747 99.2163 167.869 99.27 cv
167.923 99.2935 167.977 99.3164 168.029 99.3408 cv
168.235 99.4302 168.44 99.522 168.648 99.6094 cv
168.832 99.688 169.017 99.7622 169.202 99.8384 cv
169.4 99.9194 169.6 100.001 169.798 100.08 cv
169.99 100.155 170.182 100.227 170.375 100.3 cv
170.569 100.375 170.761 100.448 170.955 100.519 cv
171.155 100.591 171.353 100.662 171.553 100.732 cv
171.741 100.798 171.928 100.864 172.117 100.928 cv
172.322 100.998 172.529 101.064 172.735 101.133 cv
172.916 101.191 173.098 101.249 173.28 101.305 cv
173.494 101.374 173.708 101.438 173.922 101.501 cv
174.096 101.553 174.272 101.605 174.446 101.654 cv
174.668 101.717 174.89 101.78 175.112 101.839 cv
175.278 101.884 175.446 101.93 175.614 101.973 cv
175.844 102.032 176.074 102.092 176.304 102.147 cv
176.463 102.186 176.621 102.224 176.78 102.261 cv
177.021 102.317 177.261 102.373 177.502 102.425 cv
177.648 102.458 177.796 102.488 177.944 102.519 cv
178.195 102.571 178.448 102.624 178.7 102.672 cv
178.835 102.698 178.97 102.722 179.105 102.748 cv
179.37 102.797 179.635 102.846 179.899 102.89 cv
180.02 102.91 180.139 102.929 180.258 102.948 cv
180.539 102.993 180.82 103.038 181.103 103.078 cv
181.199 103.091 181.297 103.104 181.395 103.118 cv
181.698 103.159 182.002 103.2 182.305 103.237 cv
182.371 103.246 182.438 103.251 182.503 103.259 cv
182.838 103.296 183.173 103.334 183.508 103.366 cv
183.529 103.368 183.551 103.369 183.57 103.372 cv
188.624 103.845 193.689 103.552 198.598 102.537 cv
198.605 102.535 198.61 102.534 198.617 102.533 cv
198.987 102.457 199.357 102.375 199.725 102.29 cv
199.731 102.29 199.738 102.287 199.743 102.286 cv
206.386 100.752 212.712 97.8892 218.293 93.813 cv
221.527 91.4507 224.508 88.6787 227.158 85.523 cv
224.278 86.0308 221.317 86.2969 218.292 86.2969 cv
215.268 86.2969 212.308 86.0308 209.429 85.523 cv
205.369 84.8081 201.478 83.6084 197.813 81.9893 cv
191.491 79.1953 185.85 75.1489 181.199 70.1636 cv
173.917 62.356 169.07 52.249 167.869 41.0479 cv
167.718 39.6509 167.642 38.2329 167.607 36.8042 cv
161.294 46.3765 157.61 57.8355 157.61 70.1587 cv
157.61 79.9585 159.948 89.207 164.074 97.4009 cv
164.083 97.4063 164.092 97.4121 164.103 97.4175 cv
164.226 97.4849 164.35 97.5498 164.474 97.6148 cv
cp
1 1 1 rgb
@
215.021 130.582 mo
215.364 130.371 215.704 130.156 216.04 129.938 cv
216.063 129.923 216.083 129.908 216.106 129.894 cv
216.534 129.615 217.148 129.186 217.598 128.87 cv
217.781 128.745 218.007 128.586 218.252 128.407 cv
218.267 128.396 218.281 128.384 218.297 128.373 cv
218.297 128.376 218.297 128.376 218.298 128.379 cv
218.407 128.298 218.51 128.215 218.617 128.135 cv
218.692 128.079 218.764 128.025 218.828 127.974 cv
227.637 121.366 233.785 112.287 236.843 102.28 cv
238.834 95.7622 239.514 88.855 238.775 81.9873 cv
238.345 78.0015 237.442 74.0293 236.031 70.1538 cv
235.03 72.9043 233.781 75.606 232.268 78.2276 cv
230.754 80.8501 229.04 83.2827 227.158 85.523 cv
224.508 88.6787 221.527 91.4507 218.293 93.813 cv
212.712 97.8892 206.386 100.752 199.743 102.286 cv
189.342 104.687 178.167 103.828 167.869 99.27 cv
166.582 98.7007 165.314 98.0571 164.059 97.3736 cv
173.54 116.229 192.552 129.462 214.778 130.731 cv
214.811 130.712 214.844 130.693 214.876 130.674 cv
214.924 130.644 214.973 130.613 215.021 130.582 cv
cp
0 0 0 rgb
f
215.021 130.582 mo
215.364 130.371 215.704 130.156 216.04 129.938 cv
216.063 129.923 216.083 129.908 216.106 129.894 cv
216.534 129.615 217.148 129.186 217.598 128.87 cv
217.781 128.745 218.007 128.586 218.252 128.407 cv
218.267 128.396 218.281 128.384 218.297 128.373 cv
218.297 128.376 218.297 128.376 218.298 128.379 cv
218.407 128.298 218.51 128.215 218.617 128.135 cv
218.692 128.079 218.764 128.025 218.828 127.974 cv
227.637 121.366 233.785 112.287 236.843 102.28 cv
238.834 95.7622 239.514 88.855 238.775 81.9873 cv
238.345 78.0015 237.442 74.0293 236.031 70.1538 cv
235.03 72.9043 233.781 75.606 232.268 78.2276 cv
230.754 80.8501 229.04 83.2827 227.158 85.523 cv
224.508 88.6787 221.527 91.4507 218.293 93.813 cv
212.712 97.8892 206.386 100.752 199.743 102.286 cv
189.342 104.687 178.167 103.828 167.869 99.27 cv
166.582 98.7007 165.314 98.0571 164.059 97.3736 cv
173.54 116.229 192.552 129.462 214.778 130.731 cv
214.811 130.712 214.844 130.693 214.876 130.674 cv
214.924 130.644 214.973 130.613 215.021 130.582 cv
cp
1 1 1 rgb
@
10 lw
431.585 70.1592 mo
431.585 106.146 402.412 135.318 366.426 135.318 cv
330.439 135.318 301.266 106.146 301.266 70.1592 cv
301.266 34.1729 330.439 5.00001 366.426 5.00001 cv
402.412 5.00001 431.585 34.1729 431.585 70.1592 cv
cp
0 0 0 rgb
@
366.427 10.4932 mo
361.492 10.4932 356.701 11.1035 352.116 12.2329 cv
348.234 17.7412 345.286 23.8067 343.342 30.1724 cv
340.859 38.2861 340.014 46.8862 340.933 55.4375 cv
341.466 60.3975 342.591 65.3423 344.347 70.1651 cv
345.593 66.7422 347.147 63.3804 349.031 60.1162 cv
350.915 56.8526 353.05 53.8257 355.392 51.0361 cv
358.689 47.1094 362.399 43.6582 366.427 40.7173 cv
373.37 35.6445 381.244 32.0816 389.511 30.1724 cv
395.989 28.6768 402.707 28.1973 409.409 28.8018 cv
398.556 17.5225 383.315 10.4932 366.427 10.4932 cv
cp
f
1 lw
366.427 10.4932 mo
361.492 10.4932 356.701 11.1035 352.116 12.2329 cv
348.234 17.7412 345.286 23.8067 343.342 30.1724 cv
340.859 38.2861 340.014 46.8862 340.933 55.4375 cv
341.466 60.3975 342.591 65.3423 344.347 70.1651 cv
345.593 66.7422 347.147 63.3804 349.031 60.1162 cv
350.915 56.8526 353.05 53.8257 355.392 51.0361 cv
358.689 47.1094 362.399 43.6582 366.427 40.7173 cv
373.37 35.6445 381.244 32.0816 389.511 30.1724 cv
395.989 28.6768 402.707 28.1973 409.409 28.8018 cv
398.556 17.5225 383.315 10.4932 366.427 10.4932 cv
cp
1 1 1 rgb
@
340.935 84.8833 mo
345.497 86.8985 350.34 88.3931 355.394 89.2827 cv
353.053 86.4932 350.915 83.4663 349.031 80.2017 cv
347.15 76.9424 345.593 73.5835 344.347 70.1651 cv
342.591 65.3423 341.466 60.3975 340.933 55.4375 cv
340.014 46.8862 340.859 38.2861 343.342 30.1724 cv
345.286 23.8067 348.234 17.7412 352.116 12.2329 cv
331.42 17.3291 314.985 33.2183 309.106 53.5938 cv
311.937 59.71 315.717 65.2969 320.259 70.1651 cv
326.045 76.3701 333.067 81.4068 340.935 84.8833 cv
cp
0 0 0 rgb
f
340.935 84.8833 mo
345.497 86.8985 350.34 88.3931 355.394 89.2827 cv
353.053 86.4932 350.915 83.4663 349.031 80.2017 cv
347.15 76.9424 345.593 73.5835 344.347 70.1651 cv
342.591 65.3423 341.466 60.3975 340.933 55.4375 cv
340.014 46.8862 340.859 38.2861 343.342 30.1724 cv
345.286 23.8067 348.234 17.7412 352.116 12.2329 cv
331.42 17.3291 314.985 33.2183 309.106 53.5938 cv
311.937 59.71 315.717 65.2969 320.259 70.1651 cv
326.045 76.3701 333.067 81.4068 340.935 84.8833 cv
cp
1 1 1 rgb
@
423.742 86.728 mo
420.912 80.6152 417.132 75.0318 412.594 70.1651 cv
406.806 63.958 399.786 58.9136 391.915 55.4361 cv
387.355 53.4204 382.511 51.9273 377.458 51.0361 cv
379.802 53.8257 381.936 56.8526 383.819 60.1162 cv
385.703 63.3755 387.26 66.7344 388.503 70.1528 cv
390.258 74.9771 391.384 79.9204 391.917 84.8814 cv
392.839 93.4297 391.994 102.026 389.515 110.139 cv
387.569 116.507 384.62 122.575 380.734 128.085 cv
401.429 122.99 417.862 107.102 423.742 86.728 cv
cp
0 0 0 rgb
f
423.742 86.728 mo
420.912 80.6152 417.132 75.0318 412.594 70.1651 cv
406.806 63.958 399.786 58.9136 391.915 55.4361 cv
387.355 53.4204 382.511 51.9273 377.458 51.0361 cv
379.802 53.8257 381.936 56.8526 383.819 60.1162 cv
385.703 63.3755 387.26 66.7344 388.503 70.1528 cv
390.258 74.9771 391.384 79.9204 391.917 84.8814 cv
392.839 93.4297 391.994 102.026 389.515 110.139 cv
387.569 116.507 384.62 122.575 380.734 128.085 cv
401.429 122.99 417.862 107.102 423.742 86.728 cv
cp
1 1 1 rgb
@
409.409 28.8018 mo
402.707 28.1973 395.989 28.6768 389.511 30.1724 cv
381.244 32.0816 373.37 35.6445 366.427 40.7173 cv
362.399 43.6582 358.689 47.1094 355.392 51.0361 cv
358.976 50.4048 362.661 50.0737 366.427 50.0737 cv
370.188 50.0737 373.878 50.4048 377.458 51.0361 cv
382.511 51.9273 387.355 53.4204 391.915 55.4361 cv
399.786 58.9136 406.806 63.958 412.594 70.1651 cv
417.132 75.0318 420.912 80.6152 423.742 86.728 cv
425.262 81.4658 426.092 75.9107 426.092 70.1592 cv
426.092 54.0962 419.732 39.5278 409.409 28.8018 cv
cp
0 0 0 rgb
f
409.409 28.8018 mo
402.707 28.1973 395.989 28.6768 389.511 30.1724 cv
381.244 32.0816 373.37 35.6445 366.427 40.7173 cv
362.399 43.6582 358.689 47.1094 355.392 51.0361 cv
358.976 50.4048 362.661 50.0737 366.427 50.0737 cv
370.188 50.0737 373.878 50.4048 377.458 51.0361 cv
382.511 51.9273 387.355 53.4204 391.915 55.4361 cv
399.786 58.9136 406.806 63.958 412.594 70.1651 cv
417.132 75.0318 420.912 80.6152 423.742 86.728 cv
425.262 81.4658 426.092 75.9107 426.092 70.1592 cv
426.092 54.0962 419.732 39.5278 409.409 28.8018 cv
cp
1 1 1 rgb
@
341.912 110.458 mo
341.921 110.456 341.93 110.455 341.936 110.454 cv
342.397 110.358 342.857 110.256 343.315 110.152 cv
343.324 110.15 343.332 110.146 343.338 110.146 cv
351.605 108.237 359.48 104.673 366.427 99.6006 cv
370.452 96.6602 374.164 93.21 377.458 89.2827 cv
373.878 89.9146 370.188 90.2442 366.427 90.2442 cv
362.661 90.2442 358.976 89.9146 355.394 89.2827 cv
350.34 88.3931 345.497 86.8985 340.935 84.8833 cv
333.067 81.4068 326.045 76.3701 320.259 70.1651 cv
315.717 65.2969 311.937 59.71 309.106 53.5938 cv
307.589 58.8555 306.76 64.4087 306.76 70.1592 cv
306.76 86.2207 313.117 100.788 323.44 111.515 cv
329.65 112.073 335.877 111.707 341.912 110.458 cv
cp
0 0 0 rgb
f
341.912 110.458 mo
341.921 110.456 341.93 110.455 341.936 110.454 cv
342.397 110.358 342.857 110.256 343.315 110.152 cv
343.324 110.15 343.332 110.146 343.338 110.146 cv
351.605 108.237 359.48 104.673 366.427 99.6006 cv
370.452 96.6602 374.164 93.21 377.458 89.2827 cv
373.878 89.9146 370.188 90.2442 366.427 90.2442 cv
362.661 90.2442 358.976 89.9146 355.394 89.2827 cv
350.34 88.3931 345.497 86.8985 340.935 84.8833 cv
333.067 81.4068 326.045 76.3701 320.259 70.1651 cv
315.717 65.2969 311.937 59.71 309.106 53.5938 cv
307.589 58.8555 306.76 64.4087 306.76 70.1592 cv
306.76 86.2207 313.117 100.788 323.44 111.515 cv
329.65 112.073 335.877 111.707 341.912 110.458 cv
cp
1 1 1 rgb
@
391.917 84.8814 mo
391.384 79.9204 390.258 74.9771 388.503 70.1528 cv
387.258 73.5762 385.706 76.9385 383.819 80.2017 cv
381.936 83.4663 379.802 86.4932 377.458 89.2827 cv
374.164 93.21 370.452 96.6602 366.427 99.6006 cv
359.48 104.673 351.605 108.237 343.338 110.146 cv
336.861 111.642 330.144 112.121 323.441 111.516 cv
334.296 122.795 349.535 129.824 366.427 129.824 cv
371.353 129.824 376.138 129.215 380.716 128.09 cv
384.607 122.579 387.567 116.512 389.515 110.139 cv
391.994 102.026 392.839 93.4297 391.917 84.8814 cv
cp
0 0 0 rgb
f
391.917 84.8814 mo
391.384 79.9204 390.258 74.9771 388.503 70.1528 cv
387.258 73.5762 385.706 76.9385 383.819 80.2017 cv
381.936 83.4663 379.802 86.4932 377.458 89.2827 cv
374.164 93.21 370.452 96.6602 366.427 99.6006 cv
359.48 104.673 351.605 108.237 343.338 110.146 cv
336.861 111.642 330.144 112.121 323.441 111.516 cv
334.296 122.795 349.535 129.824 366.427 129.824 cv
371.353 129.824 376.138 129.215 380.716 128.09 cv
384.607 122.579 387.567 116.512 389.515 110.139 cv
391.994 102.026 392.839 93.4297 391.917 84.8814 cv
cp
1 1 1 rgb
@
10 lw
579.718 70.1592 mo
579.718 106.146 550.545 135.318 514.559 135.318 cv
478.572 135.318 449.399 106.146 449.399 70.1592 cv
449.399 34.1729 478.572 5.00001 514.559 5.00001 cv
550.545 5.00001 579.718 34.1729 579.718 70.1592 cv
cp
0 0 0 rgb
@
483.234 17.7466 mo
480.191 28.2695 479.164 39.3643 480.35 50.4038 cv
481.066 57.0601 482.577 63.6953 484.932 70.1655 cv
486.604 65.5733 488.689 61.0611 491.218 56.6826 cv
493.746 52.3037 496.609 48.2417 499.753 44.4981 cv
504.178 39.229 509.155 34.5972 514.561 30.6509 cv
523.523 24.103 533.648 19.4522 544.28 16.8242 cv
535.482 11.9111 525.353 9.10011 514.561 9.10011 cv
503.106 9.10011 492.394 12.2603 483.234 17.7466 cv
cp
f
1 lw
483.234 17.7466 mo
480.191 28.2695 479.164 39.3643 480.35 50.4038 cv
481.066 57.0601 482.577 63.6953 484.932 70.1655 cv
486.604 65.5733 488.689 61.0611 491.218 56.6826 cv
493.746 52.3037 496.609 48.2417 499.753 44.4981 cv
504.178 39.229 509.155 34.5972 514.561 30.6509 cv
523.523 24.103 533.648 19.4522 544.28 16.8242 cv
535.482 11.9111 525.353 9.10011 514.561 9.10011 cv
503.106 9.10011 492.394 12.2603 483.234 17.7466 cv
cp
1 1 1 rgb
@
480.354 89.916 mo
486.474 92.6206 492.975 94.626 499.757 95.8194 cv
496.613 92.0767 493.746 88.0142 491.218 83.6353 cv
488.693 79.2603 486.604 74.7544 484.932 70.1655 cv
482.577 63.6953 481.066 57.0601 480.35 50.4038 cv
479.164 39.3643 480.191 28.2695 483.234 17.7466 cv
465.425 28.4136 453.5 47.8911 453.5 70.1602 cv
453.5 70.4751 453.519 70.7861 453.522 71.1001 cv
461.111 78.9922 470.201 85.4307 480.354 89.916 cv
cp
0 0 0 rgb
f
480.354 89.916 mo
486.474 92.6206 492.975 94.626 499.757 95.8194 cv
496.613 92.0767 493.746 88.0142 491.218 83.6353 cv
488.693 79.2603 486.604 74.7544 484.932 70.1655 cv
482.577 63.6953 481.066 57.0601 480.35 50.4038 cv
479.164 39.3643 480.191 28.2695 483.234 17.7466 cv
465.425 28.4136 453.5 47.8911 453.5 70.1602 cv
453.5 70.4751 453.519 70.7861 453.522 71.1001 cv
461.111 78.9922 470.201 85.4307 480.354 89.916 cv
cp
1 1 1 rgb
@
575.615 70.1602 mo
575.615 69.8467 575.597 69.5401 575.593 69.2276 cv
568.002 61.3364 558.918 54.8882 548.764 50.4019 cv
542.642 47.6978 536.143 45.6939 529.364 44.4981 cv
532.508 48.2417 535.371 52.3037 537.899 56.6826 cv
540.428 61.0557 542.517 65.5635 544.184 70.1504 cv
546.54 76.6226 548.051 83.2578 548.768 89.9146 cv
549.957 100.954 548.93 112.048 545.887 122.57 cv
563.692 111.903 575.615 92.4268 575.615 70.1602 cv
cp
0 0 0 rgb
f
575.615 70.1602 mo
575.615 69.8467 575.597 69.5401 575.593 69.2276 cv
568.002 61.3364 558.918 54.8882 548.764 50.4019 cv
542.642 47.6978 536.143 45.6939 529.364 44.4981 cv
532.508 48.2417 535.371 52.3037 537.899 56.6826 cv
540.428 61.0557 542.517 65.5635 544.184 70.1504 cv
546.54 76.6226 548.051 83.2578 548.768 89.9146 cv
549.957 100.954 548.93 112.048 545.887 122.57 cv
563.692 111.903 575.615 92.4268 575.615 70.1602 cv
cp
1 1 1 rgb
@
544.28 16.8242 mo
533.648 19.4522 523.523 24.103 514.561 30.6509 cv
509.155 34.5972 504.178 39.229 499.753 44.4981 cv
504.563 43.6509 509.508 43.207 514.561 43.207 cv
519.607 43.207 524.559 43.6509 529.364 44.4981 cv
536.143 45.6939 542.642 47.6978 548.764 50.4019 cv
558.918 54.8882 568.002 61.3364 575.593 69.2276 cv
575.253 46.6909 562.716 27.1206 544.28 16.8242 cv
cp
0 0 0 rgb
f
544.28 16.8242 mo
533.648 19.4522 523.523 24.103 514.561 30.6509 cv
509.155 34.5972 504.178 39.229 499.753 44.4981 cv
504.563 43.6509 509.508 43.207 514.561 43.207 cv
519.607 43.207 524.559 43.6509 529.364 44.4981 cv
536.143 45.6939 542.642 47.6978 548.764 50.4019 cv
558.918 54.8882 568.002 61.3364 575.593 69.2276 cv
575.253 46.6909 562.716 27.1206 544.28 16.8242 cv
cp
1 1 1 rgb
@
529.364 95.8194 mo
524.559 96.667 519.607 97.1109 514.561 97.1109 cv
509.508 97.1109 504.563 96.667 499.757 95.8194 cv
492.975 94.626 486.474 92.6206 480.354 89.916 cv
470.201 85.4307 461.111 78.9922 453.522 71.1001 cv
453.866 93.6309 466.402 113.197 484.835 123.492 cv
495.469 120.866 505.592 116.213 514.561 109.665 cv
519.96 105.721 524.941 101.089 529.364 95.8194 cv
cp
0 0 0 rgb
f
529.364 95.8194 mo
524.559 96.667 519.607 97.1109 514.561 97.1109 cv
509.508 97.1109 504.563 96.667 499.757 95.8194 cv
492.975 94.626 486.474 92.6206 480.354 89.916 cv
470.201 85.4307 461.111 78.9922 453.522 71.1001 cv
453.866 93.6309 466.402 113.197 484.835 123.492 cv
495.469 120.866 505.592 116.213 514.561 109.665 cv
519.96 105.721 524.941 101.089 529.364 95.8194 cv
cp
1 1 1 rgb
@
548.768 89.9146 mo
548.051 83.2578 546.54 76.6226 544.184 70.1504 cv
542.514 74.7446 540.432 79.2564 537.899 83.6353 cv
535.371 88.0142 532.508 92.0767 529.364 95.8194 cv
524.941 101.089 519.96 105.721 514.561 109.665 cv
505.592 116.213 495.469 120.866 484.835 123.492 cv
493.633 128.406 503.767 131.218 514.561 131.218 cv
526.015 131.218 536.728 128.057 545.887 122.57 cv
548.93 112.048 549.957 100.954 548.768 89.9146 cv
cp
0 0 0 rgb
f
548.768 89.9146 mo
548.051 83.2578 546.54 76.6226 544.184 70.1504 cv
542.514 74.7446 540.432 79.2564 537.899 83.6353 cv
535.371 88.0142 532.508 92.0767 529.364 95.8194 cv
524.941 101.089 519.96 105.721 514.561 109.665 cv
505.592 116.213 495.469 120.866 484.835 123.492 cv
493.633 128.406 503.767 131.218 514.561 131.218 cv
526.015 131.218 536.728 128.057 545.887 122.57 cv
548.93 112.048 549.957 100.954 548.768 89.9146 cv
cp
1 1 1 rgb
@
10 lw
135.318 215.159 mo
135.318 251.146 106.146 280.318 70.1592 280.318 cv
34.1729 280.318 5.00004 251.146 5.00004 215.159 cv
5.00004 179.173 34.1729 150 70.1592 150 cv
106.146 150 135.318 179.173 135.318 215.159 cv
cp
0 0 0 rgb
@
97.9537 160.602 mo
89.8467 159.856 81.4385 161.521 73.8516 165.902 cv
72.565 166.645 71.3394 167.455 70.1656 168.312 cv
70.3965 168.48 70.6182 168.656 70.8448 168.829 cv
70.6143 168.656 70.3872 168.48 70.1543 168.311 cv
62.836 173.653 57.7452 181.095 55.2344 189.307 cv
53.6309 194.553 53.083 200.113 53.6787 205.641 cv
54.0235 208.848 54.751 212.044 55.8858 215.163 cv
56.6905 212.95 57.6954 210.776 58.9136 208.666 cv
60.1319 206.556 61.5122 204.599 63.0259 202.796 cv
65.1578 200.257 67.5562 198.026 70.1592 196.125 cv
74.6495 192.845 79.7398 190.542 85.085 189.307 cv
93.4551 187.375 102.447 188.065 110.735 191.734 cv
112.064 192.322 113.376 192.985 114.664 193.728 cv
122.24 198.103 127.882 204.541 131.292 211.923 cv
130.123 189.497 116.888 170.267 97.9537 160.602 cv
cp
f
2 lw
97.9537 160.602 mo
89.8467 159.856 81.4385 161.521 73.8516 165.902 cv
72.565 166.645 71.3394 167.455 70.1656 168.312 cv
70.3965 168.48 70.6182 168.656 70.8448 168.829 cv
70.6143 168.656 70.3872 168.48 70.1543 168.311 cv
62.836 173.653 57.7452 181.095 55.2344 189.307 cv
53.6309 194.553 53.083 200.113 53.6787 205.641 cv
54.0235 208.848 54.751 212.044 55.8858 215.163 cv
56.6905 212.95 57.6954 210.776 58.9136 208.666 cv
60.1319 206.556 61.5122 204.599 63.0259 202.796 cv
65.1578 200.257 67.5562 198.026 70.1592 196.125 cv
74.6495 192.845 79.7398 190.542 85.085 189.307 cv
93.4551 187.375 102.447 188.065 110.735 191.734 cv
112.064 192.322 113.376 192.985 114.664 193.728 cv
122.24 198.103 127.882 204.541 131.292 211.923 cv
130.123 189.497 116.888 170.267 97.9537 160.602 cv
cp
1 1 1 rgb
@
29.5845 191.734 mo
30.5508 200.747 34.4512 208.88 40.3116 215.163 cv
44.0537 219.174 48.5938 222.43 53.6802 224.678 cv
56.6289 225.981 59.7608 226.947 63.0274 227.522 cv
61.5127 225.719 60.1319 223.762 58.9136 221.651 cv
57.6968 219.544 56.6905 217.373 55.8858 215.163 cv
54.751 212.044 54.0235 208.848 53.6787 205.641 cv
53.083 200.113 53.6309 194.553 55.2344 189.307 cv
57.7452 181.095 62.836 173.653 70.1543 168.311 cv
71.3301 167.452 72.562 166.646 73.8516 165.902 cv
81.4385 161.521 89.8467 159.856 97.9537 160.602 cv
89.6128 156.343 80.167 153.941 70.1592 153.941 cv
57.8511 153.941 46.3931 157.577 36.795 163.829 cv
32.1045 170.474 29.3477 178.581 29.3477 187.333 cv
29.3477 188.82 29.4297 190.288 29.5845 191.734 cv
cp
0 0 0 rgb
f
29.5845 191.734 mo
30.5508 200.747 34.4512 208.88 40.3116 215.163 cv
44.0537 219.174 48.5938 222.43 53.6802 224.678 cv
56.6289 225.981 59.7608 226.947 63.0274 227.522 cv
61.5127 225.719 60.1319 223.762 58.9136 221.651 cv
57.6968 219.544 56.6905 217.373 55.8858 215.163 cv
54.751 212.044 54.0235 208.848 53.6787 205.641 cv
53.083 200.113 53.6309 194.553 55.2344 189.307 cv
57.7452 181.095 62.836 173.653 70.1543 168.311 cv
71.3301 167.452 72.562 166.646 73.8516 165.902 cv
81.4385 161.521 89.8467 159.856 97.9537 160.602 cv
89.6128 156.343 80.167 153.941 70.1592 153.941 cv
57.8511 153.941 46.3931 157.577 36.795 163.829 cv
32.1045 170.474 29.3477 178.581 29.3477 187.333 cv
29.3477 188.82 29.4297 190.288 29.5845 191.734 cv
cp
1 1 1 rgb
@
110.734 238.584 mo
109.768 229.573 105.866 221.444 100.007 215.163 cv
96.2642 211.15 91.7261 207.889 86.6387 205.64 cv
83.6895 204.337 80.5591 203.372 77.2925 202.796 cv
78.8067 204.599 80.1875 206.556 81.4058 208.666 cv
82.6216 210.773 83.6285 212.945 84.4336 215.155 cv
85.5684 218.273 86.2954 221.47 86.6412 224.677 cv
87.2364 230.203 86.6895 235.761 85.087 241.005 cv
82.5762 249.22 77.4849 256.664 70.1651 262.007 cv
68.9883 262.865 67.7574 263.671 66.4678 264.416 cv
58.8799 268.796 50.4712 270.461 42.3628 269.715 cv
50.7041 273.974 60.1509 276.376 70.1592 276.376 cv
82.4678 276.376 93.9253 272.741 103.523 266.489 cv
108.214 259.844 110.971 251.737 110.971 242.985 cv
110.971 241.498 110.889 240.03 110.734 238.584 cv
cp
0 0 0 rgb
f
110.734 238.584 mo
109.768 229.573 105.866 221.444 100.007 215.163 cv
96.2642 211.15 91.7261 207.889 86.6387 205.64 cv
83.6895 204.337 80.5591 203.372 77.2925 202.796 cv
78.8067 204.599 80.1875 206.556 81.4058 208.666 cv
82.6216 210.773 83.6285 212.945 84.4336 215.155 cv
85.5684 218.273 86.2954 221.47 86.6412 224.677 cv
87.2364 230.203 86.6895 235.761 85.087 241.005 cv
82.5762 249.22 77.4849 256.664 70.1651 262.007 cv
68.9883 262.865 67.7574 263.671 66.4678 264.416 cv
58.8799 268.796 50.4712 270.461 42.3628 269.715 cv
50.7041 273.974 60.1509 276.376 70.1592 276.376 cv
82.4678 276.376 93.9253 272.741 103.523 266.489 cv
108.214 259.844 110.971 251.737 110.971 242.985 cv
110.971 241.498 110.889 240.03 110.734 238.584 cv
cp
1 1 1 rgb
@
131.377 215.159 mo
131.377 214.073 131.348 212.995 131.292 211.923 cv
127.882 204.541 122.24 198.103 114.664 193.728 cv
113.376 192.985 112.064 192.322 110.735 191.734 cv
102.447 188.065 93.4551 187.375 85.085 189.307 cv
79.7398 190.542 74.6495 192.845 70.1592 196.125 cv
67.5562 198.026 65.1578 200.257 63.0259 202.796 cv
65.3423 202.388 67.7261 202.173 70.1592 202.173 cv
72.5923 202.173 74.9766 202.388 77.2925 202.796 cv
80.5591 203.372 83.6895 204.337 86.6387 205.64 cv
91.7261 207.889 96.2642 211.15 100.007 215.163 cv
105.866 221.444 109.768 229.573 110.734 238.584 cv
110.889 240.03 110.971 241.498 110.971 242.985 cv
110.971 251.737 108.214 259.844 103.523 266.489 cv
120.29 255.569 131.377 236.66 131.377 215.159 cv
cp
0 0 0 rgb
f
131.377 215.159 mo
131.377 214.073 131.348 212.995 131.292 211.923 cv
127.882 204.541 122.24 198.103 114.664 193.728 cv
113.376 192.985 112.064 192.322 110.735 191.734 cv
102.447 188.065 93.4551 187.375 85.085 189.307 cv
79.7398 190.542 74.6495 192.845 70.1592 196.125 cv
67.5562 198.026 65.1578 200.257 63.0259 202.796 cv
65.3423 202.388 67.7261 202.173 70.1592 202.173 cv
72.5923 202.173 74.9766 202.388 77.2925 202.796 cv
80.5591 203.372 83.6895 204.337 86.6387 205.64 cv
91.7261 207.889 96.2642 211.15 100.007 215.163 cv
105.866 221.444 109.768 229.573 110.734 238.584 cv
110.889 240.03 110.971 241.498 110.971 242.985 cv
110.971 251.737 108.214 259.844 103.523 266.489 cv
120.29 255.569 131.377 236.66 131.377 215.159 cv
cp
1 1 1 rgb
@
25.6553 236.59 mo
25.9537 236.762 26.2535 236.929 26.5542 237.093 cv
26.6534 237.147 26.7535 237.199 26.8531 237.252 cv
27.0552 237.36 27.2569 237.469 27.4605 237.572 cv
27.5821 237.634 27.7037 237.694 27.8247 237.754 cv
28.0064 237.846 28.188 237.937 28.3711 238.025 cv
28.5049 238.09 28.6397 238.151 28.774 238.214 cv
28.9454 238.294 29.1167 238.376 29.2891 238.454 cv
29.3872 238.498 29.4859 238.541 29.5845 238.584 cv
29.628 238.603 29.6714 238.622 29.7144 238.641 cv
29.8799 238.713 30.045 238.787 30.211 238.857 cv
30.3594 238.919 30.5083 238.98 30.6573 239.041 cv
30.8174 239.106 30.9776 239.172 31.1372 239.235 cv
31.292 239.296 31.4468 239.354 31.6016 239.414 cv
31.7569 239.473 31.9126 239.531 32.0684 239.589 cv
32.229 239.647 32.3887 239.704 32.5489 239.76 cv
32.7002 239.813 32.8511 239.867 33.003 239.917 cv
33.169 239.974 33.3345 240.028 33.5005 240.083 cv
33.6465 240.13 33.793 240.176 33.9395 240.222 cv
34.1114 240.276 34.2832 240.328 34.4556 240.379 cv
34.5962 240.421 34.7369 240.462 34.8775 240.502 cv
35.0557 240.553 35.2344 240.603 35.4126 240.651 cv
35.5474 240.688 35.6827 240.724 35.8174 240.759 cv
36.0025 240.807 36.187 240.854 36.3731 240.899 cv
36.5005 240.93 36.628 240.96 36.7559 240.991 cv
36.9488 241.036 37.1426 241.08 37.336 241.123 cv
37.4546 241.149 37.5733 241.173 37.6929 241.198 cv
37.8946 241.24 38.0977 241.283 38.3003 241.321 cv
38.4087 241.342 38.5181 241.362 38.6265 241.383 cv
38.8394 241.422 39.0528 241.461 39.2662 241.497 cv
39.3623 241.513 39.458 241.528 39.5542 241.543 cv
39.7803 241.58 40.0064 241.616 40.2334 241.647 cv
40.3116 241.659 40.3902 241.669 40.4683 241.681 cv
40.7129 241.713 40.9576 241.747 41.2017 241.776 cv
41.2549 241.782 41.3081 241.787 41.3614 241.793 cv
41.6304 241.824 41.8999 241.854 42.169 241.879 cv
42.1866 241.881 42.2037 241.882 42.2203 241.884 cv
46.2852 242.265 50.3623 242.029 54.312 241.212 cv
54.3174 241.211 54.3223 241.21 54.3272 241.209 cv
54.625 241.148 54.9224 241.082 55.2183 241.014 cv
55.2237 241.013 55.2286 241.011 55.2339 241.01 cv
60.5787 239.776 65.669 237.472 70.1602 234.193 cv
72.7627 232.292 75.1612 230.061 77.2935 227.522 cv
74.9766 227.93 72.5933 228.145 70.1592 228.145 cv
67.7261 228.145 65.3433 227.93 63.0274 227.522 cv
59.7608 226.947 56.6289 225.981 53.6802 224.678 cv
48.5938 222.43 44.0537 219.174 40.3116 215.163 cv
34.4512 208.88 30.5508 200.747 29.5845 191.734 cv
29.4297 190.288 29.3477 188.82 29.3477 187.333 cv
29.3477 178.581 32.1045 170.474 36.795 163.829 cv
20.0284 174.749 8.94193 193.658 8.94193 215.159 cv
8.94193 216.245 8.97123 217.323 9.02689 218.395 cv
12.4366 225.776 18.0782 232.214 25.6553 236.59 cv
cp
0 0 0 rgb
f
25.6553 236.59 mo
25.9537 236.762 26.2535 236.929 26.5542 237.093 cv
26.6534 237.147 26.7535 237.199 26.8531 237.252 cv
27.0552 237.36 27.2569 237.469 27.4605 237.572 cv
27.5821 237.634 27.7037 237.694 27.8247 237.754 cv
28.0064 237.846 28.188 237.937 28.3711 238.025 cv
28.5049 238.09 28.6397 238.151 28.774 238.214 cv
28.9454 238.294 29.1167 238.376 29.2891 238.454 cv
29.3872 238.498 29.4859 238.541 29.5845 238.584 cv
29.628 238.603 29.6714 238.622 29.7144 238.641 cv
29.8799 238.713 30.045 238.787 30.211 238.857 cv
30.3594 238.919 30.5083 238.98 30.6573 239.041 cv
30.8174 239.106 30.9776 239.172 31.1372 239.235 cv
31.292 239.296 31.4468 239.354 31.6016 239.414 cv
31.7569 239.473 31.9126 239.531 32.0684 239.589 cv
32.229 239.647 32.3887 239.704 32.5489 239.76 cv
32.7002 239.813 32.8511 239.867 33.003 239.917 cv
33.169 239.974 33.3345 240.028 33.5005 240.083 cv
33.6465 240.13 33.793 240.176 33.9395 240.222 cv
34.1114 240.276 34.2832 240.328 34.4556 240.379 cv
34.5962 240.421 34.7369 240.462 34.8775 240.502 cv
35.0557 240.553 35.2344 240.603 35.4126 240.651 cv
35.5474 240.688 35.6827 240.724 35.8174 240.759 cv
36.0025 240.807 36.187 240.854 36.3731 240.899 cv
36.5005 240.93 36.628 240.96 36.7559 240.991 cv
36.9488 241.036 37.1426 241.08 37.336 241.123 cv
37.4546 241.149 37.5733 241.173 37.6929 241.198 cv
37.8946 241.24 38.0977 241.283 38.3003 241.321 cv
38.4087 241.342 38.5181 241.362 38.6265 241.383 cv
38.8394 241.422 39.0528 241.461 39.2662 241.497 cv
39.3623 241.513 39.458 241.528 39.5542 241.543 cv
39.7803 241.58 40.0064 241.616 40.2334 241.647 cv
40.3116 241.659 40.3902 241.669 40.4683 241.681 cv
40.7129 241.713 40.9576 241.747 41.2017 241.776 cv
41.2549 241.782 41.3081 241.787 41.3614 241.793 cv
41.6304 241.824 41.8999 241.854 42.169 241.879 cv
42.1866 241.881 42.2037 241.882 42.2203 241.884 cv
46.2852 242.265 50.3623 242.029 54.312 241.212 cv
54.3174 241.211 54.3223 241.21 54.3272 241.209 cv
54.625 241.148 54.9224 241.082 55.2183 241.014 cv
55.2237 241.013 55.2286 241.011 55.2339 241.01 cv
60.5787 239.776 65.669 237.472 70.1602 234.193 cv
72.7627 232.292 75.1612 230.061 77.2935 227.522 cv
74.9766 227.93 72.5933 228.145 70.1592 228.145 cv
67.7261 228.145 65.3433 227.93 63.0274 227.522 cv
59.7608 226.947 56.6289 225.981 53.6802 224.678 cv
48.5938 222.43 44.0537 219.174 40.3116 215.163 cv
34.4512 208.88 30.5508 200.747 29.5845 191.734 cv
29.4297 190.288 29.3477 188.82 29.3477 187.333 cv
29.3477 178.581 32.1045 170.474 36.795 163.829 cv
20.0284 174.749 8.94193 193.658 8.94193 215.159 cv
8.94193 216.245 8.97123 217.323 9.02689 218.395 cv
12.4366 225.776 18.0782 232.214 25.6553 236.59 cv
cp
1 1 1 rgb
@
66.4678 264.416 mo
66.7852 264.233 67.0992 264.045 67.4102 263.854 cv
67.4497 263.83 67.4883 263.805 67.5274 263.78 cv
67.8033 263.609 68.0767 263.437 68.3472 263.262 cv
68.3653 263.25 68.3824 263.237 68.4009 263.226 cv
68.7442 263.001 69.2393 262.656 69.6011 262.402 cv
69.7481 262.301 69.9302 262.174 70.127 262.03 cv
70.1392 262.021 70.1509 262.012 70.1641 262.002 cv
70.1641 262.004 70.1641 262.005 70.1651 262.007 cv
70.2515 261.943 70.3345 261.875 70.4214 261.811 cv
70.4815 261.766 70.5391 261.722 70.5909 261.682 cv
77.6792 256.364 82.6265 249.058 85.087 241.005 cv
86.6895 235.761 87.2364 230.203 86.6412 224.677 cv
86.2954 221.47 85.5684 218.273 84.4336 215.155 cv
83.6285 217.368 82.6236 219.542 81.4058 221.651 cv
80.1875 223.762 78.8077 225.719 77.2935 227.522 cv
75.1612 230.061 72.7627 232.292 70.1602 234.193 cv
65.669 237.472 60.5787 239.776 55.2339 241.01 cv
46.8638 242.943 37.8716 242.252 29.5845 238.584 cv
28.2549 237.996 26.9434 237.333 25.6553 236.59 cv
18.0782 232.214 12.4366 225.776 9.02689 218.395 cv
10.1949 240.82 23.4302 260.05 42.3628 269.715 cv
50.4712 270.461 58.8799 268.796 66.4678 264.416 cv
cp
0 0 0 rgb
f
66.4678 264.416 mo
66.7852 264.233 67.0992 264.045 67.4102 263.854 cv
67.4497 263.83 67.4883 263.805 67.5274 263.78 cv
67.8033 263.609 68.0767 263.437 68.3472 263.262 cv
68.3653 263.25 68.3824 263.237 68.4009 263.226 cv
68.7442 263.001 69.2393 262.656 69.6011 262.402 cv
69.7481 262.301 69.9302 262.174 70.127 262.03 cv
70.1392 262.021 70.1509 262.012 70.1641 262.002 cv
70.1641 262.004 70.1641 262.005 70.1651 262.007 cv
70.2515 261.943 70.3345 261.875 70.4214 261.811 cv
70.4815 261.766 70.5391 261.722 70.5909 261.682 cv
77.6792 256.364 82.6265 249.058 85.087 241.005 cv
86.6895 235.761 87.2364 230.203 86.6412 224.677 cv
86.2954 221.47 85.5684 218.273 84.4336 215.155 cv
83.6285 217.368 82.6236 219.542 81.4058 221.651 cv
80.1875 223.762 78.8077 225.719 77.2935 227.522 cv
75.1612 230.061 72.7627 232.292 70.1602 234.193 cv
65.669 237.472 60.5787 239.776 55.2339 241.01 cv
46.8638 242.943 37.8716 242.252 29.5845 238.584 cv
28.2549 237.996 26.9434 237.333 25.6553 236.59 cv
18.0782 232.214 12.4366 225.776 9.02689 218.395 cv
10.1949 240.82 23.4302 260.05 42.3628 269.715 cv
50.4712 270.461 58.8799 268.796 66.4678 264.416 cv
cp
1 1 1 rgb
@
10 lw
283.451 215.159 mo
283.451 251.146 254.278 280.318 218.292 280.318 cv
182.305 280.318 153.133 251.146 153.133 215.159 cv
153.133 179.173 182.305 150 218.292 150 cv
254.278 150 283.451 179.173 283.451 215.159 cv
cp
0 0 0 rgb
@
221.838 154.589 mo
220.621 155.334 219.435 156.112 218.3 156.94 cv
218.587 157.149 218.862 157.369 219.143 157.583 cv
218.857 157.368 218.576 157.151 218.286 156.939 cv
209.191 163.578 202.865 172.827 199.744 183.033 cv
197.752 189.551 197.071 196.461 197.811 203.331 cv
198.24 207.316 199.144 211.289 200.554 215.164 cv
201.553 212.414 202.802 209.713 204.317 207.09 cv
205.831 204.468 207.546 202.037 209.427 199.795 cv
212.076 196.64 215.058 193.867 218.292 191.504 cv
223.872 187.429 230.198 184.566 236.84 183.033 cv
247.242 180.63 258.418 181.489 268.717 186.048 cv
270.001 186.617 271.27 187.261 272.525 187.944 cv
263.048 169.098 244.05 155.87 221.838 154.589 cv
cp
f
2 lw
221.838 154.589 mo
220.621 155.334 219.435 156.112 218.3 156.94 cv
218.587 157.149 218.862 157.369 219.143 157.583 cv
218.857 157.368 218.576 157.151 218.286 156.939 cv
209.191 163.578 202.865 172.827 199.744 183.033 cv
197.752 189.551 197.071 196.461 197.811 203.331 cv
198.24 207.316 199.144 211.289 200.554 215.164 cv
201.553 212.414 202.802 209.713 204.317 207.09 cv
205.831 204.468 207.546 202.037 209.427 199.795 cv
212.076 196.64 215.058 193.867 218.292 191.504 cv
223.872 187.429 230.198 184.566 236.84 183.033 cv
247.242 180.63 258.418 181.489 268.717 186.048 cv
270.001 186.617 271.27 187.261 272.525 187.944 cv
263.048 169.098 244.05 155.87 221.838 154.589 cv
cp
1 1 1 rgb
@
181.199 215.164 mo
185.85 220.149 191.491 224.195 197.813 226.989 cv
201.478 228.608 205.369 229.808 209.429 230.523 cv
207.547 228.283 205.831 225.85 204.317 223.228 cv
202.804 220.609 201.553 217.911 200.554 215.164 cv
199.144 211.289 198.24 207.316 197.811 203.331 cv
197.071 196.461 197.752 189.551 199.744 183.033 cv
202.865 172.827 209.191 163.578 218.286 156.939 cv
219.422 156.11 220.614 155.334 221.835 154.588 cv
220.662 154.521 219.482 154.478 218.292 154.478 cv
197.102 154.478 178.46 165.346 167.607 181.804 cv
167.642 183.233 167.718 184.651 167.869 186.048 cv
169.07 197.249 173.917 207.356 181.199 215.164 cv
cp
0 0 0 rgb
f
181.199 215.164 mo
185.85 220.149 191.491 224.195 197.813 226.989 cv
201.478 228.608 205.369 229.808 209.429 230.523 cv
207.547 228.283 205.831 225.85 204.317 223.228 cv
202.804 220.609 201.553 217.911 200.554 215.164 cv
199.144 211.289 198.24 207.316 197.811 203.331 cv
197.071 196.461 197.752 189.551 199.744 183.033 cv
202.865 172.827 209.191 163.578 218.286 156.939 cv
219.422 156.11 220.614 155.334 221.835 154.588 cv
220.662 154.521 219.482 154.478 218.292 154.478 cv
197.102 154.478 178.46 165.346 167.607 181.804 cv
167.642 183.233 167.718 184.651 167.869 186.048 cv
169.07 197.249 173.917 207.356 181.199 215.164 cv
cp
1 1 1 rgb
@
268.977 248.513 mo
268.942 247.085 268.865 245.667 268.715 244.27 cv
267.515 233.072 262.666 222.97 255.384 215.164 cv
250.734 210.177 245.094 206.125 238.771 203.33 cv
235.107 201.71 231.216 200.511 227.157 199.795 cv
229.039 202.037 230.754 204.468 232.268 207.09 cv
233.779 209.709 235.03 212.408 236.031 215.154 cv
237.442 219.029 238.345 223.001 238.775 226.987 cv
239.514 233.855 238.834 240.762 236.843 247.28 cv
233.723 257.488 227.396 266.738 218.298 273.379 cv
217.163 274.208 215.971 274.984 214.75 275.729 cv
215.923 275.797 217.103 275.84 218.292 275.84 cv
239.481 275.84 258.124 264.972 268.977 248.513 cv
cp
0 0 0 rgb
f
268.977 248.513 mo
268.942 247.085 268.865 245.667 268.715 244.27 cv
267.515 233.072 262.666 222.97 255.384 215.164 cv
250.734 210.177 245.094 206.125 238.771 203.33 cv
235.107 201.71 231.216 200.511 227.157 199.795 cv
229.039 202.037 230.754 204.468 232.268 207.09 cv
233.779 209.709 235.03 212.408 236.031 215.154 cv
237.442 219.029 238.345 223.001 238.775 226.987 cv
239.514 233.855 238.834 240.762 236.843 247.28 cv
233.723 257.488 227.396 266.738 218.298 273.379 cv
217.163 274.208 215.971 274.984 214.75 275.729 cv
215.923 275.797 217.103 275.84 218.292 275.84 cv
239.481 275.84 258.124 264.972 268.977 248.513 cv
cp
1 1 1 rgb
@
272.525 187.944 mo
271.27 187.261 270.001 186.617 268.717 186.048 cv
258.418 181.489 247.242 180.63 236.84 183.033 cv
230.198 184.566 223.872 187.429 218.292 191.504 cv
215.058 193.867 212.076 196.64 209.427 199.795 cv
212.306 199.288 215.268 199.021 218.292 199.021 cv
221.315 199.021 224.278 199.288 227.157 199.795 cv
231.216 200.511 235.107 201.71 238.771 203.33 cv
245.094 206.125 250.734 210.177 255.384 215.164 cv
262.666 222.97 267.515 233.072 268.715 244.27 cv
268.865 245.667 268.942 247.085 268.977 248.513 cv
275.288 238.941 278.973 227.482 278.973 215.159 cv
278.973 205.371 276.642 196.132 272.525 187.944 cv
cp
0 0 0 rgb
f
272.525 187.944 mo
271.27 187.261 270.001 186.617 268.717 186.048 cv
258.418 181.489 247.242 180.63 236.84 183.033 cv
230.198 184.566 223.872 187.429 218.292 191.504 cv
215.058 193.867 212.076 196.64 209.427 199.795 cv
212.306 199.288 215.268 199.021 218.292 199.021 cv
221.315 199.021 224.278 199.288 227.157 199.795 cv
231.216 200.511 235.107 201.71 238.771 203.33 cv
245.094 206.125 250.734 210.177 255.384 215.164 cv
262.666 222.97 267.515 233.072 268.715 244.27 cv
268.865 245.667 268.942 247.085 268.977 248.513 cv
275.288 238.941 278.973 227.482 278.973 215.159 cv
278.973 205.371 276.642 196.132 272.525 187.944 cv
cp
1 1 1 rgb
@
164.474 242.615 mo
164.726 242.75 164.977 242.883 165.23 243.014 cv
165.38 243.091 165.531 243.165 165.682 243.239 cv
165.908 243.353 166.132 243.466 166.36 243.575 cv
166.526 243.656 166.694 243.732 166.861 243.811 cv
167.074 243.911 167.286 244.011 167.502 244.109 cv
167.623 244.164 167.747 244.216 167.869 244.27 cv
167.923 244.293 167.977 244.316 168.029 244.341 cv
168.235 244.43 168.44 244.522 168.648 244.609 cv
168.832 244.688 169.017 244.762 169.202 244.838 cv
169.4 244.919 169.6 245.001 169.798 245.08 cv
169.99 245.155 170.182 245.227 170.375 245.3 cv
170.569 245.375 170.761 245.448 170.955 245.519 cv
171.155 245.591 171.353 245.662 171.553 245.732 cv
171.741 245.798 171.928 245.864 172.117 245.928 cv
172.322 245.998 172.529 246.064 172.735 246.133 cv
172.916 246.191 173.098 246.249 173.28 246.305 cv
173.494 246.374 173.708 246.438 173.922 246.501 cv
174.096 246.553 174.272 246.605 174.446 246.654 cv
174.668 246.717 174.89 246.78 175.112 246.839 cv
175.278 246.884 175.446 246.93 175.614 246.973 cv
175.844 247.032 176.074 247.092 176.304 247.147 cv
176.463 247.186 176.621 247.224 176.78 247.261 cv
177.021 247.317 177.261 247.373 177.502 247.425 cv
177.648 247.458 177.796 247.488 177.944 247.519 cv
178.195 247.571 178.448 247.624 178.7 247.672 cv
178.835 247.698 178.97 247.722 179.105 247.748 cv
179.37 247.797 179.635 247.846 179.899 247.89 cv
180.02 247.91 180.139 247.929 180.258 247.948 cv
180.539 247.993 180.82 248.038 181.103 248.078 cv
181.199 248.091 181.297 248.104 181.395 248.118 cv
181.698 248.159 182.002 248.2 182.305 248.237 cv
182.371 248.246 182.438 248.251 182.503 248.259 cv
182.838 248.296 183.173 248.334 183.508 248.366 cv
183.529 248.368 183.551 248.369 183.57 248.372 cv
188.624 248.845 193.689 248.552 198.598 247.537 cv
198.605 247.535 198.61 247.534 198.617 247.533 cv
198.987 247.457 199.357 247.375 199.725 247.29 cv
199.731 247.29 199.738 247.287 199.743 247.286 cv
206.386 245.752 212.712 242.889 218.293 238.813 cv
221.527 236.451 224.508 233.679 227.158 230.523 cv
224.278 231.031 221.317 231.297 218.292 231.297 cv
215.268 231.297 212.308 231.031 209.429 230.523 cv
205.369 229.808 201.478 228.608 197.813 226.989 cv
191.491 224.195 185.85 220.149 181.199 215.164 cv
173.917 207.356 169.07 197.249 167.869 186.048 cv
167.718 184.651 167.642 183.233 167.607 181.804 cv
161.294 191.376 157.61 202.835 157.61 215.159 cv
157.61 224.959 159.948 234.207 164.074 242.401 cv
164.083 242.406 164.092 242.412 164.103 242.417 cv
164.226 242.485 164.35 242.55 164.474 242.615 cv
cp
0 0 0 rgb
f
164.474 242.615 mo
164.726 242.75 164.977 242.883 165.23 243.014 cv
165.38 243.091 165.531 243.165 165.682 243.239 cv
165.908 243.353 166.132 243.466 166.36 243.575 cv
166.526 243.656 166.694 243.732 166.861 243.811 cv
167.074 243.911 167.286 244.011 167.502 244.109 cv
167.623 244.164 167.747 244.216 167.869 244.27 cv
167.923 244.293 167.977 244.316 168.029 244.341 cv
168.235 244.43 168.44 244.522 168.648 244.609 cv
168.832 244.688 169.017 244.762 169.202 244.838 cv
169.4 244.919 169.6 245.001 169.798 245.08 cv
169.99 245.155 170.182 245.227 170.375 245.3 cv
170.569 245.375 170.761 245.448 170.955 245.519 cv
171.155 245.591 171.353 245.662 171.553 245.732 cv
171.741 245.798 171.928 245.864 172.117 245.928 cv
172.322 245.998 172.529 246.064 172.735 246.133 cv
172.916 246.191 173.098 246.249 173.28 246.305 cv
173.494 246.374 173.708 246.438 173.922 246.501 cv
174.096 246.553 174.272 246.605 174.446 246.654 cv
174.668 246.717 174.89 246.78 175.112 246.839 cv
175.278 246.884 175.446 246.93 175.614 246.973 cv
175.844 247.032 176.074 247.092 176.304 247.147 cv
176.463 247.186 176.621 247.224 176.78 247.261 cv
177.021 247.317 177.261 247.373 177.502 247.425 cv
177.648 247.458 177.796 247.488 177.944 247.519 cv
178.195 247.571 178.448 247.624 178.7 247.672 cv
178.835 247.698 178.97 247.722 179.105 247.748 cv
179.37 247.797 179.635 247.846 179.899 247.89 cv
180.02 247.91 180.139 247.929 180.258 247.948 cv
180.539 247.993 180.82 248.038 181.103 248.078 cv
181.199 248.091 181.297 248.104 181.395 248.118 cv
181.698 248.159 182.002 248.2 182.305 248.237 cv
182.371 248.246 182.438 248.251 182.503 248.259 cv
182.838 248.296 183.173 248.334 183.508 248.366 cv
183.529 248.368 183.551 248.369 183.57 248.372 cv
188.624 248.845 193.689 248.552 198.598 247.537 cv
198.605 247.535 198.61 247.534 198.617 247.533 cv
198.987 247.457 199.357 247.375 199.725 247.29 cv
199.731 247.29 199.738 247.287 199.743 247.286 cv
206.386 245.752 212.712 242.889 218.293 238.813 cv
221.527 236.451 224.508 233.679 227.158 230.523 cv
224.278 231.031 221.317 231.297 218.292 231.297 cv
215.268 231.297 212.308 231.031 209.429 230.523 cv
205.369 229.808 201.478 228.608 197.813 226.989 cv
191.491 224.195 185.85 220.149 181.199 215.164 cv
173.917 207.356 169.07 197.249 167.869 186.048 cv
167.718 184.651 167.642 183.233 167.607 181.804 cv
161.294 191.376 157.61 202.835 157.61 215.159 cv
157.61 224.959 159.948 234.207 164.074 242.401 cv
164.083 242.406 164.092 242.412 164.103 242.417 cv
164.226 242.485 164.35 242.55 164.474 242.615 cv
cp
1 1 1 rgb
@
215.021 275.582 mo
215.364 275.371 215.704 275.156 216.04 274.938 cv
216.063 274.923 216.083 274.908 216.106 274.894 cv
216.534 274.615 217.148 274.186 217.598 273.87 cv
217.781 273.745 218.007 273.586 218.252 273.407 cv
218.267 273.396 218.281 273.384 218.297 273.373 cv
218.297 273.376 218.297 273.376 218.298 273.379 cv
218.407 273.298 218.51 273.215 218.617 273.135 cv
218.692 273.079 218.764 273.025 218.828 272.974 cv
227.637 266.366 233.785 257.287 236.843 247.28 cv
238.834 240.762 239.514 233.855 238.775 226.987 cv
238.345 223.001 237.442 219.029 236.031 215.154 cv
235.03 217.904 233.781 220.606 232.268 223.228 cv
230.754 225.85 229.04 228.283 227.158 230.523 cv
224.508 233.679 221.527 236.451 218.293 238.813 cv
212.712 242.889 206.386 245.752 199.743 247.286 cv
189.342 249.687 178.167 248.828 167.869 244.27 cv
166.582 243.701 165.314 243.057 164.059 242.374 cv
173.54 261.229 192.552 274.462 214.778 275.731 cv
214.811 275.712 214.844 275.693 214.876 275.674 cv
214.924 275.644 214.973 275.613 215.021 275.582 cv
cp
0 0 0 rgb
f
215.021 275.582 mo
215.364 275.371 215.704 275.156 216.04 274.938 cv
216.063 274.923 216.083 274.908 216.106 274.894 cv
216.534 274.615 217.148 274.186 217.598 273.87 cv
217.781 273.745 218.007 273.586 218.252 273.407 cv
218.267 273.396 218.281 273.384 218.297 273.373 cv
218.297 273.376 218.297 273.376 218.298 273.379 cv
218.407 273.298 218.51 273.215 218.617 273.135 cv
218.692 273.079 218.764 273.025 218.828 272.974 cv
227.637 266.366 233.785 257.287 236.843 247.28 cv
238.834 240.762 239.514 233.855 238.775 226.987 cv
238.345 223.001 237.442 219.029 236.031 215.154 cv
235.03 217.904 233.781 220.606 232.268 223.228 cv
230.754 225.85 229.04 228.283 227.158 230.523 cv
224.508 233.679 221.527 236.451 218.293 238.813 cv
212.712 242.889 206.386 245.752 199.743 247.286 cv
189.342 249.687 178.167 248.828 167.869 244.27 cv
166.582 243.701 165.314 243.057 164.059 242.374 cv
173.54 261.229 192.552 274.462 214.778 275.731 cv
214.811 275.712 214.844 275.693 214.876 275.674 cv
214.924 275.644 214.973 275.613 215.021 275.582 cv
cp
1 1 1 rgb
@
10 lw
431.585 215.159 mo
431.585 251.146 402.412 280.318 366.426 280.318 cv
330.439 280.318 301.266 251.146 301.266 215.159 cv
301.266 179.173 330.439 150 366.426 150 cv
402.412 150 431.585 179.173 431.585 215.159 cv
cp
0 0 0 rgb
@
366.427 155.493 mo
361.492 155.493 356.701 156.104 352.116 157.233 cv
348.234 162.741 345.286 168.807 343.342 175.172 cv
340.859 183.286 340.014 191.886 340.933 200.438 cv
341.466 205.397 342.591 210.342 344.347 215.165 cv
345.593 211.742 347.147 208.38 349.031 205.116 cv
350.915 201.853 353.05 198.826 355.392 196.036 cv
358.689 192.109 362.399 188.658 366.427 185.717 cv
373.37 180.645 381.244 177.082 389.511 175.172 cv
395.989 173.677 402.707 173.197 409.409 173.802 cv
398.556 162.522 383.315 155.493 366.427 155.493 cv
cp
f
2 lw
366.427 155.493 mo
361.492 155.493 356.701 156.104 352.116 157.233 cv
348.234 162.741 345.286 168.807 343.342 175.172 cv
340.859 183.286 340.014 191.886 340.933 200.438 cv
341.466 205.397 342.591 210.342 344.347 215.165 cv
345.593 211.742 347.147 208.38 349.031 205.116 cv
350.915 201.853 353.05 198.826 355.392 196.036 cv
358.689 192.109 362.399 188.658 366.427 185.717 cv
373.37 180.645 381.244 177.082 389.511 175.172 cv
395.989 173.677 402.707 173.197 409.409 173.802 cv
398.556 162.522 383.315 155.493 366.427 155.493 cv
cp
1 1 1 rgb
@
340.935 229.883 mo
345.497 231.898 350.34 233.393 355.394 234.283 cv
353.053 231.493 350.915 228.466 349.031 225.202 cv
347.15 221.942 345.593 218.584 344.347 215.165 cv
342.591 210.342 341.466 205.397 340.933 200.438 cv
340.014 191.886 340.859 183.286 343.342 175.172 cv
345.286 168.807 348.234 162.741 352.116 157.233 cv
331.42 162.329 314.985 178.218 309.106 198.594 cv
311.937 204.71 315.717 210.297 320.259 215.165 cv
326.045 221.37 333.067 226.407 340.935 229.883 cv
cp
0 0 0 rgb
f
340.935 229.883 mo
345.497 231.898 350.34 233.393 355.394 234.283 cv
353.053 231.493 350.915 228.466 349.031 225.202 cv
347.15 221.942 345.593 218.584 344.347 215.165 cv
342.591 210.342 341.466 205.397 340.933 200.438 cv
340.014 191.886 340.859 183.286 343.342 175.172 cv
345.286 168.807 348.234 162.741 352.116 157.233 cv
331.42 162.329 314.985 178.218 309.106 198.594 cv
311.937 204.71 315.717 210.297 320.259 215.165 cv
326.045 221.37 333.067 226.407 340.935 229.883 cv
cp
1 1 1 rgb
@
423.742 231.728 mo
420.912 225.615 417.132 220.032 412.594 215.165 cv
406.806 208.958 399.786 203.914 391.915 200.436 cv
387.355 198.42 382.511 196.927 377.458 196.036 cv
379.802 198.826 381.936 201.853 383.819 205.116 cv
385.703 208.376 387.26 211.734 388.503 215.153 cv
390.258 219.977 391.384 224.92 391.917 229.881 cv
392.839 238.43 391.994 247.026 389.515 255.139 cv
387.569 261.507 384.62 267.575 380.734 273.085 cv
401.429 267.99 417.862 252.102 423.742 231.728 cv
cp
0 0 0 rgb
f
423.742 231.728 mo
420.912 225.615 417.132 220.032 412.594 215.165 cv
406.806 208.958 399.786 203.914 391.915 200.436 cv
387.355 198.42 382.511 196.927 377.458 196.036 cv
379.802 198.826 381.936 201.853 383.819 205.116 cv
385.703 208.376 387.26 211.734 388.503 215.153 cv
390.258 219.977 391.384 224.92 391.917 229.881 cv
392.839 238.43 391.994 247.026 389.515 255.139 cv
387.569 261.507 384.62 267.575 380.734 273.085 cv
401.429 267.99 417.862 252.102 423.742 231.728 cv
cp
1 1 1 rgb
@
409.409 173.802 mo
402.707 173.197 395.989 173.677 389.511 175.172 cv
381.244 177.082 373.37 180.645 366.427 185.717 cv
362.399 188.658 358.689 192.109 355.392 196.036 cv
358.976 195.405 362.661 195.074 366.427 195.074 cv
370.188 195.074 373.878 195.405 377.458 196.036 cv
382.511 196.927 387.355 198.42 391.915 200.436 cv
399.786 203.914 406.806 208.958 412.594 215.165 cv
417.132 220.032 420.912 225.615 423.742 231.728 cv
425.262 226.466 426.092 220.911 426.092 215.159 cv
426.092 199.096 419.732 184.528 409.409 173.802 cv
cp
0 0 0 rgb
f
409.409 173.802 mo
402.707 173.197 395.989 173.677 389.511 175.172 cv
381.244 177.082 373.37 180.645 366.427 185.717 cv
362.399 188.658 358.689 192.109 355.392 196.036 cv
358.976 195.405 362.661 195.074 366.427 195.074 cv
370.188 195.074 373.878 195.405 377.458 196.036 cv
382.511 196.927 387.355 198.42 391.915 200.436 cv
399.786 203.914 406.806 208.958 412.594 215.165 cv
417.132 220.032 420.912 225.615 423.742 231.728 cv
425.262 226.466 426.092 220.911 426.092 215.159 cv
426.092 199.096 419.732 184.528 409.409 173.802 cv
cp
1 1 1 rgb
@
341.912 255.458 mo
341.921 255.456 341.93 255.455 341.936 255.454 cv
342.397 255.358 342.857 255.256 343.315 255.152 cv
343.324 255.15 343.332 255.146 343.338 255.146 cv
351.605 253.237 359.48 249.673 366.427 244.601 cv
370.452 241.66 374.164 238.21 377.458 234.283 cv
373.878 234.915 370.188 235.244 366.427 235.244 cv
362.661 235.244 358.976 234.915 355.394 234.283 cv
350.34 233.393 345.497 231.898 340.935 229.883 cv
333.067 226.407 326.045 221.37 320.259 215.165 cv
315.717 210.297 311.937 204.71 309.106 198.594 cv
307.589 203.855 306.76 209.409 306.76 215.159 cv
306.76 231.221 313.117 245.788 323.44 256.515 cv
329.65 257.073 335.877 256.707 341.912 255.458 cv
cp
0 0 0 rgb
f
341.912 255.458 mo
341.921 255.456 341.93 255.455 341.936 255.454 cv
342.397 255.358 342.857 255.256 343.315 255.152 cv
343.324 255.15 343.332 255.146 343.338 255.146 cv
351.605 253.237 359.48 249.673 366.427 244.601 cv
370.452 241.66 374.164 238.21 377.458 234.283 cv
373.878 234.915 370.188 235.244 366.427 235.244 cv
362.661 235.244 358.976 234.915 355.394 234.283 cv
350.34 233.393 345.497 231.898 340.935 229.883 cv
333.067 226.407 326.045 221.37 320.259 215.165 cv
315.717 210.297 311.937 204.71 309.106 198.594 cv
307.589 203.855 306.76 209.409 306.76 215.159 cv
306.76 231.221 313.117 245.788 323.44 256.515 cv
329.65 257.073 335.877 256.707 341.912 255.458 cv
cp
1 1 1 rgb
@
391.917 229.881 mo
391.384 224.92 390.258 219.977 388.503 215.153 cv
387.258 218.576 385.706 221.938 383.819 225.202 cv
381.936 228.466 379.802 231.493 377.458 234.283 cv
374.164 238.21 370.452 241.66 366.427 244.601 cv
359.48 249.673 351.605 253.237 343.338 255.146 cv
336.861 256.642 330.144 257.121 323.441 256.516 cv
334.296 267.795 349.535 274.824 366.427 274.824 cv
371.353 274.824 376.138 274.215 380.716 273.09 cv
384.607 267.579 387.567 261.512 389.515 255.139 cv
391.994 247.026 392.839 238.43 391.917 229.881 cv
cp
0 0 0 rgb
f
391.917 229.881 mo
391.384 224.92 390.258 219.977 388.503 215.153 cv
387.258 218.576 385.706 221.938 383.819 225.202 cv
381.936 228.466 379.802 231.493 377.458 234.283 cv
374.164 238.21 370.452 241.66 366.427 244.601 cv
359.48 249.673 351.605 253.237 343.338 255.146 cv
336.861 256.642 330.144 257.121 323.441 256.516 cv
334.296 267.795 349.535 274.824 366.427 274.824 cv
371.353 274.824 376.138 274.215 380.716 273.09 cv
384.607 267.579 387.567 261.512 389.515 255.139 cv
391.994 247.026 392.839 238.43 391.917 229.881 cv
cp
1 1 1 rgb
@
10 lw
579.718 215.159 mo
579.718 251.146 550.545 280.318 514.559 280.318 cv
478.572 280.318 449.399 251.146 449.399 215.159 cv
449.399 179.173 478.572 150 514.559 150 cv
550.545 150 579.718 179.173 579.718 215.159 cv
cp
0 0 0 rgb
@
483.234 162.747 mo
480.191 173.27 479.164 184.364 480.35 195.404 cv
481.066 202.06 482.577 208.695 484.932 215.166 cv
486.604 210.573 488.689 206.061 491.218 201.683 cv
493.746 197.304 496.609 193.242 499.753 189.498 cv
504.178 184.229 509.155 179.597 514.561 175.651 cv
523.523 169.103 533.648 164.452 544.28 161.824 cv
535.482 156.911 525.353 154.1 514.561 154.1 cv
503.106 154.1 492.394 157.26 483.234 162.747 cv
cp
f
2 lw
483.234 162.747 mo
480.191 173.27 479.164 184.364 480.35 195.404 cv
481.066 202.06 482.577 208.695 484.932 215.166 cv
486.604 210.573 488.689 206.061 491.218 201.683 cv
493.746 197.304 496.609 193.242 499.753 189.498 cv
504.178 184.229 509.155 179.597 514.561 175.651 cv
523.523 169.103 533.648 164.452 544.28 161.824 cv
535.482 156.911 525.353 154.1 514.561 154.1 cv
503.106 154.1 492.394 157.26 483.234 162.747 cv
cp
1 1 1 rgb
@
480.354 234.916 mo
486.474 237.621 492.975 239.626 499.757 240.819 cv
496.613 237.077 493.746 233.014 491.218 228.635 cv
488.693 224.26 486.604 219.754 484.932 215.166 cv
482.577 208.695 481.066 202.06 480.35 195.404 cv
479.164 184.364 480.191 173.27 483.234 162.747 cv
465.425 173.414 453.5 192.891 453.5 215.16 cv
453.5 215.475 453.519 215.786 453.522 216.1 cv
461.111 223.992 470.201 230.431 480.354 234.916 cv
cp
0 0 0 rgb
f
480.354 234.916 mo
486.474 237.621 492.975 239.626 499.757 240.819 cv
496.613 237.077 493.746 233.014 491.218 228.635 cv
488.693 224.26 486.604 219.754 484.932 215.166 cv
482.577 208.695 481.066 202.06 480.35 195.404 cv
479.164 184.364 480.191 173.27 483.234 162.747 cv
465.425 173.414 453.5 192.891 453.5 215.16 cv
453.5 215.475 453.519 215.786 453.522 216.1 cv
461.111 223.992 470.201 230.431 480.354 234.916 cv
cp
1 1 1 rgb
@
575.615 215.16 mo
575.615 214.847 575.597 214.54 575.593 214.228 cv
568.002 206.336 558.918 199.888 548.764 195.402 cv
542.642 192.698 536.143 190.694 529.364 189.498 cv
532.508 193.242 535.371 197.304 537.899 201.683 cv
540.428 206.056 542.517 210.563 544.184 215.15 cv
546.54 221.623 548.051 228.258 548.768 234.915 cv
549.957 245.954 548.93 257.048 545.887 267.57 cv
563.692 256.903 575.615 237.427 575.615 215.16 cv
cp
0 0 0 rgb
f
575.615 215.16 mo
575.615 214.847 575.597 214.54 575.593 214.228 cv
568.002 206.336 558.918 199.888 548.764 195.402 cv
542.642 192.698 536.143 190.694 529.364 189.498 cv
532.508 193.242 535.371 197.304 537.899 201.683 cv
540.428 206.056 542.517 210.563 544.184 215.15 cv
546.54 221.623 548.051 228.258 548.768 234.915 cv
549.957 245.954 548.93 257.048 545.887 267.57 cv
563.692 256.903 575.615 237.427 575.615 215.16 cv
cp
1 1 1 rgb
@
544.28 161.824 mo
533.648 164.452 523.523 169.103 514.561 175.651 cv
509.155 179.597 504.178 184.229 499.753 189.498 cv
504.563 188.651 509.508 188.207 514.561 188.207 cv
519.607 188.207 524.559 188.651 529.364 189.498 cv
536.143 190.694 542.642 192.698 548.764 195.402 cv
558.918 199.888 568.002 206.336 575.593 214.228 cv
575.253 191.691 562.716 172.121 544.28 161.824 cv
cp
0 0 0 rgb
f
544.28 161.824 mo
533.648 164.452 523.523 169.103 514.561 175.651 cv
509.155 179.597 504.178 184.229 499.753 189.498 cv
504.563 188.651 509.508 188.207 514.561 188.207 cv
519.607 188.207 524.559 188.651 529.364 189.498 cv
536.143 190.694 542.642 192.698 548.764 195.402 cv
558.918 199.888 568.002 206.336 575.593 214.228 cv
575.253 191.691 562.716 172.121 544.28 161.824 cv
cp
1 1 1 rgb
@
529.364 240.819 mo
524.559 241.667 519.607 242.111 514.561 242.111 cv
509.508 242.111 504.563 241.667 499.757 240.819 cv
492.975 239.626 486.474 237.621 480.354 234.916 cv
470.201 230.431 461.111 223.992 453.522 216.1 cv
453.866 238.631 466.402 258.197 484.835 268.492 cv
495.469 265.866 505.592 261.213 514.561 254.665 cv
519.96 250.721 524.941 246.089 529.364 240.819 cv
cp
0 0 0 rgb
f
529.364 240.819 mo
524.559 241.667 519.607 242.111 514.561 242.111 cv
509.508 242.111 504.563 241.667 499.757 240.819 cv
492.975 239.626 486.474 237.621 480.354 234.916 cv
470.201 230.431 461.111 223.992 453.522 216.1 cv
453.866 238.631 466.402 258.197 484.835 268.492 cv
495.469 265.866 505.592 261.213 514.561 254.665 cv
519.96 250.721 524.941 246.089 529.364 240.819 cv
cp
1 1 1 rgb
@
548.768 234.915 mo
548.051 228.258 546.54 221.623 544.184 215.15 cv
542.514 219.745 540.432 224.256 537.899 228.635 cv
535.371 233.014 532.508 237.077 529.364 240.819 cv
524.941 246.089 519.96 250.721 514.561 254.665 cv
505.592 261.213 495.469 265.866 484.835 268.492 cv
493.633 273.406 503.767 276.218 514.561 276.218 cv
526.015 276.218 536.728 273.057 545.887 267.57 cv
548.93 257.048 549.957 245.954 548.768 234.915 cv
cp
0 0 0 rgb
f
548.768 234.915 mo
548.051 228.258 546.54 221.623 544.184 215.15 cv
542.514 219.745 540.432 224.256 537.899 228.635 cv
535.371 233.014 532.508 237.077 529.364 240.819 cv
524.941 246.089 519.96 250.721 514.561 254.665 cv
505.592 261.213 495.469 265.866 484.835 268.492 cv
493.633 273.406 503.767 276.218 514.561 276.218 cv
526.015 276.218 536.728 273.057 545.887 267.57 cv
548.93 257.048 549.957 245.954 548.768 234.915 cv
cp
1 1 1 rgb
@
10 lw
135.318 362.16 mo
135.318 398.146 106.146 427.318 70.1592 427.318 cv
34.1729 427.318 5.00004 398.146 5.00004 362.16 cv
5.00004 326.173 34.1729 297 70.1592 297 cv
106.146 297 135.318 326.173 135.318 362.16 cv
cp
0 0 0 rgb
@
97.9537 307.601 mo
89.8467 306.857 81.4385 308.521 73.8516 312.902 cv
72.565 313.645 71.3394 314.455 70.1656 315.312 cv
70.3965 315.48 70.6182 315.656 70.8448 315.829 cv
70.6143 315.656 70.3872 315.48 70.1543 315.31 cv
62.836 320.653 57.7452 328.095 55.2344 336.307 cv
53.6309 341.552 53.083 347.113 53.6787 352.641 cv
54.0235 355.847 54.751 359.044 55.8858 362.163 cv
56.6905 359.951 57.6954 357.776 58.9136 355.666 cv
60.1319 353.556 61.5122 351.599 63.0259 349.796 cv
65.1578 347.257 67.5562 345.026 70.1592 343.125 cv
74.6495 339.845 79.7398 337.542 85.085 336.307 cv
93.4551 334.375 102.447 335.065 110.735 338.734 cv
112.064 339.322 113.376 339.985 114.664 340.728 cv
122.24 345.103 127.882 351.541 131.292 358.923 cv
130.123 336.498 116.888 317.267 97.9537 307.601 cv
cp
f
3 lw
97.9537 307.601 mo
89.8467 306.857 81.4385 308.521 73.8516 312.902 cv
72.565 313.645 71.3394 314.455 70.1656 315.312 cv
70.3965 315.48 70.6182 315.656 70.8448 315.829 cv
70.6143 315.656 70.3872 315.48 70.1543 315.31 cv
62.836 320.653 57.7452 328.095 55.2344 336.307 cv
53.6309 341.552 53.083 347.113 53.6787 352.641 cv
54.0235 355.847 54.751 359.044 55.8858 362.163 cv
56.6905 359.951 57.6954 357.776 58.9136 355.666 cv
60.1319 353.556 61.5122 351.599 63.0259 349.796 cv
65.1578 347.257 67.5562 345.026 70.1592 343.125 cv
74.6495 339.845 79.7398 337.542 85.085 336.307 cv
93.4551 334.375 102.447 335.065 110.735 338.734 cv
112.064 339.322 113.376 339.985 114.664 340.728 cv
122.24 345.103 127.882 351.541 131.292 358.923 cv
130.123 336.498 116.888 317.267 97.9537 307.601 cv
cp
1 1 1 rgb
@
29.5845 338.734 mo
30.5508 347.747 34.4512 355.88 40.3116 362.163 cv
44.0537 366.174 48.5938 369.43 53.6802 371.678 cv
56.6289 372.981 59.7608 373.947 63.0274 374.522 cv
61.5127 372.718 60.1319 370.761 58.9136 368.652 cv
57.6968 366.544 56.6905 364.373 55.8858 362.163 cv
54.751 359.044 54.0235 355.847 53.6787 352.641 cv
53.083 347.113 53.6309 341.552 55.2344 336.307 cv
57.7452 328.095 62.836 320.653 70.1543 315.31 cv
71.3301 314.453 72.562 313.646 73.8516 312.902 cv
81.4385 308.521 89.8467 306.857 97.9537 307.601 cv
89.6128 303.343 80.167 300.941 70.1592 300.941 cv
57.8511 300.941 46.3931 304.578 36.795 310.829 cv
32.1045 317.474 29.3477 325.581 29.3477 334.333 cv
29.3477 335.82 29.4297 337.289 29.5845 338.734 cv
cp
0 0 0 rgb
f
29.5845 338.734 mo
30.5508 347.747 34.4512 355.88 40.3116 362.163 cv
44.0537 366.174 48.5938 369.43 53.6802 371.678 cv
56.6289 372.981 59.7608 373.947 63.0274 374.522 cv
61.5127 372.718 60.1319 370.761 58.9136 368.652 cv
57.6968 366.544 56.6905 364.373 55.8858 362.163 cv
54.751 359.044 54.0235 355.847 53.6787 352.641 cv
53.083 347.113 53.6309 341.552 55.2344 336.307 cv
57.7452 328.095 62.836 320.653 70.1543 315.31 cv
71.3301 314.453 72.562 313.646 73.8516 312.902 cv
81.4385 308.521 89.8467 306.857 97.9537 307.601 cv
89.6128 303.343 80.167 300.941 70.1592 300.941 cv
57.8511 300.941 46.3931 304.578 36.795 310.829 cv
32.1045 317.474 29.3477 325.581 29.3477 334.333 cv
29.3477 335.82 29.4297 337.289 29.5845 338.734 cv
cp
1 1 1 rgb
@
110.734 385.583 mo
109.768 376.574 105.866 368.445 100.007 362.163 cv
96.2642 358.15 91.7261 354.888 86.6387 352.64 cv
83.6895 351.337 80.5591 350.372 77.2925 349.796 cv
78.8067 351.599 80.1875 353.556 81.4058 355.666 cv
82.6216 357.773 83.6285 359.945 84.4336 362.155 cv
85.5684 365.273 86.2954 368.47 86.6412 371.677 cv
87.2364 377.203 86.6895 382.761 85.087 388.005 cv
82.5762 396.22 77.4849 403.664 70.1651 409.007 cv
68.9883 409.865 67.7574 410.671 66.4678 411.416 cv
58.8799 415.796 50.4712 417.46 42.3628 416.715 cv
50.7041 420.974 60.1509 423.376 70.1592 423.376 cv
82.4678 423.376 93.9253 419.741 103.523 413.49 cv
108.214 406.844 110.971 398.738 110.971 389.986 cv
110.971 388.498 110.889 387.03 110.734 385.583 cv
cp
0 0 0 rgb
f
110.734 385.583 mo
109.768 376.574 105.866 368.445 100.007 362.163 cv
96.2642 358.15 91.7261 354.888 86.6387 352.64 cv
83.6895 351.337 80.5591 350.372 77.2925 349.796 cv
78.8067 351.599 80.1875 353.556 81.4058 355.666 cv
82.6216 357.773 83.6285 359.945 84.4336 362.155 cv
85.5684 365.273 86.2954 368.47 86.6412 371.677 cv
87.2364 377.203 86.6895 382.761 85.087 388.005 cv
82.5762 396.22 77.4849 403.664 70.1651 409.007 cv
68.9883 409.865 67.7574 410.671 66.4678 411.416 cv
58.8799 415.796 50.4712 417.46 42.3628 416.715 cv
50.7041 420.974 60.1509 423.376 70.1592 423.376 cv
82.4678 423.376 93.9253 419.741 103.523 413.49 cv
108.214 406.844 110.971 398.738 110.971 389.986 cv
110.971 388.498 110.889 387.03 110.734 385.583 cv
cp
1 1 1 rgb
@
131.377 362.159 mo
131.377 361.074 131.348 359.995 131.292 358.923 cv
127.882 351.541 122.24 345.103 114.664 340.728 cv
113.376 339.985 112.064 339.322 110.735 338.734 cv
102.447 335.065 93.4551 334.375 85.085 336.307 cv
79.7398 337.542 74.6495 339.845 70.1592 343.125 cv
67.5562 345.026 65.1578 347.257 63.0259 349.796 cv
65.3423 349.388 67.7261 349.173 70.1592 349.173 cv
72.5923 349.173 74.9766 349.388 77.2925 349.796 cv
80.5591 350.372 83.6895 351.337 86.6387 352.64 cv
91.7261 354.888 96.2642 358.15 100.007 362.163 cv
105.866 368.445 109.768 376.574 110.734 385.583 cv
110.889 387.03 110.971 388.498 110.971 389.986 cv
110.971 398.738 108.214 406.844 103.523 413.49 cv
120.29 402.57 131.377 383.66 131.377 362.159 cv
cp
0 0 0 rgb
f
131.377 362.159 mo
131.377 361.074 131.348 359.995 131.292 358.923 cv
127.882 351.541 122.24 345.103 114.664 340.728 cv
113.376 339.985 112.064 339.322 110.735 338.734 cv
102.447 335.065 93.4551 334.375 85.085 336.307 cv
79.7398 337.542 74.6495 339.845 70.1592 343.125 cv
67.5562 345.026 65.1578 347.257 63.0259 349.796 cv
65.3423 349.388 67.7261 349.173 70.1592 349.173 cv
72.5923 349.173 74.9766 349.388 77.2925 349.796 cv
80.5591 350.372 83.6895 351.337 86.6387 352.64 cv
91.7261 354.888 96.2642 358.15 100.007 362.163 cv
105.866 368.445 109.768 376.574 110.734 385.583 cv
110.889 387.03 110.971 388.498 110.971 389.986 cv
110.971 398.738 108.214 406.844 103.523 413.49 cv
120.29 402.57 131.377 383.66 131.377 362.159 cv
cp
1 1 1 rgb
@
25.6553 383.589 mo
25.9537 383.761 26.2535 383.929 26.5542 384.093 cv
26.6534 384.147 26.7535 384.199 26.8531 384.251 cv
27.0552 384.361 27.2569 384.468 27.4605 384.572 cv
27.5821 384.634 27.7037 384.694 27.8247 384.754 cv
28.0064 384.845 28.188 384.937 28.3711 385.025 cv
28.5049 385.089 28.6397 385.151 28.774 385.214 cv
28.9454 385.294 29.1167 385.375 29.2891 385.454 cv
29.3872 385.498 29.4859 385.541 29.5845 385.583 cv
29.628 385.603 29.6714 385.622 29.7144 385.641 cv
29.8799 385.712 30.045 385.787 30.211 385.857 cv
30.3594 385.919 30.5083 385.98 30.6573 386.041 cv
30.8174 386.106 30.9776 386.171 31.1372 386.236 cv
31.292 386.296 31.4468 386.354 31.6016 386.414 cv
31.7569 386.472 31.9126 386.531 32.0684 386.589 cv
32.229 386.647 32.3887 386.704 32.5489 386.76 cv
32.7002 386.813 32.8511 386.867 33.003 386.917 cv
33.169 386.974 33.3345 387.028 33.5005 387.083 cv
33.6465 387.13 33.793 387.175 33.9395 387.222 cv
34.1114 387.276 34.2832 387.328 34.4556 387.379 cv
34.5962 387.421 34.7369 387.462 34.8775 387.501 cv
35.0557 387.553 35.2344 387.603 35.4126 387.651 cv
35.5474 387.688 35.6827 387.724 35.8174 387.759 cv
36.0025 387.806 36.187 387.854 36.3731 387.899 cv
36.5005 387.93 36.628 387.96 36.7559 387.991 cv
36.9488 388.036 37.1426 388.08 37.336 388.123 cv
37.4546 388.149 37.5733 388.173 37.6929 388.198 cv
37.8946 388.24 38.0977 388.283 38.3003 388.322 cv
38.4087 388.342 38.5181 388.362 38.6265 388.382 cv
38.8394 388.422 39.0528 388.46 39.2662 388.497 cv
39.3623 388.513 39.458 388.528 39.5542 388.542 cv
39.7803 388.58 40.0064 388.616 40.2334 388.648 cv
40.3116 388.659 40.3902 388.669 40.4683 388.681 cv
40.7129 388.713 40.9576 388.747 41.2017 388.776 cv
41.2549 388.783 41.3081 388.787 41.3614 388.793 cv
41.6304 388.824 41.8999 388.854 42.169 388.879 cv
42.1866 388.881 42.2037 388.882 42.2203 388.884 cv
46.2852 389.265 50.3623 389.029 54.312 388.212 cv
54.3174 388.21 54.3223 388.21 54.3272 388.208 cv
54.625 388.148 54.9224 388.082 55.2183 388.014 cv
55.2237 388.013 55.2286 388.011 55.2339 388.01 cv
60.5787 386.777 65.669 384.472 70.1602 381.193 cv
72.7627 379.292 75.1612 377.061 77.2935 374.522 cv
74.9766 374.93 72.5933 375.144 70.1592 375.144 cv
67.7261 375.144 65.3433 374.93 63.0274 374.522 cv
59.7608 373.947 56.6289 372.981 53.6802 371.678 cv
48.5938 369.43 44.0537 366.174 40.3116 362.163 cv
34.4512 355.88 30.5508 347.747 29.5845 338.734 cv
29.4297 337.289 29.3477 335.82 29.3477 334.333 cv
29.3477 325.581 32.1045 317.474 36.795 310.829 cv
20.0284 321.75 8.94193 340.658 8.94193 362.159 cv
8.94193 363.245 8.97123 364.324 9.02689 365.395 cv
12.4366 372.777 18.0782 379.214 25.6553 383.589 cv
cp
0 0 0 rgb
f
25.6553 383.589 mo
25.9537 383.761 26.2535 383.929 26.5542 384.093 cv
26.6534 384.147 26.7535 384.199 26.8531 384.251 cv
27.0552 384.361 27.2569 384.468 27.4605 384.572 cv
27.5821 384.634 27.7037 384.694 27.8247 384.754 cv
28.0064 384.845 28.188 384.937 28.3711 385.025 cv
28.5049 385.089 28.6397 385.151 28.774 385.214 cv
28.9454 385.294 29.1167 385.375 29.2891 385.454 cv
29.3872 385.498 29.4859 385.541 29.5845 385.583 cv
29.628 385.603 29.6714 385.622 29.7144 385.641 cv
29.8799 385.712 30.045 385.787 30.211 385.857 cv
30.3594 385.919 30.5083 385.98 30.6573 386.041 cv
30.8174 386.106 30.9776 386.171 31.1372 386.236 cv
31.292 386.296 31.4468 386.354 31.6016 386.414 cv
31.7569 386.472 31.9126 386.531 32.0684 386.589 cv
32.229 386.647 32.3887 386.704 32.5489 386.76 cv
32.7002 386.813 32.8511 386.867 33.003 386.917 cv
33.169 386.974 33.3345 387.028 33.5005 387.083 cv
33.6465 387.13 33.793 387.175 33.9395 387.222 cv
34.1114 387.276 34.2832 387.328 34.4556 387.379 cv
34.5962 387.421 34.7369 387.462 34.8775 387.501 cv
35.0557 387.553 35.2344 387.603 35.4126 387.651 cv
35.5474 387.688 35.6827 387.724 35.8174 387.759 cv
36.0025 387.806 36.187 387.854 36.3731 387.899 cv
36.5005 387.93 36.628 387.96 36.7559 387.991 cv
36.9488 388.036 37.1426 388.08 37.336 388.123 cv
37.4546 388.149 37.5733 388.173 37.6929 388.198 cv
37.8946 388.24 38.0977 388.283 38.3003 388.322 cv
38.4087 388.342 38.5181 388.362 38.6265 388.382 cv
38.8394 388.422 39.0528 388.46 39.2662 388.497 cv
39.3623 388.513 39.458 388.528 39.5542 388.542 cv
39.7803 388.58 40.0064 388.616 40.2334 388.648 cv
40.3116 388.659 40.3902 388.669 40.4683 388.681 cv
40.7129 388.713 40.9576 388.747 41.2017 388.776 cv
41.2549 388.783 41.3081 388.787 41.3614 388.793 cv
41.6304 388.824 41.8999 388.854 42.169 388.879 cv
42.1866 388.881 42.2037 388.882 42.2203 388.884 cv
46.2852 389.265 50.3623 389.029 54.312 388.212 cv
54.3174 388.21 54.3223 388.21 54.3272 388.208 cv
54.625 388.148 54.9224 388.082 55.2183 388.014 cv
55.2237 388.013 55.2286 388.011 55.2339 388.01 cv
60.5787 386.777 65.669 384.472 70.1602 381.193 cv
72.7627 379.292 75.1612 377.061 77.2935 374.522 cv
74.9766 374.93 72.5933 375.144 70.1592 375.144 cv
67.7261 375.144 65.3433 374.93 63.0274 374.522 cv
59.7608 373.947 56.6289 372.981 53.6802 371.678 cv
48.5938 369.43 44.0537 366.174 40.3116 362.163 cv
34.4512 355.88 30.5508 347.747 29.5845 338.734 cv
29.4297 337.289 29.3477 335.82 29.3477 334.333 cv
29.3477 325.581 32.1045 317.474 36.795 310.829 cv
20.0284 321.75 8.94193 340.658 8.94193 362.159 cv
8.94193 363.245 8.97123 364.324 9.02689 365.395 cv
12.4366 372.777 18.0782 379.214 25.6553 383.589 cv
cp
1 1 1 rgb
@
66.4678 411.416 mo
66.7852 411.233 67.0992 411.044 67.4102 410.853 cv
67.4497 410.83 67.4883 410.804 67.5274 410.781 cv
67.8033 410.609 68.0767 410.437 68.3472 410.261 cv
68.3653 410.25 68.3824 410.238 68.4009 410.226 cv
68.7442 410.001 69.2393 409.656 69.6011 409.402 cv
69.7481 409.301 69.9302 409.173 70.127 409.03 cv
70.1392 409.021 70.1509 409.011 70.1641 409.002 cv
70.1641 409.003 70.1641 409.005 70.1651 409.007 cv
70.2515 408.943 70.3345 408.875 70.4214 408.811 cv
70.4815 408.765 70.5391 408.722 70.5909 408.681 cv
77.6792 403.364 82.6265 396.058 85.087 388.005 cv
86.6895 382.761 87.2364 377.203 86.6412 371.677 cv
86.2954 368.47 85.5684 365.273 84.4336 362.155 cv
83.6285 364.368 82.6236 366.542 81.4058 368.652 cv
80.1875 370.761 78.8077 372.718 77.2935 374.522 cv
75.1612 377.061 72.7627 379.292 70.1602 381.193 cv
65.669 384.472 60.5787 386.777 55.2339 388.01 cv
46.8638 389.943 37.8716 389.251 29.5845 385.583 cv
28.2549 384.996 26.9434 384.333 25.6553 383.589 cv
18.0782 379.214 12.4366 372.777 9.02689 365.395 cv
10.1949 387.82 23.4302 407.05 42.3628 416.715 cv
50.4712 417.46 58.8799 415.796 66.4678 411.416 cv
cp
0 0 0 rgb
f
66.4678 411.416 mo
66.7852 411.233 67.0992 411.044 67.4102 410.853 cv
67.4497 410.83 67.4883 410.804 67.5274 410.781 cv
67.8033 410.609 68.0767 410.437 68.3472 410.261 cv
68.3653 410.25 68.3824 410.238 68.4009 410.226 cv
68.7442 410.001 69.2393 409.656 69.6011 409.402 cv
69.7481 409.301 69.9302 409.173 70.127 409.03 cv
70.1392 409.021 70.1509 409.011 70.1641 409.002 cv
70.1641 409.003 70.1641 409.005 70.1651 409.007 cv
70.2515 408.943 70.3345 408.875 70.4214 408.811 cv
70.4815 408.765 70.5391 408.722 70.5909 408.681 cv
77.6792 403.364 82.6265 396.058 85.087 388.005 cv
86.6895 382.761 87.2364 377.203 86.6412 371.677 cv
86.2954 368.47 85.5684 365.273 84.4336 362.155 cv
83.6285 364.368 82.6236 366.542 81.4058 368.652 cv
80.1875 370.761 78.8077 372.718 77.2935 374.522 cv
75.1612 377.061 72.7627 379.292 70.1602 381.193 cv
65.669 384.472 60.5787 386.777 55.2339 388.01 cv
46.8638 389.943 37.8716 389.251 29.5845 385.583 cv
28.2549 384.996 26.9434 384.333 25.6553 383.589 cv
18.0782 379.214 12.4366 372.777 9.02689 365.395 cv
10.1949 387.82 23.4302 407.05 42.3628 416.715 cv
50.4712 417.46 58.8799 415.796 66.4678 411.416 cv
cp
1 1 1 rgb
@
10 lw
283.451 362.16 mo
283.451 398.146 254.278 427.318 218.292 427.318 cv
182.305 427.318 153.133 398.146 153.133 362.16 cv
153.133 326.173 182.305 297 218.292 297 cv
254.278 297 283.451 326.173 283.451 362.16 cv
cp
0 0 0 rgb
@
221.838 301.589 mo
220.621 302.334 219.435 303.113 218.3 303.94 cv
218.587 304.15 218.862 304.369 219.143 304.583 cv
218.857 304.369 218.576 304.151 218.286 303.939 cv
209.191 310.578 202.865 319.828 199.744 330.033 cv
197.752 336.551 197.071 343.46 197.811 350.332 cv
198.24 354.316 199.144 358.289 200.554 362.164 cv
201.553 359.414 202.802 356.712 204.317 354.09 cv
205.831 351.468 207.546 349.037 209.427 346.794 cv
212.076 343.64 215.058 340.867 218.292 338.504 cv
223.872 334.429 230.198 331.566 236.84 330.033 cv
247.242 327.63 258.418 328.489 268.717 333.048 cv
270.001 333.617 271.27 334.261 272.525 334.945 cv
263.048 316.097 244.05 302.87 221.838 301.589 cv
cp
f
3 lw
221.838 301.589 mo
220.621 302.334 219.435 303.113 218.3 303.94 cv
218.587 304.15 218.862 304.369 219.143 304.583 cv
218.857 304.369 218.576 304.151 218.286 303.939 cv
209.191 310.578 202.865 319.828 199.744 330.033 cv
197.752 336.551 197.071 343.46 197.811 350.332 cv
198.24 354.316 199.144 358.289 200.554 362.164 cv
201.553 359.414 202.802 356.712 204.317 354.09 cv
205.831 351.468 207.546 349.037 209.427 346.794 cv
212.076 343.64 215.058 340.867 218.292 338.504 cv
223.872 334.429 230.198 331.566 236.84 330.033 cv
247.242 327.63 258.418 328.489 268.717 333.048 cv
270.001 333.617 271.27 334.261 272.525 334.945 cv
263.048 316.097 244.05 302.87 221.838 301.589 cv
cp
1 1 1 rgb
@
181.199 362.164 mo
185.85 367.149 191.491 371.195 197.813 373.99 cv
201.478 375.609 205.369 376.808 209.429 377.523 cv
207.547 375.283 205.831 372.85 204.317 370.228 cv
202.804 367.609 201.553 364.911 200.554 362.164 cv
199.144 358.289 198.24 354.316 197.811 350.332 cv
197.071 343.46 197.752 336.551 199.744 330.033 cv
202.865 319.828 209.191 310.578 218.286 303.939 cv
219.422 303.11 220.614 302.333 221.835 301.588 cv
220.662 301.521 219.482 301.478 218.292 301.478 cv
197.102 301.478 178.46 312.346 167.607 328.804 cv
167.642 330.233 167.718 331.651 167.869 333.048 cv
169.07 344.25 173.917 354.356 181.199 362.164 cv
cp
0 0 0 rgb
f
181.199 362.164 mo
185.85 367.149 191.491 371.195 197.813 373.99 cv
201.478 375.609 205.369 376.808 209.429 377.523 cv
207.547 375.283 205.831 372.85 204.317 370.228 cv
202.804 367.609 201.553 364.911 200.554 362.164 cv
199.144 358.289 198.24 354.316 197.811 350.332 cv
197.071 343.46 197.752 336.551 199.744 330.033 cv
202.865 319.828 209.191 310.578 218.286 303.939 cv
219.422 303.11 220.614 302.333 221.835 301.588 cv
220.662 301.521 219.482 301.478 218.292 301.478 cv
197.102 301.478 178.46 312.346 167.607 328.804 cv
167.642 330.233 167.718 331.651 167.869 333.048 cv
169.07 344.25 173.917 354.356 181.199 362.164 cv
cp
1 1 1 rgb
@
268.977 395.513 mo
268.942 394.085 268.865 392.667 268.715 391.27 cv
267.515 380.072 262.666 369.97 255.384 362.164 cv
250.734 357.177 245.094 353.125 238.771 350.33 cv
235.107 348.71 231.216 347.511 227.157 346.794 cv
229.039 349.037 230.754 351.468 232.268 354.09 cv
233.779 356.708 235.03 359.408 236.031 362.154 cv
237.442 366.029 238.345 370.001 238.775 373.988 cv
239.514 380.855 238.834 387.762 236.843 394.281 cv
233.723 404.488 227.396 413.738 218.298 420.378 cv
217.163 421.208 215.971 421.984 214.75 422.729 cv
215.923 422.796 217.103 422.84 218.292 422.84 cv
239.481 422.84 258.124 411.972 268.977 395.513 cv
cp
0 0 0 rgb
f
268.977 395.513 mo
268.942 394.085 268.865 392.667 268.715 391.27 cv
267.515 380.072 262.666 369.97 255.384 362.164 cv
250.734 357.177 245.094 353.125 238.771 350.33 cv
235.107 348.71 231.216 347.511 227.157 346.794 cv
229.039 349.037 230.754 351.468 232.268 354.09 cv
233.779 356.708 235.03 359.408 236.031 362.154 cv
237.442 366.029 238.345 370.001 238.775 373.988 cv
239.514 380.855 238.834 387.762 236.843 394.281 cv
233.723 404.488 227.396 413.738 218.298 420.378 cv
217.163 421.208 215.971 421.984 214.75 422.729 cv
215.923 422.796 217.103 422.84 218.292 422.84 cv
239.481 422.84 258.124 411.972 268.977 395.513 cv
cp
1 1 1 rgb
@
272.525 334.945 mo
271.27 334.261 270.001 333.617 268.717 333.048 cv
258.418 328.489 247.242 327.63 236.84 330.033 cv
230.198 331.566 223.872 334.429 218.292 338.504 cv
215.058 340.867 212.076 343.64 209.427 346.794 cv
212.306 346.289 215.268 346.021 218.292 346.021 cv
221.315 346.021 224.278 346.289 227.157 346.794 cv
231.216 347.511 235.107 348.71 238.771 350.33 cv
245.094 353.125 250.734 357.177 255.384 362.164 cv
262.666 369.97 267.515 380.072 268.715 391.27 cv
268.865 392.667 268.942 394.085 268.977 395.513 cv
275.288 385.941 278.973 374.482 278.973 362.159 cv
278.973 352.371 276.642 343.132 272.525 334.945 cv
cp
0 0 0 rgb
f
272.525 334.945 mo
271.27 334.261 270.001 333.617 268.717 333.048 cv
258.418 328.489 247.242 327.63 236.84 330.033 cv
230.198 331.566 223.872 334.429 218.292 338.504 cv
215.058 340.867 212.076 343.64 209.427 346.794 cv
212.306 346.289 215.268 346.021 218.292 346.021 cv
221.315 346.021 224.278 346.289 227.157 346.794 cv
231.216 347.511 235.107 348.71 238.771 350.33 cv
245.094 353.125 250.734 357.177 255.384 362.164 cv
262.666 369.97 267.515 380.072 268.715 391.27 cv
268.865 392.667 268.942 394.085 268.977 395.513 cv
275.288 385.941 278.973 374.482 278.973 362.159 cv
278.973 352.371 276.642 343.132 272.525 334.945 cv
cp
1 1 1 rgb
@
164.474 389.615 mo
164.726 389.75 164.977 389.883 165.23 390.013 cv
165.38 390.091 165.531 390.165 165.682 390.239 cv
165.908 390.353 166.132 390.466 166.36 390.576 cv
166.526 390.656 166.694 390.732 166.861 390.811 cv
167.074 390.912 167.286 391.011 167.502 391.109 cv
167.623 391.164 167.747 391.216 167.869 391.27 cv
167.923 391.293 167.977 391.316 168.029 391.341 cv
168.235 391.43 168.44 391.522 168.648 391.609 cv
168.832 391.688 169.017 391.762 169.202 391.838 cv
169.4 391.919 169.6 392 169.798 392.08 cv
169.99 392.156 170.182 392.227 170.375 392.3 cv
170.569 392.375 170.761 392.448 170.955 392.519 cv
171.155 392.591 171.353 392.662 171.553 392.732 cv
171.741 392.798 171.928 392.865 172.117 392.928 cv
172.322 392.998 172.529 393.064 172.735 393.132 cv
172.916 393.191 173.098 393.25 173.28 393.305 cv
173.494 393.374 173.708 393.437 173.922 393.501 cv
174.096 393.553 174.272 393.605 174.446 393.654 cv
174.668 393.717 174.89 393.78 175.112 393.839 cv
175.278 393.884 175.446 393.929 175.614 393.972 cv
175.844 394.033 176.074 394.091 176.304 394.148 cv
176.463 394.186 176.621 394.224 176.78 394.261 cv
177.021 394.317 177.261 394.373 177.502 394.425 cv
177.648 394.458 177.796 394.488 177.944 394.519 cv
178.195 394.572 178.448 394.625 178.7 394.672 cv
178.835 394.698 178.97 394.722 179.105 394.748 cv
179.37 394.796 179.635 394.845 179.899 394.89 cv
180.02 394.91 180.139 394.929 180.258 394.948 cv
180.539 394.993 180.82 395.039 181.103 395.078 cv
181.199 395.091 181.297 395.104 181.395 395.119 cv
181.698 395.159 182.002 395.201 182.305 395.237 cv
182.371 395.246 182.438 395.251 182.503 395.259 cv
182.838 395.296 183.173 395.333 183.508 395.367 cv
183.529 395.369 183.551 395.369 183.57 395.372 cv
188.624 395.845 193.689 395.552 198.598 394.537 cv
198.605 394.535 198.61 394.534 198.617 394.533 cv
198.987 394.457 199.357 394.375 199.725 394.29 cv
199.731 394.29 199.738 394.287 199.743 394.286 cv
206.386 392.751 212.712 389.889 218.293 385.813 cv
221.527 383.451 224.508 380.679 227.158 377.523 cv
224.278 378.031 221.317 378.296 218.292 378.296 cv
215.268 378.296 212.308 378.031 209.429 377.523 cv
205.369 376.808 201.478 375.609 197.813 373.99 cv
191.491 371.195 185.85 367.149 181.199 362.164 cv
173.917 354.356 169.07 344.25 167.869 333.048 cv
167.718 331.651 167.642 330.233 167.607 328.804 cv
161.294 338.376 157.61 349.835 157.61 362.159 cv
157.61 371.958 159.948 381.207 164.074 389.401 cv
164.083 389.406 164.092 389.412 164.103 389.417 cv
164.226 389.485 164.35 389.55 164.474 389.615 cv
cp
0 0 0 rgb
f
164.474 389.615 mo
164.726 389.75 164.977 389.883 165.23 390.013 cv
165.38 390.091 165.531 390.165 165.682 390.239 cv
165.908 390.353 166.132 390.466 166.36 390.576 cv
166.526 390.656 166.694 390.732 166.861 390.811 cv
167.074 390.912 167.286 391.011 167.502 391.109 cv
167.623 391.164 167.747 391.216 167.869 391.27 cv
167.923 391.293 167.977 391.316 168.029 391.341 cv
168.235 391.43 168.44 391.522 168.648 391.609 cv
168.832 391.688 169.017 391.762 169.202 391.838 cv
169.4 391.919 169.6 392 169.798 392.08 cv
169.99 392.156 170.182 392.227 170.375 392.3 cv
170.569 392.375 170.761 392.448 170.955 392.519 cv
171.155 392.591 171.353 392.662 171.553 392.732 cv
171.741 392.798 171.928 392.865 172.117 392.928 cv
172.322 392.998 172.529 393.064 172.735 393.132 cv
172.916 393.191 173.098 393.25 173.28 393.305 cv
173.494 393.374 173.708 393.437 173.922 393.501 cv
174.096 393.553 174.272 393.605 174.446 393.654 cv
174.668 393.717 174.89 393.78 175.112 393.839 cv
175.278 393.884 175.446 393.929 175.614 393.972 cv
175.844 394.033 176.074 394.091 176.304 394.148 cv
176.463 394.186 176.621 394.224 176.78 394.261 cv
177.021 394.317 177.261 394.373 177.502 394.425 cv
177.648 394.458 177.796 394.488 177.944 394.519 cv
178.195 394.572 178.448 394.625 178.7 394.672 cv
178.835 394.698 178.97 394.722 179.105 394.748 cv
179.37 394.796 179.635 394.845 179.899 394.89 cv
180.02 394.91 180.139 394.929 180.258 394.948 cv
180.539 394.993 180.82 395.039 181.103 395.078 cv
181.199 395.091 181.297 395.104 181.395 395.119 cv
181.698 395.159 182.002 395.201 182.305 395.237 cv
182.371 395.246 182.438 395.251 182.503 395.259 cv
182.838 395.296 183.173 395.333 183.508 395.367 cv
183.529 395.369 183.551 395.369 183.57 395.372 cv
188.624 395.845 193.689 395.552 198.598 394.537 cv
198.605 394.535 198.61 394.534 198.617 394.533 cv
198.987 394.457 199.357 394.375 199.725 394.29 cv
199.731 394.29 199.738 394.287 199.743 394.286 cv
206.386 392.751 212.712 389.889 218.293 385.813 cv
221.527 383.451 224.508 380.679 227.158 377.523 cv
224.278 378.031 221.317 378.296 218.292 378.296 cv
215.268 378.296 212.308 378.031 209.429 377.523 cv
205.369 376.808 201.478 375.609 197.813 373.99 cv
191.491 371.195 185.85 367.149 181.199 362.164 cv
173.917 354.356 169.07 344.25 167.869 333.048 cv
167.718 331.651 167.642 330.233 167.607 328.804 cv
161.294 338.376 157.61 349.835 157.61 362.159 cv
157.61 371.958 159.948 381.207 164.074 389.401 cv
164.083 389.406 164.092 389.412 164.103 389.417 cv
164.226 389.485 164.35 389.55 164.474 389.615 cv
cp
1 1 1 rgb
@
215.021 422.582 mo
215.364 422.371 215.704 422.156 216.04 421.938 cv
216.063 421.923 216.083 421.908 216.106 421.894 cv
216.534 421.615 217.148 421.185 217.598 420.87 cv
217.781 420.745 218.007 420.585 218.252 420.407 cv
218.267 420.396 218.281 420.384 218.297 420.373 cv
218.297 420.376 218.297 420.376 218.298 420.378 cv
218.407 420.298 218.51 420.214 218.617 420.134 cv
218.692 420.08 218.764 420.025 218.828 419.974 cv
227.637 413.367 233.785 404.287 236.843 394.281 cv
238.834 387.762 239.514 380.855 238.775 373.988 cv
238.345 370.001 237.442 366.029 236.031 362.154 cv
235.03 364.904 233.781 367.606 232.268 370.228 cv
230.754 372.85 229.04 375.283 227.158 377.523 cv
224.508 380.679 221.527 383.451 218.293 385.813 cv
212.712 389.889 206.386 392.751 199.743 394.286 cv
189.342 396.687 178.167 395.828 167.869 391.27 cv
166.582 390.701 165.314 390.057 164.059 389.374 cv
173.54 408.229 192.552 421.462 214.778 422.731 cv
214.811 422.712 214.844 422.693 214.876 422.674 cv
214.924 422.644 214.973 422.613 215.021 422.582 cv
cp
0 0 0 rgb
f
215.021 422.582 mo
215.364 422.371 215.704 422.156 216.04 421.938 cv
216.063 421.923 216.083 421.908 216.106 421.894 cv
216.534 421.615 217.148 421.185 217.598 420.87 cv
217.781 420.745 218.007 420.585 218.252 420.407 cv
218.267 420.396 218.281 420.384 218.297 420.373 cv
218.297 420.376 218.297 420.376 218.298 420.378 cv
218.407 420.298 218.51 420.214 218.617 420.134 cv
218.692 420.08 218.764 420.025 218.828 419.974 cv
227.637 413.367 233.785 404.287 236.843 394.281 cv
238.834 387.762 239.514 380.855 238.775 373.988 cv
238.345 370.001 237.442 366.029 236.031 362.154 cv
235.03 364.904 233.781 367.606 232.268 370.228 cv
230.754 372.85 229.04 375.283 227.158 377.523 cv
224.508 380.679 221.527 383.451 218.293 385.813 cv
212.712 389.889 206.386 392.751 199.743 394.286 cv
189.342 396.687 178.167 395.828 167.869 391.27 cv
166.582 390.701 165.314 390.057 164.059 389.374 cv
173.54 408.229 192.552 421.462 214.778 422.731 cv
214.811 422.712 214.844 422.693 214.876 422.674 cv
214.924 422.644 214.973 422.613 215.021 422.582 cv
cp
1 1 1 rgb
@
10 lw
431.585 362.16 mo
431.585 398.146 402.412 427.318 366.426 427.318 cv
330.439 427.318 301.266 398.146 301.266 362.16 cv
301.266 326.173 330.439 297 366.426 297 cv
402.412 297 431.585 326.173 431.585 362.16 cv
cp
0 0 0 rgb
@
366.427 302.494 mo
361.492 302.494 356.701 303.103 352.116 304.233 cv
348.234 309.742 345.286 315.806 343.342 322.172 cv
340.859 330.287 340.014 338.886 340.933 347.437 cv
341.466 352.398 342.591 357.342 344.347 362.166 cv
345.593 358.742 347.147 355.38 349.031 352.117 cv
350.915 348.853 353.05 345.826 355.392 343.037 cv
358.689 339.109 362.399 335.658 366.427 332.717 cv
373.37 327.644 381.244 324.082 389.511 322.172 cv
395.989 320.677 402.707 320.197 409.409 320.802 cv
398.556 309.523 383.315 302.494 366.427 302.494 cv
cp
f
3 lw
366.427 302.494 mo
361.492 302.494 356.701 303.103 352.116 304.233 cv
348.234 309.742 345.286 315.806 343.342 322.172 cv
340.859 330.287 340.014 338.886 340.933 347.437 cv
341.466 352.398 342.591 357.342 344.347 362.166 cv
345.593 358.742 347.147 355.38 349.031 352.117 cv
350.915 348.853 353.05 345.826 355.392 343.037 cv
358.689 339.109 362.399 335.658 366.427 332.717 cv
373.37 327.644 381.244 324.082 389.511 322.172 cv
395.989 320.677 402.707 320.197 409.409 320.802 cv
398.556 309.523 383.315 302.494 366.427 302.494 cv
cp
1 1 1 rgb
@
340.935 376.883 mo
345.497 378.898 350.34 380.393 355.394 381.283 cv
353.053 378.494 350.915 375.466 349.031 372.202 cv
347.15 368.943 345.593 365.583 344.347 362.166 cv
342.591 357.342 341.466 352.398 340.933 347.437 cv
340.014 338.886 340.859 330.287 343.342 322.172 cv
345.286 315.806 348.234 309.742 352.116 304.233 cv
331.42 309.33 314.985 325.218 309.106 345.593 cv
311.937 351.71 315.717 357.296 320.259 362.166 cv
326.045 368.371 333.067 373.407 340.935 376.883 cv
cp
0 0 0 rgb
f
340.935 376.883 mo
345.497 378.898 350.34 380.393 355.394 381.283 cv
353.053 378.494 350.915 375.466 349.031 372.202 cv
347.15 368.943 345.593 365.583 344.347 362.166 cv
342.591 357.342 341.466 352.398 340.933 347.437 cv
340.014 338.886 340.859 330.287 343.342 322.172 cv
345.286 315.806 348.234 309.742 352.116 304.233 cv
331.42 309.33 314.985 325.218 309.106 345.593 cv
311.937 351.71 315.717 357.296 320.259 362.166 cv
326.045 368.371 333.067 373.407 340.935 376.883 cv
cp
1 1 1 rgb
@
423.742 378.728 mo
420.912 372.615 417.132 367.032 412.594 362.166 cv
406.806 355.958 399.786 350.914 391.915 347.436 cv
387.355 345.42 382.511 343.927 377.458 343.037 cv
379.802 345.826 381.936 348.853 383.819 352.117 cv
385.703 355.375 387.26 358.734 388.503 362.153 cv
390.258 366.977 391.384 371.92 391.917 376.881 cv
392.839 385.429 391.994 394.026 389.515 402.139 cv
387.569 408.507 384.62 414.576 380.734 420.085 cv
401.429 414.99 417.862 399.101 423.742 378.728 cv
cp
0 0 0 rgb
f
423.742 378.728 mo
420.912 372.615 417.132 367.032 412.594 362.166 cv
406.806 355.958 399.786 350.914 391.915 347.436 cv
387.355 345.42 382.511 343.927 377.458 343.037 cv
379.802 345.826 381.936 348.853 383.819 352.117 cv
385.703 355.375 387.26 358.734 388.503 362.153 cv
390.258 366.977 391.384 371.92 391.917 376.881 cv
392.839 385.429 391.994 394.026 389.515 402.139 cv
387.569 408.507 384.62 414.576 380.734 420.085 cv
401.429 414.99 417.862 399.101 423.742 378.728 cv
cp
1 1 1 rgb
@
409.409 320.802 mo
402.707 320.197 395.989 320.677 389.511 322.172 cv
381.244 324.082 373.37 327.644 366.427 332.717 cv
362.399 335.658 358.689 339.109 355.392 343.037 cv
358.976 342.405 362.661 342.074 366.427 342.074 cv
370.188 342.074 373.878 342.405 377.458 343.037 cv
382.511 343.927 387.355 345.42 391.915 347.436 cv
399.786 350.914 406.806 355.958 412.594 362.166 cv
417.132 367.032 420.912 372.615 423.742 378.728 cv
425.262 373.466 426.092 367.911 426.092 362.16 cv
426.092 346.096 419.732 331.528 409.409 320.802 cv
cp
0 0 0 rgb
f
409.409 320.802 mo
402.707 320.197 395.989 320.677 389.511 322.172 cv
381.244 324.082 373.37 327.644 366.427 332.717 cv
362.399 335.658 358.689 339.109 355.392 343.037 cv
358.976 342.405 362.661 342.074 366.427 342.074 cv
370.188 342.074 373.878 342.405 377.458 343.037 cv
382.511 343.927 387.355 345.42 391.915 347.436 cv
399.786 350.914 406.806 355.958 412.594 362.166 cv
417.132 367.032 420.912 372.615 423.742 378.728 cv
425.262 373.466 426.092 367.911 426.092 362.16 cv
426.092 346.096 419.732 331.528 409.409 320.802 cv
cp
1 1 1 rgb
@
341.912 402.458 mo
341.921 402.456 341.93 402.455 341.936 402.454 cv
342.397 402.359 342.857 402.255 343.315 402.152 cv
343.324 402.15 343.332 402.146 343.338 402.146 cv
351.605 400.237 359.48 396.673 366.427 391.601 cv
370.452 388.66 374.164 385.21 377.458 381.283 cv
373.878 381.915 370.188 382.244 366.427 382.244 cv
362.661 382.244 358.976 381.915 355.394 381.283 cv
350.34 380.393 345.497 378.898 340.935 376.883 cv
333.067 373.407 326.045 368.371 320.259 362.166 cv
315.717 357.296 311.937 351.71 309.106 345.593 cv
307.589 350.855 306.76 356.409 306.76 362.16 cv
306.76 378.22 313.117 392.788 323.44 403.515 cv
329.65 404.074 335.877 403.707 341.912 402.458 cv
cp
0 0 0 rgb
f
341.912 402.458 mo
341.921 402.456 341.93 402.455 341.936 402.454 cv
342.397 402.359 342.857 402.255 343.315 402.152 cv
343.324 402.15 343.332 402.146 343.338 402.146 cv
351.605 400.237 359.48 396.673 366.427 391.601 cv
370.452 388.66 374.164 385.21 377.458 381.283 cv
373.878 381.915 370.188 382.244 366.427 382.244 cv
362.661 382.244 358.976 381.915 355.394 381.283 cv
350.34 380.393 345.497 378.898 340.935 376.883 cv
333.067 373.407 326.045 368.371 320.259 362.166 cv
315.717 357.296 311.937 351.71 309.106 345.593 cv
307.589 350.855 306.76 356.409 306.76 362.16 cv
306.76 378.22 313.117 392.788 323.44 403.515 cv
329.65 404.074 335.877 403.707 341.912 402.458 cv
cp
1 1 1 rgb
@
391.917 376.881 mo
391.384 371.92 390.258 366.977 388.503 362.153 cv
387.258 365.576 385.706 368.939 383.819 372.202 cv
381.936 375.466 379.802 378.494 377.458 381.283 cv
374.164 385.21 370.452 388.66 366.427 391.601 cv
359.48 396.673 351.605 400.237 343.338 402.146 cv
336.861 403.642 330.144 404.121 323.441 403.516 cv
334.296 414.795 349.535 421.824 366.427 421.824 cv
371.353 421.824 376.138 421.215 380.716 420.089 cv
384.607 414.579 387.567 408.511 389.515 402.139 cv
391.994 394.026 392.839 385.429 391.917 376.881 cv
cp
0 0 0 rgb
f
391.917 376.881 mo
391.384 371.92 390.258 366.977 388.503 362.153 cv
387.258 365.576 385.706 368.939 383.819 372.202 cv
381.936 375.466 379.802 378.494 377.458 381.283 cv
374.164 385.21 370.452 388.66 366.427 391.601 cv
359.48 396.673 351.605 400.237 343.338 402.146 cv
336.861 403.642 330.144 404.121 323.441 403.516 cv
334.296 414.795 349.535 421.824 366.427 421.824 cv
371.353 421.824 376.138 421.215 380.716 420.089 cv
384.607 414.579 387.567 408.511 389.515 402.139 cv
391.994 394.026 392.839 385.429 391.917 376.881 cv
cp
1 1 1 rgb
@
10 lw
579.718 362.16 mo
579.718 398.146 550.545 427.318 514.559 427.318 cv
478.572 427.318 449.399 398.146 449.399 362.16 cv
449.399 326.173 478.572 297 514.559 297 cv
550.545 297 579.718 326.173 579.718 362.16 cv
cp
0 0 0 rgb
@
483.234 309.747 mo
480.191 320.269 479.164 331.365 480.35 342.404 cv
481.066 349.06 482.577 355.695 484.932 362.166 cv
486.604 357.574 488.689 353.061 491.218 348.683 cv
493.746 344.304 496.609 340.242 499.753 336.498 cv
504.178 331.229 509.155 326.597 514.561 322.651 cv
523.523 316.103 533.648 311.453 544.28 308.824 cv
535.482 303.912 525.353 301.1 514.561 301.1 cv
503.106 301.1 492.394 304.26 483.234 309.747 cv
cp
f
3 lw
483.234 309.747 mo
480.191 320.269 479.164 331.365 480.35 342.404 cv
481.066 349.06 482.577 355.695 484.932 362.166 cv
486.604 357.574 488.689 353.061 491.218 348.683 cv
493.746 344.304 496.609 340.242 499.753 336.498 cv
504.178 331.229 509.155 326.597 514.561 322.651 cv
523.523 316.103 533.648 311.453 544.28 308.824 cv
535.482 303.912 525.353 301.1 514.561 301.1 cv
503.106 301.1 492.394 304.26 483.234 309.747 cv
cp
1 1 1 rgb
@
480.354 381.916 mo
486.474 384.621 492.975 386.626 499.757 387.82 cv
496.613 384.077 493.746 380.014 491.218 375.635 cv
488.693 371.26 486.604 366.754 484.932 362.166 cv
482.577 355.695 481.066 349.06 480.35 342.404 cv
479.164 331.365 480.191 320.269 483.234 309.747 cv
465.425 320.414 453.5 339.891 453.5 362.16 cv
453.5 362.475 453.519 362.787 453.522 363.1 cv
461.111 370.992 470.201 377.431 480.354 381.916 cv
cp
0 0 0 rgb
f
480.354 381.916 mo
486.474 384.621 492.975 386.626 499.757 387.82 cv
496.613 384.077 493.746 380.014 491.218 375.635 cv
488.693 371.26 486.604 366.754 484.932 362.166 cv
482.577 355.695 481.066 349.06 480.35 342.404 cv
479.164 331.365 480.191 320.269 483.234 309.747 cv
465.425 320.414 453.5 339.891 453.5 362.16 cv
453.5 362.475 453.519 362.787 453.522 363.1 cv
461.111 370.992 470.201 377.431 480.354 381.916 cv
cp
1 1 1 rgb
@
575.615 362.16 mo
575.615 361.847 575.597 361.541 575.593 361.228 cv
568.002 353.336 558.918 346.888 548.764 342.402 cv
542.642 339.698 536.143 337.694 529.364 336.498 cv
532.508 340.242 535.371 344.304 537.899 348.683 cv
540.428 353.056 542.517 357.564 544.184 362.15 cv
546.54 368.623 548.051 375.257 548.768 381.915 cv
549.957 392.954 548.93 404.048 545.887 414.57 cv
563.692 403.904 575.615 384.427 575.615 362.16 cv
cp
0 0 0 rgb
f
575.615 362.16 mo
575.615 361.847 575.597 361.541 575.593 361.228 cv
568.002 353.336 558.918 346.888 548.764 342.402 cv
542.642 339.698 536.143 337.694 529.364 336.498 cv
532.508 340.242 535.371 344.304 537.899 348.683 cv
540.428 353.056 542.517 357.564 544.184 362.15 cv
546.54 368.623 548.051 375.257 548.768 381.915 cv
549.957 392.954 548.93 404.048 545.887 414.57 cv
563.692 403.904 575.615 384.427 575.615 362.16 cv
cp
1 1 1 rgb
@
544.28 308.824 mo
533.648 311.453 523.523 316.103 514.561 322.651 cv
509.155 326.597 504.178 331.229 499.753 336.498 cv
504.563 335.651 509.508 335.207 514.561 335.207 cv
519.607 335.207 524.559 335.651 529.364 336.498 cv
536.143 337.694 542.642 339.698 548.764 342.402 cv
558.918 346.888 568.002 353.336 575.593 361.228 cv
575.253 338.691 562.716 319.121 544.28 308.824 cv
cp
0 0 0 rgb
f
544.28 308.824 mo
533.648 311.453 523.523 316.103 514.561 322.651 cv
509.155 326.597 504.178 331.229 499.753 336.498 cv
504.563 335.651 509.508 335.207 514.561 335.207 cv
519.607 335.207 524.559 335.651 529.364 336.498 cv
536.143 337.694 542.642 339.698 548.764 342.402 cv
558.918 346.888 568.002 353.336 575.593 361.228 cv
575.253 338.691 562.716 319.121 544.28 308.824 cv
cp
1 1 1 rgb
@
529.364 387.82 mo
524.559 388.667 519.607 389.111 514.561 389.111 cv
509.508 389.111 504.563 388.667 499.757 387.82 cv
492.975 386.626 486.474 384.621 480.354 381.916 cv
470.201 377.431 461.111 370.992 453.522 363.1 cv
453.866 385.63 466.402 405.197 484.835 415.492 cv
495.469 412.866 505.592 408.212 514.561 401.665 cv
519.96 397.72 524.941 393.089 529.364 387.82 cv
cp
0 0 0 rgb
f
529.364 387.82 mo
524.559 388.667 519.607 389.111 514.561 389.111 cv
509.508 389.111 504.563 388.667 499.757 387.82 cv
492.975 386.626 486.474 384.621 480.354 381.916 cv
470.201 377.431 461.111 370.992 453.522 363.1 cv
453.866 385.63 466.402 405.197 484.835 415.492 cv
495.469 412.866 505.592 408.212 514.561 401.665 cv
519.96 397.72 524.941 393.089 529.364 387.82 cv
cp
1 1 1 rgb
@
548.768 381.915 mo
548.051 375.257 546.54 368.623 544.184 362.15 cv
542.514 366.745 540.432 371.256 537.899 375.635 cv
535.371 380.014 532.508 384.077 529.364 387.82 cv
524.941 393.089 519.96 397.72 514.561 401.665 cv
505.592 408.212 495.469 412.866 484.835 415.492 cv
493.633 420.406 503.767 423.218 514.561 423.218 cv
526.015 423.218 536.728 420.056 545.887 414.57 cv
548.93 404.048 549.957 392.954 548.768 381.915 cv
cp
0 0 0 rgb
f
548.768 381.915 mo
548.051 375.257 546.54 368.623 544.184 362.15 cv
542.514 366.745 540.432 371.256 537.899 375.635 cv
535.371 380.014 532.508 384.077 529.364 387.82 cv
524.941 393.089 519.96 397.72 514.561 401.665 cv
505.592 408.212 495.469 412.866 484.835 415.492 cv
493.633 420.406 503.767 423.218 514.561 423.218 cv
526.015 423.218 536.728 420.056 545.887 414.57 cv
548.93 404.048 549.957 392.954 548.768 381.915 cv
cp
1 1 1 rgb
@
10 lw
135.318 511.16 mo
135.318 547.146 106.146 576.318 70.1592 576.318 cv
34.1729 576.318 5.00004 547.146 5.00004 511.16 cv
5.00004 475.173 34.1729 446 70.1592 446 cv
106.146 446 135.318 475.173 135.318 511.16 cv
cp
0 0 0 rgb
@
97.9537 456.601 mo
89.8467 455.857 81.4385 457.521 73.8516 461.902 cv
72.565 462.645 71.3394 463.455 70.1656 464.312 cv
70.3965 464.48 70.6182 464.656 70.8448 464.829 cv
70.6143 464.656 70.3872 464.48 70.1543 464.31 cv
62.836 469.653 57.7452 477.095 55.2344 485.307 cv
53.6309 490.552 53.083 496.113 53.6787 501.641 cv
54.0235 504.847 54.751 508.044 55.8858 511.163 cv
56.6905 508.951 57.6954 506.776 58.9136 504.666 cv
60.1319 502.556 61.5122 500.599 63.0259 498.796 cv
65.1578 496.257 67.5562 494.026 70.1592 492.125 cv
74.6495 488.845 79.7398 486.542 85.085 485.307 cv
93.4551 483.375 102.447 484.065 110.735 487.734 cv
112.064 488.322 113.376 488.985 114.664 489.728 cv
122.24 494.103 127.882 500.541 131.292 507.923 cv
130.123 485.498 116.888 466.267 97.9537 456.601 cv
cp
f
4 lw
97.9537 456.601 mo
89.8467 455.857 81.4385 457.521 73.8516 461.902 cv
72.565 462.645 71.3394 463.455 70.1656 464.312 cv
70.3965 464.48 70.6182 464.656 70.8448 464.829 cv
70.6143 464.656 70.3872 464.48 70.1543 464.31 cv
62.836 469.653 57.7452 477.095 55.2344 485.307 cv
53.6309 490.552 53.083 496.113 53.6787 501.641 cv
54.0235 504.847 54.751 508.044 55.8858 511.163 cv
56.6905 508.951 57.6954 506.776 58.9136 504.666 cv
60.1319 502.556 61.5122 500.599 63.0259 498.796 cv
65.1578 496.257 67.5562 494.026 70.1592 492.125 cv
74.6495 488.845 79.7398 486.542 85.085 485.307 cv
93.4551 483.375 102.447 484.065 110.735 487.734 cv
112.064 488.322 113.376 488.985 114.664 489.728 cv
122.24 494.103 127.882 500.541 131.292 507.923 cv
130.123 485.498 116.888 466.267 97.9537 456.601 cv
cp
1 1 1 rgb
@
29.5845 487.734 mo
30.5508 496.747 34.4512 504.88 40.3116 511.163 cv
44.0537 515.174 48.5938 518.43 53.6802 520.678 cv
56.6289 521.981 59.7608 522.947 63.0274 523.522 cv
61.5127 521.718 60.1319 519.761 58.9136 517.652 cv
57.6968 515.544 56.6905 513.373 55.8858 511.163 cv
54.751 508.044 54.0235 504.847 53.6787 501.641 cv
53.083 496.113 53.6309 490.552 55.2344 485.307 cv
57.7452 477.095 62.836 469.653 70.1543 464.31 cv
71.3301 463.453 72.562 462.646 73.8516 461.902 cv
81.4385 457.521 89.8467 455.857 97.9537 456.601 cv
89.6128 452.343 80.167 449.941 70.1592 449.941 cv
57.8511 449.941 46.3931 453.578 36.795 459.829 cv
32.1045 466.474 29.3477 474.581 29.3477 483.333 cv
29.3477 484.82 29.4297 486.289 29.5845 487.734 cv
cp
0 0 0 rgb
f
29.5845 487.734 mo
30.5508 496.747 34.4512 504.88 40.3116 511.163 cv
44.0537 515.174 48.5938 518.43 53.6802 520.678 cv
56.6289 521.981 59.7608 522.947 63.0274 523.522 cv
61.5127 521.718 60.1319 519.761 58.9136 517.652 cv
57.6968 515.544 56.6905 513.373 55.8858 511.163 cv
54.751 508.044 54.0235 504.847 53.6787 501.641 cv
53.083 496.113 53.6309 490.552 55.2344 485.307 cv
57.7452 477.095 62.836 469.653 70.1543 464.31 cv
71.3301 463.453 72.562 462.646 73.8516 461.902 cv
81.4385 457.521 89.8467 455.857 97.9537 456.601 cv
89.6128 452.343 80.167 449.941 70.1592 449.941 cv
57.8511 449.941 46.3931 453.578 36.795 459.829 cv
32.1045 466.474 29.3477 474.581 29.3477 483.333 cv
29.3477 484.82 29.4297 486.289 29.5845 487.734 cv
cp
1 1 1 rgb
@
110.734 534.583 mo
109.768 525.574 105.866 517.445 100.007 511.163 cv
96.2642 507.15 91.7261 503.888 86.6387 501.64 cv
83.6895 500.337 80.5591 499.372 77.2925 498.796 cv
78.8067 500.599 80.1875 502.556 81.4058 504.666 cv
82.6216 506.773 83.6285 508.945 84.4336 511.155 cv
85.5684 514.273 86.2954 517.47 86.6412 520.677 cv
87.2364 526.203 86.6895 531.761 85.087 537.005 cv
82.5762 545.22 77.4849 552.664 70.1651 558.007 cv
68.9883 558.865 67.7574 559.671 66.4678 560.416 cv
58.8799 564.796 50.4712 566.46 42.3628 565.715 cv
50.7041 569.974 60.1509 572.376 70.1592 572.376 cv
82.4678 572.376 93.9253 568.741 103.523 562.49 cv
108.214 555.844 110.971 547.738 110.971 538.986 cv
110.971 537.498 110.889 536.03 110.734 534.583 cv
cp
0 0 0 rgb
f
110.734 534.583 mo
109.768 525.574 105.866 517.445 100.007 511.163 cv
96.2642 507.15 91.7261 503.888 86.6387 501.64 cv
83.6895 500.337 80.5591 499.372 77.2925 498.796 cv
78.8067 500.599 80.1875 502.556 81.4058 504.666 cv
82.6216 506.773 83.6285 508.945 84.4336 511.155 cv
85.5684 514.273 86.2954 517.47 86.6412 520.677 cv
87.2364 526.203 86.6895 531.761 85.087 537.005 cv
82.5762 545.22 77.4849 552.664 70.1651 558.007 cv
68.9883 558.865 67.7574 559.671 66.4678 560.416 cv
58.8799 564.796 50.4712 566.46 42.3628 565.715 cv
50.7041 569.974 60.1509 572.376 70.1592 572.376 cv
82.4678 572.376 93.9253 568.741 103.523 562.49 cv
108.214 555.844 110.971 547.738 110.971 538.986 cv
110.971 537.498 110.889 536.03 110.734 534.583 cv
cp
1 1 1 rgb
@
131.377 511.159 mo
131.377 510.074 131.348 508.995 131.292 507.923 cv
127.882 500.541 122.24 494.103 114.664 489.728 cv
113.376 488.985 112.064 488.322 110.735 487.734 cv
102.447 484.065 93.4551 483.375 85.085 485.307 cv
79.7398 486.542 74.6495 488.845 70.1592 492.125 cv
67.5562 494.026 65.1578 496.257 63.0259 498.796 cv
65.3423 498.388 67.7261 498.173 70.1592 498.173 cv
72.5923 498.173 74.9766 498.388 77.2925 498.796 cv
80.5591 499.372 83.6895 500.337 86.6387 501.64 cv
91.7261 503.888 96.2642 507.15 100.007 511.163 cv
105.866 517.445 109.768 525.574 110.734 534.583 cv
110.889 536.03 110.971 537.498 110.971 538.986 cv
110.971 547.738 108.214 555.844 103.523 562.49 cv
120.29 551.57 131.377 532.66 131.377 511.159 cv
cp
0 0 0 rgb
f
131.377 511.159 mo
131.377 510.074 131.348 508.995 131.292 507.923 cv
127.882 500.541 122.24 494.103 114.664 489.728 cv
113.376 488.985 112.064 488.322 110.735 487.734 cv
102.447 484.065 93.4551 483.375 85.085 485.307 cv
79.7398 486.542 74.6495 488.845 70.1592 492.125 cv
67.5562 494.026 65.1578 496.257 63.0259 498.796 cv
65.3423 498.388 67.7261 498.173 70.1592 498.173 cv
72.5923 498.173 74.9766 498.388 77.2925 498.796 cv
80.5591 499.372 83.6895 500.337 86.6387 501.64 cv
91.7261 503.888 96.2642 507.15 100.007 511.163 cv
105.866 517.445 109.768 525.574 110.734 534.583 cv
110.889 536.03 110.971 537.498 110.971 538.986 cv
110.971 547.738 108.214 555.844 103.523 562.49 cv
120.29 551.57 131.377 532.66 131.377 511.159 cv
cp
1 1 1 rgb
@
25.6553 532.589 mo
25.9537 532.761 26.2535 532.929 26.5542 533.093 cv
26.6534 533.147 26.7535 533.199 26.8531 533.251 cv
27.0552 533.361 27.2569 533.468 27.4605 533.572 cv
27.5821 533.634 27.7037 533.694 27.8247 533.754 cv
28.0064 533.845 28.188 533.937 28.3711 534.025 cv
28.5049 534.089 28.6397 534.151 28.774 534.214 cv
28.9454 534.294 29.1167 534.375 29.2891 534.454 cv
29.3872 534.498 29.4859 534.541 29.5845 534.583 cv
29.628 534.603 29.6714 534.622 29.7144 534.641 cv
29.8799 534.712 30.045 534.787 30.211 534.857 cv
30.3594 534.919 30.5083 534.98 30.6573 535.041 cv
30.8174 535.106 30.9776 535.171 31.1372 535.236 cv
31.292 535.296 31.4468 535.354 31.6016 535.414 cv
31.7569 535.472 31.9126 535.531 32.0684 535.589 cv
32.229 535.647 32.3887 535.704 32.5489 535.76 cv
32.7002 535.813 32.8511 535.867 33.003 535.917 cv
33.169 535.974 33.3345 536.028 33.5005 536.083 cv
33.6465 536.13 33.793 536.175 33.9395 536.222 cv
34.1114 536.276 34.2832 536.328 34.4556 536.379 cv
34.5962 536.421 34.7369 536.462 34.8775 536.501 cv
35.0557 536.553 35.2344 536.603 35.4126 536.651 cv
35.5474 536.688 35.6827 536.724 35.8174 536.759 cv
36.0025 536.806 36.187 536.854 36.3731 536.899 cv
36.5005 536.93 36.628 536.96 36.7559 536.991 cv
36.9488 537.036 37.1426 537.08 37.336 537.123 cv
37.4546 537.149 37.5733 537.173 37.6929 537.198 cv
37.8946 537.24 38.0977 537.283 38.3003 537.322 cv
38.4087 537.342 38.5181 537.362 38.6265 537.382 cv
38.8394 537.422 39.0528 537.46 39.2662 537.497 cv
39.3623 537.513 39.458 537.528 39.5542 537.542 cv
39.7803 537.58 40.0064 537.616 40.2334 537.648 cv
40.3116 537.659 40.3902 537.669 40.4683 537.681 cv
40.7129 537.713 40.9576 537.747 41.2017 537.776 cv
41.2549 537.783 41.3081 537.787 41.3614 537.793 cv
41.6304 537.824 41.8999 537.854 42.169 537.879 cv
42.1866 537.881 42.2037 537.882 42.2203 537.884 cv
46.2852 538.265 50.3623 538.029 54.312 537.212 cv
54.3174 537.21 54.3223 537.21 54.3272 537.208 cv
54.625 537.148 54.9224 537.082 55.2183 537.014 cv
55.2237 537.013 55.2286 537.011 55.2339 537.01 cv
60.5787 535.777 65.669 533.472 70.1602 530.193 cv
72.7627 528.292 75.1612 526.061 77.2935 523.522 cv
74.9766 523.93 72.5933 524.144 70.1592 524.144 cv
67.7261 524.144 65.3433 523.93 63.0274 523.522 cv
59.7608 522.947 56.6289 521.981 53.6802 520.678 cv
48.5938 518.43 44.0537 515.174 40.3116 511.163 cv
34.4512 504.88 30.5508 496.747 29.5845 487.734 cv
29.4297 486.289 29.3477 484.82 29.3477 483.333 cv
29.3477 474.581 32.1045 466.474 36.795 459.829 cv
20.0284 470.75 8.94193 489.658 8.94193 511.159 cv
8.94193 512.245 8.97123 513.324 9.02689 514.395 cv
12.4366 521.777 18.0782 528.214 25.6553 532.589 cv
cp
0 0 0 rgb
f
25.6553 532.589 mo
25.9537 532.761 26.2535 532.929 26.5542 533.093 cv
26.6534 533.147 26.7535 533.199 26.8531 533.251 cv
27.0552 533.361 27.2569 533.468 27.4605 533.572 cv
27.5821 533.634 27.7037 533.694 27.8247 533.754 cv
28.0064 533.845 28.188 533.937 28.3711 534.025 cv
28.5049 534.089 28.6397 534.151 28.774 534.214 cv
28.9454 534.294 29.1167 534.375 29.2891 534.454 cv
29.3872 534.498 29.4859 534.541 29.5845 534.583 cv
29.628 534.603 29.6714 534.622 29.7144 534.641 cv
29.8799 534.712 30.045 534.787 30.211 534.857 cv
30.3594 534.919 30.5083 534.98 30.6573 535.041 cv
30.8174 535.106 30.9776 535.171 31.1372 535.236 cv
31.292 535.296 31.4468 535.354 31.6016 535.414 cv
31.7569 535.472 31.9126 535.531 32.0684 535.589 cv
32.229 535.647 32.3887 535.704 32.5489 535.76 cv
32.7002 535.813 32.8511 535.867 33.003 535.917 cv
33.169 535.974 33.3345 536.028 33.5005 536.083 cv
33.6465 536.13 33.793 536.175 33.9395 536.222 cv
34.1114 536.276 34.2832 536.328 34.4556 536.379 cv
34.5962 536.421 34.7369 536.462 34.8775 536.501 cv
35.0557 536.553 35.2344 536.603 35.4126 536.651 cv
35.5474 536.688 35.6827 536.724 35.8174 536.759 cv
36.0025 536.806 36.187 536.854 36.3731 536.899 cv
36.5005 536.93 36.628 536.96 36.7559 536.991 cv
36.9488 537.036 37.1426 537.08 37.336 537.123 cv
37.4546 537.149 37.5733 537.173 37.6929 537.198 cv
37.8946 537.24 38.0977 537.283 38.3003 537.322 cv
38.4087 537.342 38.5181 537.362 38.6265 537.382 cv
38.8394 537.422 39.0528 537.46 39.2662 537.497 cv
39.3623 537.513 39.458 537.528 39.5542 537.542 cv
39.7803 537.58 40.0064 537.616 40.2334 537.648 cv
40.3116 537.659 40.3902 537.669 40.4683 537.681 cv
40.7129 537.713 40.9576 537.747 41.2017 537.776 cv
41.2549 537.783 41.3081 537.787 41.3614 537.793 cv
41.6304 537.824 41.8999 537.854 42.169 537.879 cv
42.1866 537.881 42.2037 537.882 42.2203 537.884 cv
46.2852 538.265 50.3623 538.029 54.312 537.212 cv
54.3174 537.21 54.3223 537.21 54.3272 537.208 cv
54.625 537.148 54.9224 537.082 55.2183 537.014 cv
55.2237 537.013 55.2286 537.011 55.2339 537.01 cv
60.5787 535.777 65.669 533.472 70.1602 530.193 cv
72.7627 528.292 75.1612 526.061 77.2935 523.522 cv
74.9766 523.93 72.5933 524.144 70.1592 524.144 cv
67.7261 524.144 65.3433 523.93 63.0274 523.522 cv
59.7608 522.947 56.6289 521.981 53.6802 520.678 cv
48.5938 518.43 44.0537 515.174 40.3116 511.163 cv
34.4512 504.88 30.5508 496.747 29.5845 487.734 cv
29.4297 486.289 29.3477 484.82 29.3477 483.333 cv
29.3477 474.581 32.1045 466.474 36.795 459.829 cv
20.0284 470.75 8.94193 489.658 8.94193 511.159 cv
8.94193 512.245 8.97123 513.324 9.02689 514.395 cv
12.4366 521.777 18.0782 528.214 25.6553 532.589 cv
cp
1 1 1 rgb
@
66.4678 560.416 mo
66.7852 560.233 67.0992 560.044 67.4102 559.853 cv
67.4497 559.83 67.4883 559.804 67.5274 559.781 cv
67.8033 559.609 68.0767 559.437 68.3472 559.261 cv
68.3653 559.25 68.3824 559.238 68.4009 559.226 cv
68.7442 559.001 69.2393 558.656 69.6011 558.402 cv
69.7481 558.301 69.9302 558.173 70.127 558.03 cv
70.1392 558.021 70.1509 558.011 70.1641 558.002 cv
70.1641 558.003 70.1641 558.005 70.1651 558.007 cv
70.2515 557.943 70.3345 557.875 70.4214 557.811 cv
70.4815 557.765 70.5391 557.722 70.5909 557.681 cv
77.6792 552.364 82.6265 545.058 85.087 537.005 cv
86.6895 531.761 87.2364 526.203 86.6412 520.677 cv
86.2954 517.47 85.5684 514.273 84.4336 511.155 cv
83.6285 513.368 82.6236 515.542 81.4058 517.652 cv
80.1875 519.761 78.8077 521.718 77.2935 523.522 cv
75.1612 526.061 72.7627 528.292 70.1602 530.193 cv
65.669 533.472 60.5787 535.777 55.2339 537.01 cv
46.8638 538.943 37.8716 538.251 29.5845 534.583 cv
28.2549 533.996 26.9434 533.333 25.6553 532.589 cv
18.0782 528.214 12.4366 521.777 9.02689 514.395 cv
10.1949 536.82 23.4302 556.05 42.3628 565.715 cv
50.4712 566.46 58.8799 564.796 66.4678 560.416 cv
cp
0 0 0 rgb
f
66.4678 560.416 mo
66.7852 560.233 67.0992 560.044 67.4102 559.853 cv
67.4497 559.83 67.4883 559.804 67.5274 559.781 cv
67.8033 559.609 68.0767 559.437 68.3472 559.261 cv
68.3653 559.25 68.3824 559.238 68.4009 559.226 cv
68.7442 559.001 69.2393 558.656 69.6011 558.402 cv
69.7481 558.301 69.9302 558.173 70.127 558.03 cv
70.1392 558.021 70.1509 558.011 70.1641 558.002 cv
70.1641 558.003 70.1641 558.005 70.1651 558.007 cv
70.2515 557.943 70.3345 557.875 70.4214 557.811 cv
70.4815 557.765 70.5391 557.722 70.5909 557.681 cv
77.6792 552.364 82.6265 545.058 85.087 537.005 cv
86.6895 531.761 87.2364 526.203 86.6412 520.677 cv
86.2954 517.47 85.5684 514.273 84.4336 511.155 cv
83.6285 513.368 82.6236 515.542 81.4058 517.652 cv
80.1875 519.761 78.8077 521.718 77.2935 523.522 cv
75.1612 526.061 72.7627 528.292 70.1602 530.193 cv
65.669 533.472 60.5787 535.777 55.2339 537.01 cv
46.8638 538.943 37.8716 538.251 29.5845 534.583 cv
28.2549 533.996 26.9434 533.333 25.6553 532.589 cv
18.0782 528.214 12.4366 521.777 9.02689 514.395 cv
10.1949 536.82 23.4302 556.05 42.3628 565.715 cv
50.4712 566.46 58.8799 564.796 66.4678 560.416 cv
cp
1 1 1 rgb
@
10 lw
283.451 511.16 mo
283.451 547.146 254.278 576.318 218.292 576.318 cv
182.305 576.318 153.133 547.146 153.133 511.16 cv
153.133 475.173 182.305 446 218.292 446 cv
254.278 446 283.451 475.173 283.451 511.16 cv
cp
0 0 0 rgb
@
221.838 450.589 mo
220.621 451.334 219.435 452.113 218.3 452.94 cv
218.587 453.15 218.862 453.369 219.143 453.583 cv
218.857 453.369 218.576 453.151 218.286 452.939 cv
209.191 459.578 202.865 468.828 199.744 479.033 cv
197.752 485.551 197.071 492.46 197.811 499.332 cv
198.24 503.316 199.144 507.289 200.554 511.164 cv
201.553 508.414 202.802 505.712 204.317 503.09 cv
205.831 500.468 207.546 498.037 209.427 495.794 cv
212.076 492.64 215.058 489.867 218.292 487.504 cv
223.872 483.429 230.198 480.566 236.84 479.033 cv
247.242 476.63 258.418 477.489 268.717 482.048 cv
270.001 482.617 271.27 483.261 272.525 483.945 cv
263.048 465.097 244.05 451.87 221.838 450.589 cv
cp
f
4 lw
221.838 450.589 mo
220.621 451.334 219.435 452.113 218.3 452.94 cv
218.587 453.15 218.862 453.369 219.143 453.583 cv
218.857 453.369 218.576 453.151 218.286 452.939 cv
209.191 459.578 202.865 468.828 199.744 479.033 cv
197.752 485.551 197.071 492.46 197.811 499.332 cv
198.24 503.316 199.144 507.289 200.554 511.164 cv
201.553 508.414 202.802 505.712 204.317 503.09 cv
205.831 500.468 207.546 498.037 209.427 495.794 cv
212.076 492.64 215.058 489.867 218.292 487.504 cv
223.872 483.429 230.198 480.566 236.84 479.033 cv
247.242 476.63 258.418 477.489 268.717 482.048 cv
270.001 482.617 271.27 483.261 272.525 483.945 cv
263.048 465.097 244.05 451.87 221.838 450.589 cv
cp
1 1 1 rgb
@
181.199 511.164 mo
185.85 516.149 191.491 520.195 197.813 522.99 cv
201.478 524.609 205.369 525.808 209.429 526.523 cv
207.547 524.283 205.831 521.85 204.317 519.228 cv
202.804 516.609 201.553 513.911 200.554 511.164 cv
199.144 507.289 198.24 503.316 197.811 499.332 cv
197.071 492.46 197.752 485.551 199.744 479.033 cv
202.865 468.828 209.191 459.578 218.286 452.939 cv
219.422 452.11 220.614 451.333 221.835 450.588 cv
220.662 450.521 219.482 450.478 218.292 450.478 cv
197.102 450.478 178.46 461.346 167.607 477.804 cv
167.642 479.233 167.718 480.651 167.869 482.048 cv
169.07 493.25 173.917 503.356 181.199 511.164 cv
cp
0 0 0 rgb
f
181.199 511.164 mo
185.85 516.149 191.491 520.195 197.813 522.99 cv
201.478 524.609 205.369 525.808 209.429 526.523 cv
207.547 524.283 205.831 521.85 204.317 519.228 cv
202.804 516.609 201.553 513.911 200.554 511.164 cv
199.144 507.289 198.24 503.316 197.811 499.332 cv
197.071 492.46 197.752 485.551 199.744 479.033 cv
202.865 468.828 209.191 459.578 218.286 452.939 cv
219.422 452.11 220.614 451.333 221.835 450.588 cv
220.662 450.521 219.482 450.478 218.292 450.478 cv
197.102 450.478 178.46 461.346 167.607 477.804 cv
167.642 479.233 167.718 480.651 167.869 482.048 cv
169.07 493.25 173.917 503.356 181.199 511.164 cv
cp
1 1 1 rgb
@
268.977 544.513 mo
268.942 543.085 268.865 541.667 268.715 540.27 cv
267.515 529.072 262.666 518.97 255.384 511.164 cv
250.734 506.177 245.094 502.125 238.771 499.33 cv
235.107 497.71 231.216 496.511 227.157 495.794 cv
229.039 498.037 230.754 500.468 232.268 503.09 cv
233.779 505.708 235.03 508.408 236.031 511.154 cv
237.442 515.029 238.345 519.001 238.775 522.988 cv
239.514 529.855 238.834 536.762 236.843 543.281 cv
233.723 553.488 227.396 562.738 218.298 569.378 cv
217.163 570.208 215.971 570.984 214.75 571.729 cv
215.923 571.796 217.103 571.84 218.292 571.84 cv
239.481 571.84 258.124 560.972 268.977 544.513 cv
cp
0 0 0 rgb
f
268.977 544.513 mo
268.942 543.085 268.865 541.667 268.715 540.27 cv
267.515 529.072 262.666 518.97 255.384 511.164 cv
250.734 506.177 245.094 502.125 238.771 499.33 cv
235.107 497.71 231.216 496.511 227.157 495.794 cv
229.039 498.037 230.754 500.468 232.268 503.09 cv
233.779 505.708 235.03 508.408 236.031 511.154 cv
237.442 515.029 238.345 519.001 238.775 522.988 cv
239.514 529.855 238.834 536.762 236.843 543.281 cv
233.723 553.488 227.396 562.738 218.298 569.378 cv
217.163 570.208 215.971 570.984 214.75 571.729 cv
215.923 571.796 217.103 571.84 218.292 571.84 cv
239.481 571.84 258.124 560.972 268.977 544.513 cv
cp
1 1 1 rgb
@
272.525 483.945 mo
271.27 483.261 270.001 482.617 268.717 482.048 cv
258.418 477.489 247.242 476.63 236.84 479.033 cv
230.198 480.566 223.872 483.429 218.292 487.504 cv
215.058 489.867 212.076 492.64 209.427 495.794 cv
212.306 495.289 215.268 495.021 218.292 495.021 cv
221.315 495.021 224.278 495.289 227.157 495.794 cv
231.216 496.511 235.107 497.71 238.771 499.33 cv
245.094 502.125 250.734 506.177 255.384 511.164 cv
262.666 518.97 267.515 529.072 268.715 540.27 cv
268.865 541.667 268.942 543.085 268.977 544.513 cv
275.288 534.941 278.973 523.482 278.973 511.159 cv
278.973 501.371 276.642 492.132 272.525 483.945 cv
cp
0 0 0 rgb
f
272.525 483.945 mo
271.27 483.261 270.001 482.617 268.717 482.048 cv
258.418 477.489 247.242 476.63 236.84 479.033 cv
230.198 480.566 223.872 483.429 218.292 487.504 cv
215.058 489.867 212.076 492.64 209.427 495.794 cv
212.306 495.289 215.268 495.021 218.292 495.021 cv
221.315 495.021 224.278 495.289 227.157 495.794 cv
231.216 496.511 235.107 497.71 238.771 499.33 cv
245.094 502.125 250.734 506.177 255.384 511.164 cv
262.666 518.97 267.515 529.072 268.715 540.27 cv
268.865 541.667 268.942 543.085 268.977 544.513 cv
275.288 534.941 278.973 523.482 278.973 511.159 cv
278.973 501.371 276.642 492.132 272.525 483.945 cv
cp
1 1 1 rgb
@
164.474 538.615 mo
164.726 538.75 164.977 538.883 165.23 539.013 cv
165.38 539.091 165.531 539.165 165.682 539.239 cv
165.908 539.353 166.132 539.466 166.36 539.576 cv
166.526 539.656 166.694 539.732 166.861 539.811 cv
167.074 539.912 167.286 540.011 167.502 540.109 cv
167.623 540.164 167.747 540.216 167.869 540.27 cv
167.923 540.293 167.977 540.316 168.029 540.341 cv
168.235 540.43 168.44 540.522 168.648 540.609 cv
168.832 540.688 169.017 540.762 169.202 540.838 cv
169.4 540.919 169.6 541 169.798 541.08 cv
169.99 541.156 170.182 541.227 170.375 541.3 cv
170.569 541.375 170.761 541.448 170.955 541.519 cv
171.155 541.591 171.353 541.662 171.553 541.732 cv
171.741 541.798 171.928 541.865 172.117 541.928 cv
172.322 541.998 172.529 542.064 172.735 542.132 cv
172.916 542.191 173.098 542.25 173.28 542.305 cv
173.494 542.374 173.708 542.437 173.922 542.501 cv
174.096 542.553 174.272 542.605 174.446 542.654 cv
174.668 542.717 174.89 542.78 175.112 542.839 cv
175.278 542.884 175.446 542.929 175.614 542.972 cv
175.844 543.033 176.074 543.091 176.304 543.148 cv
176.463 543.186 176.621 543.224 176.78 543.261 cv
177.021 543.317 177.261 543.373 177.502 543.425 cv
177.648 543.458 177.796 543.488 177.944 543.519 cv
178.195 543.572 178.448 543.625 178.7 543.672 cv
178.835 543.698 178.97 543.722 179.105 543.748 cv
179.37 543.796 179.635 543.845 179.899 543.89 cv
180.02 543.91 180.139 543.929 180.258 543.948 cv
180.539 543.993 180.82 544.039 181.103 544.078 cv
181.199 544.091 181.297 544.104 181.395 544.119 cv
181.698 544.159 182.002 544.201 182.305 544.237 cv
182.371 544.246 182.438 544.251 182.503 544.259 cv
182.838 544.296 183.173 544.333 183.508 544.367 cv
183.529 544.369 183.551 544.369 183.57 544.372 cv
188.624 544.845 193.689 544.552 198.598 543.537 cv
198.605 543.535 198.61 543.534 198.617 543.533 cv
198.987 543.457 199.357 543.375 199.725 543.29 cv
199.731 543.29 199.738 543.287 199.743 543.286 cv
206.386 541.751 212.712 538.889 218.293 534.813 cv
221.527 532.451 224.508 529.679 227.158 526.523 cv
224.278 527.031 221.317 527.296 218.292 527.296 cv
215.268 527.296 212.308 527.031 209.429 526.523 cv
205.369 525.808 201.478 524.609 197.813 522.99 cv
191.491 520.195 185.85 516.149 181.199 511.164 cv
173.917 503.356 169.07 493.25 167.869 482.048 cv
167.718 480.651 167.642 479.233 167.607 477.804 cv
161.294 487.376 157.61 498.835 157.61 511.159 cv
157.61 520.958 159.948 530.207 164.074 538.401 cv
164.083 538.406 164.092 538.412 164.103 538.417 cv
164.226 538.485 164.35 538.55 164.474 538.615 cv
cp
0 0 0 rgb
f
164.474 538.615 mo
164.726 538.75 164.977 538.883 165.23 539.013 cv
165.38 539.091 165.531 539.165 165.682 539.239 cv
165.908 539.353 166.132 539.466 166.36 539.576 cv
166.526 539.656 166.694 539.732 166.861 539.811 cv
167.074 539.912 167.286 540.011 167.502 540.109 cv
167.623 540.164 167.747 540.216 167.869 540.27 cv
167.923 540.293 167.977 540.316 168.029 540.341 cv
168.235 540.43 168.44 540.522 168.648 540.609 cv
168.832 540.688 169.017 540.762 169.202 540.838 cv
169.4 540.919 169.6 541 169.798 541.08 cv
169.99 541.156 170.182 541.227 170.375 541.3 cv
170.569 541.375 170.761 541.448 170.955 541.519 cv
171.155 541.591 171.353 541.662 171.553 541.732 cv
171.741 541.798 171.928 541.865 172.117 541.928 cv
172.322 541.998 172.529 542.064 172.735 542.132 cv
172.916 542.191 173.098 542.25 173.28 542.305 cv
173.494 542.374 173.708 542.437 173.922 542.501 cv
174.096 542.553 174.272 542.605 174.446 542.654 cv
174.668 542.717 174.89 542.78 175.112 542.839 cv
175.278 542.884 175.446 542.929 175.614 542.972 cv
175.844 543.033 176.074 543.091 176.304 543.148 cv
176.463 543.186 176.621 543.224 176.78 543.261 cv
177.021 543.317 177.261 543.373 177.502 543.425 cv
177.648 543.458 177.796 543.488 177.944 543.519 cv
178.195 543.572 178.448 543.625 178.7 543.672 cv
178.835 543.698 178.97 543.722 179.105 543.748 cv
179.37 543.796 179.635 543.845 179.899 543.89 cv
180.02 543.91 180.139 543.929 180.258 543.948 cv
180.539 543.993 180.82 544.039 181.103 544.078 cv
181.199 544.091 181.297 544.104 181.395 544.119 cv
181.698 544.159 182.002 544.201 182.305 544.237 cv
182.371 544.246 182.438 544.251 182.503 544.259 cv
182.838 544.296 183.173 544.333 183.508 544.367 cv
183.529 544.369 183.551 544.369 183.57 544.372 cv
188.624 544.845 193.689 544.552 198.598 543.537 cv
198.605 543.535 198.61 543.534 198.617 543.533 cv
198.987 543.457 199.357 543.375 199.725 543.29 cv
199.731 543.29 199.738 543.287 199.743 543.286 cv
206.386 541.751 212.712 538.889 218.293 534.813 cv
221.527 532.451 224.508 529.679 227.158 526.523 cv
224.278 527.031 221.317 527.296 218.292 527.296 cv
215.268 527.296 212.308 527.031 209.429 526.523 cv
205.369 525.808 201.478 524.609 197.813 522.99 cv
191.491 520.195 185.85 516.149 181.199 511.164 cv
173.917 503.356 169.07 493.25 167.869 482.048 cv
167.718 480.651 167.642 479.233 167.607 477.804 cv
161.294 487.376 157.61 498.835 157.61 511.159 cv
157.61 520.958 159.948 530.207 164.074 538.401 cv
164.083 538.406 164.092 538.412 164.103 538.417 cv
164.226 538.485 164.35 538.55 164.474 538.615 cv
cp
1 1 1 rgb
@
215.021 571.582 mo
215.364 571.371 215.704 571.156 216.04 570.938 cv
216.063 570.923 216.083 570.908 216.106 570.894 cv
216.534 570.615 217.148 570.185 217.598 569.87 cv
217.781 569.745 218.007 569.585 218.252 569.407 cv
218.267 569.396 218.281 569.384 218.297 569.373 cv
218.297 569.376 218.297 569.376 218.298 569.378 cv
218.407 569.298 218.51 569.214 218.617 569.134 cv
218.692 569.08 218.764 569.025 218.828 568.974 cv
227.637 562.367 233.785 553.287 236.843 543.281 cv
238.834 536.762 239.514 529.855 238.775 522.988 cv
238.345 519.001 237.442 515.029 236.031 511.154 cv
235.03 513.904 233.781 516.606 232.268 519.228 cv
230.754 521.85 229.04 524.283 227.158 526.523 cv
224.508 529.679 221.527 532.451 218.293 534.813 cv
212.712 538.889 206.386 541.751 199.743 543.286 cv
189.342 545.687 178.167 544.828 167.869 540.27 cv
166.582 539.701 165.314 539.057 164.059 538.374 cv
173.54 557.229 192.552 570.462 214.778 571.731 cv
214.811 571.712 214.844 571.693 214.876 571.674 cv
214.924 571.644 214.973 571.613 215.021 571.582 cv
cp
0 0 0 rgb
f
215.021 571.582 mo
215.364 571.371 215.704 571.156 216.04 570.938 cv
216.063 570.923 216.083 570.908 216.106 570.894 cv
216.534 570.615 217.148 570.185 217.598 569.87 cv
217.781 569.745 218.007 569.585 218.252 569.407 cv
218.267 569.396 218.281 569.384 218.297 569.373 cv
218.297 569.376 218.297 569.376 218.298 569.378 cv
218.407 569.298 218.51 569.214 218.617 569.134 cv
218.692 569.08 218.764 569.025 218.828 568.974 cv
227.637 562.367 233.785 553.287 236.843 543.281 cv
238.834 536.762 239.514 529.855 238.775 522.988 cv
238.345 519.001 237.442 515.029 236.031 511.154 cv
235.03 513.904 233.781 516.606 232.268 519.228 cv
230.754 521.85 229.04 524.283 227.158 526.523 cv
224.508 529.679 221.527 532.451 218.293 534.813 cv
212.712 538.889 206.386 541.751 199.743 543.286 cv
189.342 545.687 178.167 544.828 167.869 540.27 cv
166.582 539.701 165.314 539.057 164.059 538.374 cv
173.54 557.229 192.552 570.462 214.778 571.731 cv
214.811 571.712 214.844 571.693 214.876 571.674 cv
214.924 571.644 214.973 571.613 215.021 571.582 cv
cp
1 1 1 rgb
@
10 lw
431.585 511.16 mo
431.585 547.146 402.412 576.318 366.426 576.318 cv
330.439 576.318 301.266 547.146 301.266 511.16 cv
301.266 475.173 330.439 446 366.426 446 cv
402.412 446 431.585 475.173 431.585 511.16 cv
cp
0 0 0 rgb
@
366.427 451.494 mo
361.492 451.494 356.701 452.103 352.116 453.233 cv
348.234 458.742 345.286 464.806 343.342 471.172 cv
340.859 479.287 340.014 487.886 340.933 496.437 cv
341.466 501.398 342.591 506.342 344.347 511.166 cv
345.593 507.742 347.147 504.38 349.031 501.117 cv
350.915 497.853 353.05 494.826 355.392 492.037 cv
358.689 488.109 362.399 484.658 366.427 481.717 cv
373.37 476.644 381.244 473.082 389.511 471.172 cv
395.989 469.677 402.707 469.197 409.409 469.802 cv
398.556 458.523 383.315 451.494 366.427 451.494 cv
cp
f
4 lw
366.427 451.494 mo
361.492 451.494 356.701 452.103 352.116 453.233 cv
348.234 458.742 345.286 464.806 343.342 471.172 cv
340.859 479.287 340.014 487.886 340.933 496.437 cv
341.466 501.398 342.591 506.342 344.347 511.166 cv
345.593 507.742 347.147 504.38 349.031 501.117 cv
350.915 497.853 353.05 494.826 355.392 492.037 cv
358.689 488.109 362.399 484.658 366.427 481.717 cv
373.37 476.644 381.244 473.082 389.511 471.172 cv
395.989 469.677 402.707 469.197 409.409 469.802 cv
398.556 458.523 383.315 451.494 366.427 451.494 cv
cp
1 1 1 rgb
@
340.935 525.883 mo
345.497 527.898 350.34 529.393 355.394 530.283 cv
353.053 527.494 350.915 524.466 349.031 521.202 cv
347.15 517.943 345.593 514.583 344.347 511.166 cv
342.591 506.342 341.466 501.398 340.933 496.437 cv
340.014 487.886 340.859 479.287 343.342 471.172 cv
345.286 464.806 348.234 458.742 352.116 453.233 cv
331.42 458.33 314.985 474.218 309.106 494.593 cv
311.937 500.71 315.717 506.296 320.259 511.166 cv
326.045 517.371 333.067 522.407 340.935 525.883 cv
cp
0 0 0 rgb
f
340.935 525.883 mo
345.497 527.898 350.34 529.393 355.394 530.283 cv
353.053 527.494 350.915 524.466 349.031 521.202 cv
347.15 517.943 345.593 514.583 344.347 511.166 cv
342.591 506.342 341.466 501.398 340.933 496.437 cv
340.014 487.886 340.859 479.287 343.342 471.172 cv
345.286 464.806 348.234 458.742 352.116 453.233 cv
331.42 458.33 314.985 474.218 309.106 494.593 cv
311.937 500.71 315.717 506.296 320.259 511.166 cv
326.045 517.371 333.067 522.407 340.935 525.883 cv
cp
1 1 1 rgb
@
423.742 527.728 mo
420.912 521.615 417.132 516.032 412.594 511.166 cv
406.806 504.958 399.786 499.914 391.915 496.436 cv
387.355 494.42 382.511 492.927 377.458 492.037 cv
379.802 494.826 381.936 497.853 383.819 501.117 cv
385.703 504.375 387.26 507.734 388.503 511.153 cv
390.258 515.977 391.384 520.92 391.917 525.881 cv
392.839 534.429 391.994 543.026 389.515 551.139 cv
387.569 557.507 384.62 563.576 380.734 569.085 cv
401.429 563.99 417.862 548.101 423.742 527.728 cv
cp
0 0 0 rgb
f
423.742 527.728 mo
420.912 521.615 417.132 516.032 412.594 511.166 cv
406.806 504.958 399.786 499.914 391.915 496.436 cv
387.355 494.42 382.511 492.927 377.458 492.037 cv
379.802 494.826 381.936 497.853 383.819 501.117 cv
385.703 504.375 387.26 507.734 388.503 511.153 cv
390.258 515.977 391.384 520.92 391.917 525.881 cv
392.839 534.429 391.994 543.026 389.515 551.139 cv
387.569 557.507 384.62 563.576 380.734 569.085 cv
401.429 563.99 417.862 548.101 423.742 527.728 cv
cp
1 1 1 rgb
@
409.409 469.802 mo
402.707 469.197 395.989 469.677 389.511 471.172 cv
381.244 473.082 373.37 476.644 366.427 481.717 cv
362.399 484.658 358.689 488.109 355.392 492.037 cv
358.976 491.405 362.661 491.074 366.427 491.074 cv
370.188 491.074 373.878 491.405 377.458 492.037 cv
382.511 492.927 387.355 494.42 391.915 496.436 cv
399.786 499.914 406.806 504.958 412.594 511.166 cv
417.132 516.032 420.912 521.615 423.742 527.728 cv
425.262 522.466 426.092 516.911 426.092 511.16 cv
426.092 495.096 419.732 480.528 409.409 469.802 cv
cp
0 0 0 rgb
f
409.409 469.802 mo
402.707 469.197 395.989 469.677 389.511 471.172 cv
381.244 473.082 373.37 476.644 366.427 481.717 cv
362.399 484.658 358.689 488.109 355.392 492.037 cv
358.976 491.405 362.661 491.074 366.427 491.074 cv
370.188 491.074 373.878 491.405 377.458 492.037 cv
382.511 492.927 387.355 494.42 391.915 496.436 cv
399.786 499.914 406.806 504.958 412.594 511.166 cv
417.132 516.032 420.912 521.615 423.742 527.728 cv
425.262 522.466 426.092 516.911 426.092 511.16 cv
426.092 495.096 419.732 480.528 409.409 469.802 cv
cp
1 1 1 rgb
@
341.912 551.458 mo
341.921 551.456 341.93 551.455 341.936 551.454 cv
342.397 551.359 342.857 551.255 343.315 551.152 cv
343.324 551.15 343.332 551.146 343.338 551.146 cv
351.605 549.237 359.48 545.673 366.427 540.601 cv
370.452 537.66 374.164 534.21 377.458 530.283 cv
373.878 530.915 370.188 531.244 366.427 531.244 cv
362.661 531.244 358.976 530.915 355.394 530.283 cv
350.34 529.393 345.497 527.898 340.935 525.883 cv
333.067 522.407 326.045 517.371 320.259 511.166 cv
315.717 506.296 311.937 500.71 309.106 494.593 cv
307.589 499.855 306.76 505.409 306.76 511.16 cv
306.76 527.22 313.117 541.788 323.44 552.515 cv
329.65 553.074 335.877 552.707 341.912 551.458 cv
cp
0 0 0 rgb
f
341.912 551.458 mo
341.921 551.456 341.93 551.455 341.936 551.454 cv
342.397 551.359 342.857 551.255 343.315 551.152 cv
343.324 551.15 343.332 551.146 343.338 551.146 cv
351.605 549.237 359.48 545.673 366.427 540.601 cv
370.452 537.66 374.164 534.21 377.458 530.283 cv
373.878 530.915 370.188 531.244 366.427 531.244 cv
362.661 531.244 358.976 530.915 355.394 530.283 cv
350.34 529.393 345.497 527.898 340.935 525.883 cv
333.067 522.407 326.045 517.371 320.259 511.166 cv
315.717 506.296 311.937 500.71 309.106 494.593 cv
307.589 499.855 306.76 505.409 306.76 511.16 cv
306.76 527.22 313.117 541.788 323.44 552.515 cv
329.65 553.074 335.877 552.707 341.912 551.458 cv
cp
1 1 1 rgb
@
391.917 525.881 mo
391.384 520.92 390.258 515.977 388.503 511.153 cv
387.258 514.576 385.706 517.939 383.819 521.202 cv
381.936 524.466 379.802 527.494 377.458 530.283 cv
374.164 534.21 370.452 537.66 366.427 540.601 cv
359.48 545.673 351.605 549.237 343.338 551.146 cv
336.861 552.642 330.144 553.121 323.441 552.516 cv
334.296 563.795 349.535 570.824 366.427 570.824 cv
371.353 570.824 376.138 570.215 380.716 569.089 cv
384.607 563.579 387.567 557.511 389.515 551.139 cv
391.994 543.026 392.839 534.429 391.917 525.881 cv
cp
0 0 0 rgb
f
391.917 525.881 mo
391.384 520.92 390.258 515.977 388.503 511.153 cv
387.258 514.576 385.706 517.939 383.819 521.202 cv
381.936 524.466 379.802 527.494 377.458 530.283 cv
374.164 534.21 370.452 537.66 366.427 540.601 cv
359.48 545.673 351.605 549.237 343.338 551.146 cv
336.861 552.642 330.144 553.121 323.441 552.516 cv
334.296 563.795 349.535 570.824 366.427 570.824 cv
371.353 570.824 376.138 570.215 380.716 569.089 cv
384.607 563.579 387.567 557.511 389.515 551.139 cv
391.994 543.026 392.839 534.429 391.917 525.881 cv
cp
1 1 1 rgb
@
10 lw
579.718 511.16 mo
579.718 547.146 550.545 576.318 514.559 576.318 cv
478.572 576.318 449.399 547.146 449.399 511.16 cv
449.399 475.173 478.572 446 514.559 446 cv
550.545 446 579.718 475.173 579.718 511.16 cv
cp
0 0 0 rgb
@
483.234 458.747 mo
480.191 469.269 479.164 480.365 480.35 491.404 cv
481.066 498.06 482.577 504.695 484.932 511.166 cv
486.604 506.574 488.689 502.061 491.218 497.683 cv
493.746 493.304 496.609 489.242 499.753 485.498 cv
504.178 480.229 509.155 475.597 514.561 471.651 cv
523.523 465.103 533.648 460.453 544.28 457.824 cv
535.482 452.912 525.353 450.1 514.561 450.1 cv
503.106 450.1 492.394 453.26 483.234 458.747 cv
cp
f
4 lw
483.234 458.747 mo
480.191 469.269 479.164 480.365 480.35 491.404 cv
481.066 498.06 482.577 504.695 484.932 511.166 cv
486.604 506.574 488.689 502.061 491.218 497.683 cv
493.746 493.304 496.609 489.242 499.753 485.498 cv
504.178 480.229 509.155 475.597 514.561 471.651 cv
523.523 465.103 533.648 460.453 544.28 457.824 cv
535.482 452.912 525.353 450.1 514.561 450.1 cv
503.106 450.1 492.394 453.26 483.234 458.747 cv
cp
1 1 1 rgb
@
480.354 530.916 mo
486.474 533.621 492.975 535.626 499.757 536.82 cv
496.613 533.077 493.746 529.014 491.218 524.635 cv
488.693 520.26 486.604 515.754 484.932 511.166 cv
482.577 504.695 481.066 498.06 480.35 491.404 cv
479.164 480.365 480.191 469.269 483.234 458.747 cv
465.425 469.414 453.5 488.891 453.5 511.16 cv
453.5 511.475 453.519 511.787 453.522 512.1 cv
461.111 519.992 470.201 526.431 480.354 530.916 cv
cp
0 0 0 rgb
f
480.354 530.916 mo
486.474 533.621 492.975 535.626 499.757 536.82 cv
496.613 533.077 493.746 529.014 491.218 524.635 cv
488.693 520.26 486.604 515.754 484.932 511.166 cv
482.577 504.695 481.066 498.06 480.35 491.404 cv
479.164 480.365 480.191 469.269 483.234 458.747 cv
465.425 469.414 453.5 488.891 453.5 511.16 cv
453.5 511.475 453.519 511.787 453.522 512.1 cv
461.111 519.992 470.201 526.431 480.354 530.916 cv
cp
1 1 1 rgb
@
575.615 511.16 mo
575.615 510.847 575.597 510.541 575.593 510.228 cv
568.002 502.336 558.918 495.888 548.764 491.402 cv
542.642 488.698 536.143 486.694 529.364 485.498 cv
532.508 489.242 535.371 493.304 537.899 497.683 cv
540.428 502.056 542.517 506.564 544.184 511.15 cv
546.54 517.623 548.051 524.257 548.768 530.915 cv
549.957 541.954 548.93 553.048 545.887 563.57 cv
563.692 552.904 575.615 533.427 575.615 511.16 cv
cp
0 0 0 rgb
f
575.615 511.16 mo
575.615 510.847 575.597 510.541 575.593 510.228 cv
568.002 502.336 558.918 495.888 548.764 491.402 cv
542.642 488.698 536.143 486.694 529.364 485.498 cv
532.508 489.242 535.371 493.304 537.899 497.683 cv
540.428 502.056 542.517 506.564 544.184 511.15 cv
546.54 517.623 548.051 524.257 548.768 530.915 cv
549.957 541.954 548.93 553.048 545.887 563.57 cv
563.692 552.904 575.615 533.427 575.615 511.16 cv
cp
1 1 1 rgb
@
544.28 457.824 mo
533.648 460.453 523.523 465.103 514.561 471.651 cv
509.155 475.597 504.178 480.229 499.753 485.498 cv
504.563 484.651 509.508 484.207 514.561 484.207 cv
519.607 484.207 524.559 484.651 529.364 485.498 cv
536.143 486.694 542.642 488.698 548.764 491.402 cv
558.918 495.888 568.002 502.336 575.593 510.228 cv
575.253 487.691 562.716 468.121 544.28 457.824 cv
cp
0 0 0 rgb
f
544.28 457.824 mo
533.648 460.453 523.523 465.103 514.561 471.651 cv
509.155 475.597 504.178 480.229 499.753 485.498 cv
504.563 484.651 509.508 484.207 514.561 484.207 cv
519.607 484.207 524.559 484.651 529.364 485.498 cv
536.143 486.694 542.642 488.698 548.764 491.402 cv
558.918 495.888 568.002 502.336 575.593 510.228 cv
575.253 487.691 562.716 468.121 544.28 457.824 cv
cp
1 1 1 rgb
@
529.364 536.82 mo
524.559 537.667 519.607 538.111 514.561 538.111 cv
509.508 538.111 504.563 537.667 499.757 536.82 cv
492.975 535.626 486.474 533.621 480.354 530.916 cv
470.201 526.431 461.111 519.992 453.522 512.1 cv
453.866 534.63 466.402 554.197 484.835 564.492 cv
495.469 561.866 505.592 557.212 514.561 550.665 cv
519.96 546.72 524.941 542.089 529.364 536.82 cv
cp
0 0 0 rgb
f
529.364 536.82 mo
524.559 537.667 519.607 538.111 514.561 538.111 cv
509.508 538.111 504.563 537.667 499.757 536.82 cv
492.975 535.626 486.474 533.621 480.354 530.916 cv
470.201 526.431 461.111 519.992 453.522 512.1 cv
453.866 534.63 466.402 554.197 484.835 564.492 cv
495.469 561.866 505.592 557.212 514.561 550.665 cv
519.96 546.72 524.941 542.089 529.364 536.82 cv
cp
1 1 1 rgb
@
548.768 530.915 mo
548.051 524.257 546.54 517.623 544.184 511.15 cv
542.514 515.745 540.432 520.256 537.899 524.635 cv
535.371 529.014 532.508 533.077 529.364 536.82 cv
524.941 542.089 519.96 546.72 514.561 550.665 cv
505.592 557.212 495.469 561.866 484.835 564.492 cv
493.633 569.406 503.767 572.218 514.561 572.218 cv
526.015 572.218 536.728 569.056 545.887 563.57 cv
548.93 553.048 549.957 541.954 548.768 530.915 cv
cp
0 0 0 rgb
f
548.768 530.915 mo
548.051 524.257 546.54 517.623 544.184 511.15 cv
542.514 515.745 540.432 520.256 537.899 524.635 cv
535.371 529.014 532.508 533.077 529.364 536.82 cv
524.941 542.089 519.96 546.72 514.561 550.665 cv
505.592 557.212 495.469 561.866 484.835 564.492 cv
493.633 569.406 503.767 572.218 514.561 572.218 cv
526.015 572.218 536.728 569.056 545.887 563.57 cv
548.93 553.048 549.957 541.954 548.768 530.915 cv
cp
1 1 1 rgb
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Adam Richards) ()
%%Title: (camera_shutter_1.1.eps)
%%CreationDate: 5/4/2018 9:16 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-693W@WZ7(%=rI+YUnf&!nH=^\'?lM7GCbQ^1nJ_j-J;fS#4l"4rE6%]km+Iusq)O(U-iMm$FWr"cZEj*&H$/R^^"50mNDV)S
%1,Ic!R9=\,DQu:g1g6HV@eXeV\N#r:6k[?9_2VgihL4,3D[s&^nrZgI_ETfBjCPCqg^rWH6j0da,;0?<!;sLmM%BZD$q-'<b2)pX
%ZIp,`ot0nZ?r6-s]D]QLY4TEYamIU'i1!p<D6r'drgG@GC\8(FVm%J-X0$QOg?i7uL,hKBHNa"oj5R#fDS-flSi$=[\^1im*Zc!G
%<s(\mR.5*HX5g<T!$*nO6^S4&MJ2FDG2>E,#IB`fc*d%i^NnBK%/[Hirk7pXIsbL3m/:hjZIZcU$uee!r\n1*2D9FEg9=/5$9^$q
%E^>l(Ds)%V$?OY?nt@0u$7V5I6uF<:Go7rc#c/UIYoa#r!>9[L+3>pk_DioQ%Ih"a$H!uC3)fB+^U9NFY2u65CQ2r`:pJ@h*jknV
%7.DM3<W=sam>ouGri8e0#d_ri9JdW2\rC;@mRU2SgU/gnGJIYdol?#UYgu$S%RFd>mEr/gm=<")?@Z&1[I6iN\45\_j!#&F"+><H
%0^duPl1$_-*pu*R)m9"ZZqHF'Hd0iEpGGZ[-1DS@H(=Kt!]VJ?aIjX:!ZFQSF+3'%iVD_Vm]k+[2Z"M&')27CG>[T]NaM*t1`Mj#
%"Ef?f0I;g)GP=?XGP`s7`>Xq<*C&et)QC6H!-FER;:kWrUEAAh!\XkCGp-@,Q1RN38&7;!6QY1_&>il=(EAcb*+e^33sR_YR!P`Y
%M*a2;O2P@$Y]fcbI%,SXmf:>*B1Se/iC+Q#BQXmVNF-#Un)EB@p'AB[ddN3B>Fj72NF*G.NUB@o\)$=+F8F'"ICkkN+BYa1r3b:o
%J<*ooAhCD5q-'i.GR`)RMrq6m5*"2ZIh1Pjc2+[!#:43IG#,if#K24+.<jFJeR?Jefs[:R+`O:(o7q\W,QBjOrT3/j$pI+QTp<p4
%B"Qf=&F4N2@,,PL3jl[J)KY-^HrC-MVC8]XF80?"S=h;o+:DW"1?I3oc<#(0<?%N^mqHq`",gH79Lk,LdBImMQ>5f1l`=IZS[[mp
%@Xg3ocQ.2@D2WhbpU2ID48K<QS4eIK?_2AoXhgk$`eEc1%(GNhk/$f.YW3e,;>L*[h2\AYj=EuWnHj``d.dIbkl9Gpls8(dJhR-c
%ol<kVb"V+Gqj$QhJH(570U"#H()Xt-MLT3,K3rD%Z+!pbf-i,3q6\\':apTBC(6Z3DK[[[)#WM+c>1*?Bb%U785T_7pl=68=h37]
%7CcmJD=OE/CUClgY2pFjpIFE&Dnl6`Y4p]NDV!.GNLUNM9Edd+&EJ_.)o'&#n]Sq3?TdB8]tb#ha:iMa:O043^fBl]?HK6m<?Iq9
%LgEEX,%(2hO8T3aJm\.CE0^B:i!%I-A',o$6m)RH5jT$rJmqOd.R>ra+Q*YOmY(?l<+-an@50<ejff@u,;8V_0T%%TOXalJ;'@DY
%V5PA6U8iaR7KanLOh`%b@ZcJ@.#G7.8l,:=OJ.UYrkpRS"^-MZ/1\"UX3+AT$<3rJ"gOFm.TVBUW8`eD<(W?T79*ibB^Eb?>[\Vk
%,)2lrXuK296<oIBELHg0`7;AT"G',L8XR:)'8WgM;@1<*2h"=*E#"QL>\1DpE)i*:_(,MJ$3=EU>S189!!=f$\tC:\[=CJ1\BM]H
%I\BO`H^2iUTrX&PdA+m_$OD1@QU`Z(OfOqSaOuA/bIfDDhNi`)R_R)*a;;d'c"#c&NF.L^(!G\]#_C1?j-Y'r#YLQ/`+ORYe')Ue
%2Xq];_'lPcNXa#<^P-V%/W&ARj-o-GbB;mX+MKAer/G'>pEd=Smeafu/H8QKOSdZ#s2H]m"tF*qONN)EA\^i%<X($C#)Ggc;jIGm
%A3a<98>SSpJ`6PlaA^Ylbu*UPF&_aq3U0b-U>EmjDbF,PZQ.NL>8YgrR%:"iR\qIik]ECC5QKlDb>Wh'I29n.i2JJ8XnCE0D5u>>
%GF?4bPf(FLT6Ui-74ogW-1RB\?1U)"l'0dP[uoRhEPlkGI$a/bmmd>b"^i97<a^NWJ'cN6MU?XN^g<]ZR9DLG3Z\#!N(-,SY;.`&
%WNFQGWU1*dAElan/:qHDnI*EH`V:!1[17%JW[)^!Lf+Z0<['Qqa_E53,C51rf`qP`K/TD)OqN:].$0Sp,bgH0qATIE'B!dHL*(s.
%9$l&hf\n<Y;$^c*!V;5g1@qkVX]DI`C8kA>".arj.1fQXNN+-=8&+=hWg-2Q>U`[1@)`ik2cYtT!GV[n<!b%'`@G$5Q#aE?.MoqV
%K3\Sa<+T2Jjes/bK<ekX9%?h9<%aG.75,9E.5!&'H_M4*M%.6@Hc9a);CiVW0WkJ9/qu)Q(hj-5%>nP?M]R,($HrN&%!nEHk+lBs
%!p1<9/H(/*dTZ`T0#>a>0`Mug+@5uOd"MJl_?2BhOEW7=V+a.<'^1b]r<e+5IdDXR<Bpd^TT'+OR2DkRJ^snp2$D1sPm<a_!A9Ue
%(Br_f%"+2QSOe?eJ0"-U-`Xti1@VFP*)(mD$FhO8V]g$1(LC&EqbdV[;Zr[>^j-+](LVq`n1T7OKiKBK==LIu@'9n[0/6"W"R1b0
%/:mVj#@=G4QECA]<<+J+6/!U*>SMj@!)KM3ZlB0Ds%n^k5u0(&rr@Kl2h@munT,1XC0j4HpIB09GfcHYT$GSRn8Nj7q:5LR4O%g[
%GWN$ocH0)5dm$;l/Q[M$5G4^=X2NI8GPAW"VmJqF<b5$6W>2(.@Q_p9MZ`H9.DY]+G%4orM:S422GUjG:;hbKM--uQ]f:jN_)(UD
%3Qg]RN*Xn?qMP(MN3Pt7>e&77/nH[PMKc#h<e)oA/KO#WAmh&*9m2K[33R!Wqm%\WUo]B;):]T>RT8(6Wn+FTD0Edpi2#5&da6LB
%3%6l-PX`db68eL/eLO,>9;LiVfhpQMU[ItFf39Q/8&[-EihPe6o#DU)@[7*#+MqZLOua9]SabSL3'AfhWfUWR!(K;C6pdf;Tt*/<
%o_Ho9WOXM3M^[e)1%aYAVFQ4Of:3]XR$dLfr:shVZ5?UdH\mSP::\m(/*73n`m-He42)%XYN#<\(t29W3Nhpq(LYHRrdg]Ap!#B2
%jnci=/im<1.\u_@c:6cufdJh8[*$1L--f.D1ZdCkB;[dTeMRTS:i24bPm?f*&SJ*$&MZqt4Oq\U0ioq?K@>4uVjoUu2$oha$HcZu
%f;0HfR64M_Z9"K*=4(>#k:4*16c&:7s-h-Cq>uTs7Se)3Q0U*-2sI72n%MDk9(b8!6U?_Y2QVNLGC96?r[aQib']Y.!li;f_YHil
%:VupSes6%P0f%W8*n8R[`e%=##Ug2$(_G_RN;b"Aq8&kKjB"$4+3&[l9rU_s?\,4l.+pZ@$V:7['CB5@LXD\Md@QBm4;70`.,HK6
%!(bH_`I&6i!HB@9h>G)Rs"tXqBfD?8YGu6=<;H^[$LJQgQf&6\(?o'RF2cFiESf6_`)Yk+',r!p/TLWTntoXHY#))J/SV*D9O5ln
%jXa?I[,jqHAP6=7/=8aM(8e.0*0&?=#i%oX.`l;A']i^&K0PG062XY6<nu)c!h*;9)RRj+S'+o1Xq^`L>`lQ`F-/lnN.K;>Bq3!J
%X4XIhYEErAS]aF[G-nDtLn"V^N8SjKQ-3?9e1,&;kZg4lGAZ9h+T4UXp*33Um)VLl@!.f,^ia)>m4=J-=t&@+&lVWOPZ*9U7'TZ?
%cP4Qn+t@jfk+G<1!lGM/"<Ra2W\),Q.FBZ6A5AP%@S6DLjhmliOCQ>g?m[9*e4H<."#1Ch:bnuu_'0&nM><]=EertR:(W+N&jpho
%i5U_VdtM`#Wf.%",VQFnQ:dSuUPk)4\Pbof`MUmQ1Qjtq\A25PA0aBC?FZ`FJ7V!ml,aRUA<C<5bhs6Tdde!8)F-?@[%;gp_)U!6
%M("Ulndf%QI0%@9SCa8qJ2.!Oqu^"UIK;q$;b@EFZS.>EV6R'`EE1"2Y\&Ejl<Y/"e`>%e$lHPl#]XODNj>"=Elj/29jW?I=\Bf3
%>#K31in,g),ikfodL>t%]f\*b'^'*EBCN3b1Cssh0$+u\2R+s"0$Cd5ZUnb;(7/Rfjk,GnN1F(*"oSeMs$ap4$Hhb4NSsK*=?]i5
%pkQO-Gt>NHoY7qq@&,Mmi*J?k.>=0?](-K%9A7R?!ljT9l$%ZoHLIqZc,a9n2SI8c2i\lUT0]3L5VoXF+Q]ls6#V^B<5r*Q+F6`G
%Lbft0NGB!Vr\WcaEQ>T'N,(nQ\I.#*,)($S8mZg>Ij/rJ:FF9Q.8$%=0)pIB,EX74=f+`b@\O=AS7;78qXXr#`:?#+k``#%O`H-S
%P@AJ&SdG3e$%C?&m)WsWT8>j,l79,sJY"VO<B8D7OR%G0AD-au">j%RmELEJ)LWh/TLT^M(P:JYj=2n`0-\/4U#J+ue\QuK;4SB$
%,+(/[WWJA\'d;^;&:[R9*.n2'R>(k(2,'Wi8t/F\KWm]_6%DfAbI"WZ";@[]'#FpQ%(qNJ]$\]"SngG;ZD5bT/,YNiX_?g#bF;#p
%r[JYMb*;dga<D@tp7Dm/r6a%#]iGqH[3D9o!50FMV5d"QE^[Sn:nZN49U-/\fqMdr#cV"e@u<s\5C00!Co1MmlNMUR5goY'Lr.ep
%r/+"t;MAkf3h%[f'a.]-!:QW5&^mnI6dDu?:XJDqM%).m>udP?"hV'JJk8e)JdEVUJCJ?C]ZT.oiM$et$RRl2-:EfO+Wt9g%1D['
%Cm'X,.D76107^mmctFVB0J6hgV5@SI]`=h7jlGq^R^g4k.i?#$UH`aX74o6Vl$+AWlsAUDbDnY9RC28F2?&eMXuLc*.GVUIjq;0*
%Pe"ZT("iIG@mtLN9]Tek?Yjo'-1l?-mYNHXZrESZ2?>*KO^kP>[uF,c.2;t7jF(!Rh[S0u3@WJN:/26G/"Yu8*0V_$VNdY-<UO05
%G;kPo_^_-09"PU(Vi8DSP;Z2(_&;!W1St"'[/^6d=u`scMG"NF*\+YoOP&OpQQCNYG/-p)2SiCU_PmkG:)GO9'_]W<nC*+ZB[da9
%S$\90@Tb8P%qK5/8AHV+BO$lGd=d1[,_Y<>9I$YE.u7:^k!Xd@GckR0r8CP!'ebS3kgDXU1r&FC=]rO>1&[Y0bQ8R'-:e_@%i,k$
%3Pk.!F8!b@82>RU$,,5VG0>CE"LPKj-GIrH)=S#[^J+"\QpH?UJZAqs>(sI(;'90F!`kgs1WZU(n0oUm`P@rUQ@OK=a;(Ls6F95I
%#"2+[?NK?o<!'XacM@NV'E7=NqR+Y!UX&+EMlB3JmD#TbW1CmajTceYOS5Ci/,NP;!+JQ5V#AOaJC+;Xd*GMfZ=O%W1ueP,q342S
%oUiE.Cu//UGE3Q+21fh8q1%D0Zc_\?;g,FT@+*m%`#dEMc_A#bea-NtHVqsb/8JcsNMHl3a6]f8Hd`]TZE'WEks!YIZBfXlb%M1:
%ehFDocA]&b]Q-fm'ml`AYGU^%Qtp'Ro_fR;Dp>rtK4ecE42#I4(TpV04:7=R[Tlb"=M3c57$n$SkX5k")s@QXrB0uKf_T@Vb+\L=
%*mn-ZE^<;"SL?TM(lEA`8s8(fW#208;F(3N>p3Mq=Qr9<b+_/@M9'u<,_e!(n[o_"/Fr!e?62m4!c%k!dE%L`*Gp^^?\)/K6lZF;
%nUWbG8j#<=OcD:Eo90PqHUeq8l'&HejI\I?g@pb#'o5+p+SPl:&+I47%h.kIr4R]<<gaPEJ/m&GHo<h!EK4K%nnI9;;Ba!QOr,MZ
%p];]u:hBi-O9a9a/c`7&8R-$.e&Pp2i_/NeTb1[J'Tt3O*=EKUKKd0q@EqXq)EX-'+=\"A2`THs9??G/=-Z:ijWYNi9[KWOTA6cE
%YCP\(aoEX%&>Ca=^^2/k%)%70%RHGWkuIp)Z,:HbR1"j5A!3hg'f$:@1WkP6Nub#0rmSL11Brh;#o^`!9W(\?!hFoLJQO^odO4^M
%$I#dW#6](EBG@%j5:"W$l<;=\*1,+U#0iq4o>!nZMa;R'\Mt;uV[l3p"Pf-X4kkDsH:adN`d#948<)"@H($U1!7VLO,7jc">uVF2
%&)\V(&mA]!+2eh',SNZt1;dSS*8c,;f,<!Imeao>_nZ.S^[p30N#fa'rWTOtk96q!LTl4K_YSN`lfTFmT80ZM@>mD]@Jr<Ap%&aG
%^X@\(T80ZMom$<tndsCMa/e>aY4Xl?Z!^Tf(18o[*lRoc'(g5kkiYRbc]t/q.ma2u.mZD/Rf;)WqK&_%c`O(tT:]=^Ir7.B\^g?8
%<n![F9n.%<rNG'mqX_qpcSM=\c]%ic1]$^ekjLYjqX`Yc59J2@oALZR+3lV,i>b'(WV?"HH9WLN2kLud@t/qk;X`cnomT)&n)kqg
%-6B/\ro_+MlOP'7"\smOjUS?hcTAB'5OD"q5Q<.i?gq1WcQfJln,<."GA,A3:\F$"ofKt?EXT)NhX*6TEkUmKe/8^Fqp5+am^IZf
%IV\ZC^\o8020e6WoK#bknh;#Trf&Wta*isOrQgs?c,V114455G4eQ`-ld*o8mk4\>'jO"A-hmV8QYYBL]D$U"jJDjnFHP=tO(8-#
%JY)l)nK/eMBihW?-KrX'=UGO*,iIn/_B`0U!+mHkA/IrMN#EOY?]d7I0Sr,a";1&4'[ulGW]S9^!O=WQ9asT(j`YP>5nc>&$2e1A
%6rnsJ_SQG""o:Dc+s3OH0CU4UeR6D<3l@1Jb2B`F-,ugY@n.P.aS:F_0q5$f'Zdot[)n.I+$r5nVo?Foa[`&&oQWa1/qKB"jP./A
%iCp-g!%e7o(eEO\G:#"SJH3U'[TuuPJ0C)1OF6Y!TR/V?p#+@GIE/q1S:t?c:K,:jD=AgU^,F!A0S2h&JhGk\KQ\TK^hjl)`Hch9
%Z3Kme;h:@k476X'fb)53iai5o*/GG!(=3M0$BZ-Wgk.MH.J+m]49D<L5_c,3-u8MG^2,2O7<OP+!Dtrb!FWPi0pIBc_]U5B[Ts_D
%JP>XCHh140HhVWIM1QRB-/<;<fcCVa;%Vjm0kc@JIhDm*1BF?TB'h#SKtp8Hj=IqDpRb,<qBD\6;]pDS+Qa='9+Df<@UW5lJUSZL
%M(ktR:("f;9a1+TgXC,=dt]%Ke&*0P#:?6.$dinr(:NVIU-&P\Sfo664;I):4]@(6q'L?&ZC9Kn=ICTl/2PnW<1-3>QN3]I&4Adj
%&'7]\P!4HU'cu'7aJuU.8I=o%88P@iRHRmB=A?Yh9T:i\9QhT4b:!cQP?d$uU,.j_Hk:lR(tc8)PG$f!P-U9hSdKT.SuPL?J[dEE
%+_H=fR3FqQ&9/VFN._<e6nTnpl.,-?J9.Tuq@iit:8F-E(rVdO"do_-1&gpq"cbZ=cSjOLG&PCL!9M%NTeD#E?Xq>2JL"[^Fp=?.
%AWj8*j4gI5h:lRW$AoZK5n5=3Ts;*a<XhKV@G;9NS;q'-R@C)U1O"%Tol%MEY$!,Y#i&#2d%gM'#bqstM?7t?;N!4+9cIio1'RNN
%l^9R96fg;&O#j2a6ku[[^_mH_%%%?.\q=YRltK4i`u%:$cX%[R:n_9P6#<>%U`oFDXT<=O5k^r,md3r(RG0M%626OSJU0U4+Ab`7
%"=adU@=^9o1(cchLpJe=OCT\$:Bn)Bj\X;l-)MQ9EH5N/50X:(EZ$&+^+k<%cH):^F+@5KJ_Mdg#T/?>a:-ri'puO[\rH1[-!5=%
%$HO_hTL/.B?o`fu_>Tm7,9R/TOE:7"!tQ$C^mQ`RVGt"r0H%8:#<N]%?b4&=m/_^H5#aa(XuA`f.4D3VXbR@K'XmDEfRIhO2bsTh
%m[e,O`k&aOM.(.+dfq[Hn/^OR^lS:OG(ApPI1Tfpgie5g.r;i,:Bb?J^YVN[l&!a]1bWJOhG+_tW[8!,%@F[h@lR:^&r;'JS8Wqq
%NT2u$"c76BZEM>g@)X<V""TPQe#JUgb6*VA->]q(dj>_\JW6M5-%td*GbHP-;^L)3[Ts_(1DZQ=;`?X2"hJp,,\`:>L&S=3WXi=i
%:9FOZ[t_,0r.Y.u\V8#XS"gq;<,Uog7]"Qf'oa14BON1;hpL30/Zse/SPJRXg#,r<f7o2BW4&BM)d3M;pkN)&E%;ih/SO?g`ejgF
%$JY^+#f.'k6jU(d.nV*Q3aeujh]@Ej&gRBX_]:kGi!u=g%Vll=CB*))>E;QPp^#o?_3fjT^XR3)_E(jq[u4],8HK6@X4^(bg:`g=
%UdIj%6jaE-"4=Ag+J)ub:$iuUS.ZGF`XIOM?U^+',P*>=-0.W]n0/tEG`Z,Q9&2H8$+Ul7+`]N_'+C0!n@T%V!f3T0i8D.c.!U@%
%b&fumJmo2,b`WPD89qmN&&AJm8W?^kN*N"pa+eCOi.;/,+`OLe"-,,lj2H]j,;&s$C%/Gsnj)=[oef*86"kdZ68]<*"CjoGaCGB/
%A/^(0<X+A;DLf!&g*\@i0F25m/HXB<(G$FkbWn]7$rFm)5sU!fB>tmAq9Kpd8dWif"8$0C6\+5J`B[EMN<++(D2'Pe%I\]uM$Ss1
%O!#W&NA5NB?iX]paaoWEj:I@Cf.;WGa'_F^_*CZr$o$YF3KjjAM,a\!'*sQf&1/<PMA%cuOHP-j`.Q"c+:o[ZdL8'k1aN_Nnurhn
%JO*\^%#-(g'S-bZ[.sKV5UIBM8kU980L>8F+GN>iK1'cg0W8*9!WXoH1kS$n+;6TI30MDq*;irs!WH_$pkd<*;UA3QHAhoX">h?#
%+j\ff*&AXE"q2r>`=.m"e2irK0M]O%_jZ]aXJpbBa?g&M\-@QI#bNh:%`F`ES`8lgK/tf#ZuV9HF!-Xu+Gl1=)@8BH"-cp=dhmZj
%74bbc)T4T9&NReY^sLe)EX2jd.,PHLQpD/dB4H\_q6;cO83CLl08onIT2EbZLaO3N]oO%_JNGcE*5R7mKI'RC3!d@;LHGqqkSXe;
%*]HHR!=)5b`_(JLGdRAQ(b=/tl!d1M[Q\]0LCi]49Z']Y2)#XtGEl9OJ8jC%jrfMg!!*Y0(J\@'T4`\A)HmP+9!(^j[Yb&Yr6T)-
%d!bsm<&-ijaUJGJ.Ko@fGSgQQXNQ]]1BqGQO9)F^MBND14-BTq5Uhq,l<7R..9>Sq$il#=5AN7Z#UEuMq)g4tnOskYMA$acUn(_a
%`<h'oq'8V4JQ-;=Z]/LQ6,:jWYn;*!`kW+k0+,)ZJu0+08jhE2C(W`Z)6ciRJk*pli8,[F:D&6\\"88YYgf\N/dpTG,$D<@D0>oH
%Urm1@+s^%TFlJA&?i[^?=BBnkh]OU\jh^oM\[U?r6"%KGaC%K$&6[tO%1FdFCEFH:di3O1YaUO'+qR;-N,&dA`NifC?_nSP04Z:-
%We?@!gt<7kJ4GAa!/*2QoG**3$R(7e4G5uahEi<jatYpY:mgaifLLS1cU/8dl@V8c"-mMAh367e,;8*5/-[!Ep]9d/2T,'@W/27P
%R)]sh$'WF$/S8Pr)rIY&@eNrR3@5"6)nW"f'EEQC,`\WNJMBM+*1>f=`Cse'7Fkob!f+Qp(;:pAGA*M"1!?2RO_Kab0OahA-kS0:
%*4&Ksb[A5&bket#B#aslXATqG'T@_*CNKqF`WKUX>nD_7(3?2oURWL)JI$q==L&Fp,=DqOpX6;'%4m26*\63.9`lPe1%Z'4Dd[n)
%R!foa0I[&sEZD9^JZ8D<UO^C]6L.u!(("18@<eRe$`m8]M^"456*)V6MA/E-mp;_Jc3/BFX%YEne$(h$6\gmE-j/U[K\kK.(7m2!
%32B3<#",?6,^'?oM8Lr1:,,;39ntD'#QU(82a@ZV8jJfb1+r`H]E<-1pEIVMXZZ^f?h2">^B'uDF(@\D^VpaQM'2uA`;kSk%Fl3>
%6KNiUW?,PkC+oWm&02B7;&_(g/"WsYTJE)>L&q#`VHTeBKGlgPDEWp1E?cHVLM0'-d)j)0]Dr>4fF`sB>@q\fEkoU_NX58[.q7DU
%r1OF0oTU#WR)TI`]G`BKaT+=G_HA:P@\DF\-@-+7)hp^iTUGlc8JEn)D$1O3lrajU!<sCH\k!JA,2._#77K1I%l#8p"p<*TJ<B"3
%EQWJ^0F`sT0%F\F#WDbiN'Tsc&\*dU<%FY'"9V"+0JHla+P?Nh/>X;."*bNc/KlL>JL][?-..G[@?M5$+@R8h`gM'`!oVJYP/Z,j
%_TcE(P,-O1$K-BWE<6H##)XZ\1[q1UI09bUeLIu(3%SikmJ$e=]Z(d^ljgfrE9&$L(2P>u/IVh9*Zt[''SoEg6l<#XV%FDZg@CXj
%/<0]=Kk+%7p4B_s8Lnt@828$`)esJ%bT0qc+B?77GWJ*Kd-3!G'H61LrLoOC^`i-NF4EkbE>,)Z&X/R^&F9i:+d.;3+gM,gA?0\U
%Vas(jPnE7WF#V:%d';F^RLtIGaDL9oTb.'%/*Ed1JNst')-]=[E6S)k,%QKA(kG_`K'Fce1^_;ZAM?M1R6jKs`ZYE8'I@QU9o]Fn
%a=<i\2OKDUPCY'X3Wm0"`=[<l1te_NFAg:r0EBm<>=@/5#'r2u@hf-6cU%r+AEY.,f\8s(58kA@4cDP!!tkYq(7dFnQ6,"JlQrfS
%<"?2>&\:G;"0$*LS62eH=D17XB;2OJTH>mE6R0;F%(Tr$HUB?=:g1''*Bt=^6S8Q&p/;%4kXX=bU&QeP@^&7ZJE("PTEI=q@[%'D
%(`8XCr"K/QAi$-<aXn\F@Mp"U1G2An-2W+!$VV.E%p$p$n8'm#&m4iYg(d*pLkI=lTrum7kWlYn5dqTK=B]6RP8GY_,u+S2Z)\'9
%SLie4+::"DE%rZ!A7c+aa6c&[ci[5C![).R)*a#J`6LA?N'Z,^8"**bJ9W-#V9/QfgsR3r4>a./)RP[p$a"dG(c[nBI9ZZH1&+cO
%F?K`Ri_k]3NQL2mkjrKXaCL0ZX1X:kScB<cZ^!A5#\Thj`"g]iAcc4)bX#>JR/qpRnN?NVb"iGm<((]>ToIqAmY+[L"_3Y(bKoC0
%ei!MKknh;^Zuc;SSf"B+NQ3rp,9<SCjjK7u!/$YsCs":8+OGl#jB4(saCZg:3*u[.KR"hrNqigDS@m425(`l/r&4NaluJ$jfp=^f
%#`[;bTeMl?!/$B.-(,MU-6$l-\.rj1=_hE4YZ9d_3WO/X)UD/J.HWH^AY4OkOIV.U;`qt3CaG9m[`&f29VMY7.Ph:pbS$,id28s:
%7LfKIran(8'pudVABpl(!7MQ\S>Il)J@4LM">(i9?l3%eB:'4F399j*=AM>(Fq9F$h#S@LL`;iF-\2Hp850F<\5!pRMJLQc>]3A2
%W.7,P5EK/F1&,'1-EW(I[_<oi!t3b=42jC6MhDK$bVm9\4=Z:=n,Q:12GD&"a<H_s_'JO'1mZ]cPNt&2KcIt-_7E0qJ4Vq1@7%1-
%$-Dn:nC/uC!QR)YE!VjI+%RSmIl,BN@0N9@4Z2>T)JCU\'`+Y)QCq':0cZ_]j*;>C;FjVD2%]NGZCoq`(?%$6od&M<V$0I].Np`>
%Eg^`5(g%It-7\Zi>H&f+4(+3mMjW,j!3Tf>U"jV4Uf7=NeIK`Xm!pgLn9B,r#V4[r`<?o3R^uo=fH_c&*<FI^aqZK.E>:0%N^_0k
%$]!L1rkqhu/9qn8$:m9bVUrW%A"@R*-A:\E#"cgE5h0G*pT_^C5j<80J3[Ape///qcAIIMkc1EMFeDOGaOGkDBGTJR_6>XR^tD"n
%fb9iIY,`s<70G)EAAETGg^fu4oW3u"TeZZqB>K^5B*2Q"F%IWW2?_dO+S.^49CpU%Zc#hnjupl,XoON7fEa^'>gG@i!'CW_1N"SM
%!]]<!L:gE'iug%k5dM87[,@h7RkDB_>O+rrPA^M!.,XlcKX%PqQ??*[/OQ'Af\X%Sm"bp:"9o?B>,2a`?8a)PBASbO$%N1O0j\Se
%*T8`^AW$o2d'I?8fBsW0Omfk(Ma>F;0cR"u5\",>#\F*A$AZ:$3c-S/ZAqY?,>Lr6*9f=l7kGu)Fg_?;AAglToj\'.M:Z_g-5hr/
%-'cV)]'^(o/h3>mc<u/b.H*gV$OANM`P9@?"`FilArM%G0]97:#^C1^3!@+'>fr$!:$G9=`Aro\BsStfi9E+1AJYL^KB2AU2"`DV
%)+MPF8d,Xq6cnkoXXZk?^GHOY%Y5p\L(T?U=j3%2"q]4NKZ.=#>G?eR+3T>h*_<)i^]5ed1rdW!h$DWk\O0$OnOasb5pn\8F68R%
%-3,`"`!tB5^7Vp+R0*M5Nl,EdM]pX4^mqFOE*aQ-e2G\^Hm[,.)7/Mt,(m3iTSu?SGbU?81W78F=N@9KK-(1NCYF$JjM`.nBi^[N
%57TX5O=emr44MW`$$,)8N7O(a8O2eD_O<KKK`Wr"3$JZV>:NQ84'g9:DC_iVZK*IgT4j-,TehD@egmSZ&]>TajVFDo!&+h,XH(c*
%+Xig&CY+)r]o\N(Uh%VlX@&5,3XYI_Neg'K@UNp2eL>=tqlHcjobOn%a/:/LcHKJ,np/UjA_5lC,ch#ND[t83]!p=9L9#lVcNBrZ
%XMGJ;U+;)8i%^VYRo:.l$k=;+#D92mp6oTY%Y.H&f!I+4#\eMhN[t;Q/E'VdZWr1!<8C7i"[EZ?TH9o3+5k;-:jc38;B`51@<[;h
%0hYf6VQ,M'WGFrgXqUm-YZMu$>NT=DfB`JS3n;7r7;B8Z&3/Z8,t>b*=cPmH`4![p>E"f!O?R^(NbkH8RT6.H=NWb\Fcp]g,0_%3
%dkt4RPT),4-(`?Z@E<kJR5>?2q@&B6@**Rm.1dQ*%m^#rc/:FckLC?%qaH1+):ns%BR=fdJIq8@?;>'hAI+6^2Je?shB,#6hJQ7g
%Qq;@N';s\d6"gib'A6Jtj-UiaA?*MnP)^_'D]4NJF!;q-N5S1f9'DfVL7#uI#efgQ'-JH1lO<`6<<1rbKipo/?'\Bu5&)GsmFZ)^
%W0s39@fW\(k!PXZ-=n)DrR;tt"#GW87$'$]+C^g!Lrc,lRaZ6KT6^mc6:-C:WO0IZ%S\u=*H-N0?l1]sc'fP.$k5^<#!jAWDTW[n
%!>pOWG;q*?XL=!+g"ZhJW;oDbVM\Ih%Ol+o7K\@P'<\hI"tMf@r<-LHEV"W]V=_J%'C/8'$r6(@m5>&[mn&uk@s)>:[^V_-3R1"Q
%\A_2>6lr\_43:0a13Ge-=E.&!0Qe]BL3?@$BJr]h0FI1_#Y3ef(-pOraFH"`5"Aqlp('FMM`>:G5nJ+*alQdo`'RGLeNd':)\X8s
%PXjOblP0d$!j[fI_M\iL/ApEX!h9-uA'6p5Gae%'l[?WF&bl3Cip.:a#_TNlAlFY?J6=V!XjW^+3,(Qc1#Q1C%[-1CAQhY`3u;mE
%OY(";lcRj^7Uu)qD!Z4#Rg\oAQX)j!TYZ^LeQUgFUF7&BjU.Qh,0]4b>N/0UmKC"]?Ka2qP>KueN6^=Gg!+6dRn=8\^.".IePkSt
%^>sDs7Cs3m\4@E+<5RCR.*2b*E>YsA1](Sd`n&aE7mt9Z]AhJ5f$\O9$lWu/KEF0&HcaDuG'&$^>M$AoO-fMPF8S:I(43^%R(O3p
%N0,IR?8sB$S-`i6-C2K,MW;Vth/+'?4IpWd3.`8m_AgsNbl3_sU?STX%NbH,5toTVZ7aA-o1EhZ'IV2=!aD%"K215O>P6CU!FehX
%TPAmGpWpl$Q\\J\NVSWp6d+Zq4VW]0a4W<`qg.fN`uY&i'#5ZA#"lk!Q"a)*iI:'XoTE=Xc`Lg7&i>OnZS=uQlPN^Ai\C$Hqp'L^
%ABJFB?*,B/52MZ9n.Mn+92eN9`fM4n!c8:Ob8JS<%$F,*Fu^c_Q=depA3t?j`JJ<m==,"kCq$d@*De_uQj]d]irIH9n^nffZ'-kM
%A";sa6O`4^$<(%p@)TZ,*6T&nRXA]^aCDZT45+p(%Bq4>ZtPeZ_#S9bFtZ._m2,nQcH\H9Lb\_2=_51*$Q@JSDo2o&*<Iq"Mj%2=
%+W1hbh:0sU3;)<r4DCIp4J9'NM*o<,3V?C&S#&r7-T_6e0gi5F0D68N>%\L_SII<l/<RRXL5kk,Z6W.h&X_4f&/m!U+^J"^Aj6_7
%3)7J04AO/Pg<#_[@h;lTo-GV8Q-;5DTn#D#2]^7kZU#/ep%1rV,S'4%f5r5h[^8X=U`21#XA'$POkMD,2W'>XY/sf8mNGo81^L<f
%aMJLW"dN2)e]l$=!5rB5N$4Gjkq%d79+eI!q!%/qiiP23os?H>'^_c4;n,'qP*M4%G\h(o-VU<2fSqf2Af9L$SCf@aNR>WWhKF+T
%.2Dq\-?`8A('LnE;S:sN4d1KBm8bMdB"[@4CgJS]T]EX\_87Bk[s*+6]9Q]Ce0?cS)n(]M,C>s5&1PW$ke'VmRcP)CneCQo,MHY2
%J\:Vl[_`slYs$ZL#/&4MFI-5Ll0XTmb^^Gb/DH<"foXsnObnMeK'j1#<8.gWKp'S4.GX?mk+b[NJ[NN"ba'add0.cK8jsRK5>s1.
%G6)/;Jkoe];`I2UgTtg7C8jU7&"hKAFbn]<n_tS.6sIi_hblI8Hs28J@9X/[Lsnh9'ol-I4_R0N&i/-ZF1]E,gNR$<Cail+(57=I
%Tc$m"q/@K'es=dt<A`jd%h?FcVc[$)%8co0Tfq7'HiI4SBsGUtM,7di!Ud&<5dLguJWB&N;(CG+:GK#79V48^;^I.:Pn.RiV[sFm
%)")L4Ss&.*2Q.N8F57i=T(h74Ge41\q++em:P'EN@i1?"ab#hm-R2.&1_:L<7O?<9"Z./^T/1IFggXc?4Hd!Z"-fn.ZiS]Z0"n&N
%/cF&$PsNK-B-3,TZT[%SV$9ogM9-mB_i\Mj!f+bL$kLR:j>aQ40$m5%d%skSFFl$ZIN$>J"u*@G%5L3>Tc3-J7^secRRuc?[WRbq
%oV]"j/%JtMRDO)M!;b92d'B;RGT:HdJIQaEcG5`I"%C'@VS/<SF;,%R%HB$2R'cW(6^$Tt9#`ts]C:NRWaN.MaH3l&:pS9uBe^RC
%d;7fW9=c-,ef33mk#<">=\m!HOc>F=$AEKL8g!c3V%5bC'&+]tXJhLLE%j9cN%&I.';]3OZt*_@.cIgh3(XK>FBY0lAqLKBe!.9Q
%MYDg4XjHEI1mGA$]"n$[HWIB)kjact=qOrcoh*'_dlELUV:Ue`S#sO-'S/"P`LEX-,j\0q>Im$,bK?]>Usa9cBTM#Dj&]KLVB$]^
%X^*g'"UGd7.%R7[OIl(iR?WP6D)@"uQ/7mt/kqcj*D2+]B%8`H]4$q1`a-uM[!HL$=sDi%+E/d[bTaFU*bal-&4btOM-XpUaXg3+
%ljq'hkr9$<&cj3]CWqU`MB&d:$RR5Q!3aa1GUbot(ugF``u5Vf9/-G0%9@^a6b@(9RNi<"f0XJ@J<Ye'Nl@oE%=s(cM,(?r#DCDj
%#h,=^d*PIQ[RJh3'RY3tl'9_7L=?(FUs5J4"NCX%k7`Y3iA!<-?+?0;KRfpB\O*o";DjWM5k!H[H-08e!H=]6fJjV2*Z'\_=Os'I
%i0HQ<j<72u*tYSa_`;%D(RSCt&:@E4(Q#<:'@=WeU0.o=`u'&T;OCS08=J5K'\e:-l&?Pb6Yt3iXPfP\H0NnU/-[c5Eb;Eqm=Sj_
%TEU+=B[PTh1MN2I_'&,RI;']&!)of5@R@^%=:Kn)@pE^!O-L.u7%cmn6V+o`$k!`M'5;,'dShhlD].5?G[q;Z9=l>j9"6.+1;_eV
%0c$)[6Q1jBrp#S>(SAF#dYC%8b/6&pR%d+/*!;#!s&St.(E*Q;KC'&LQ`SQrF-'HR9\01e4CLtSbsE@5$cm-Q1ai).:as@eS=U<b
%GLe:XK560!luS"C'iR4d@*[d\S]ViZ1@GV%+Bj!=^d'RkG\%eEQBNNKXbW8I@og<(S0I<F/Z&3?C7ktq-:mlB7!O)4[U=1A5\Q'`
%7+r&8fZeS35M":kM!V*FPodsPogoWf1UI#b%hGMs8f_'q3HcONkF_NO2E4ePK1?udrD<c8G6?<./VZpYGS(bq4:)Z;46O;A>ORBP
%2On_r5'Gl;Z]QA5/5MkT$0Qsp*\T=]9iZKNbHori<I-,$G:0UTVDWRW+\_8%1WA[\G`ke*LZZ;9@:GkoU@RQd#=:Jea_cHqD2.9V
%L!o:8.s0F*;^Z,iKM^@>!Nm<UUT02OKf7Mcki:!8N?7C563eG(i%D_>(eaV])'6gWLV<b+(*2m!%!peU#6/<*0Lu^t97;O`A+6be
%'si6EB/+fq!lUNF7/Y[D53As=M0"Run>tG%:GYT/&Mn"miDN%bL-#jP&[<r]j3Y0=iWCnJ(,F/[&82P69D;Bl54Cr(E'W.=@:/T.
%'q2@-5[X#C0a+B.hL/f7@VJV5+OF)QdoZu4`7Df&ILRBu@d3tl(H&WQ4OX&&e>k/:*dGm>qa;(u<en_sb[sRVn3R:C(Wu@ekRDe?
%k?u=tf,q9X2?>d$=3)?^OmXA*:V%n.e,)-f@;B/sQ?p58YE0Y0>CYZ:[aLi8L(_hQ+FuCQmi6>>H=a/^@6ce:2'G]c-Qh.9R\/ht
%oiS+!&Hr$=.C4k-hdW0QK_;*r:Zdj@1+bkB?A>eILFTl!QOBU;jAZZq-Ga45T,^4TLDSu''t_X.c0M3[$[XGECqHSpZe]51L5/%1
%qf]VoV&(k^qoZJID2Z>(]&sKQP.*]&l/%QTT&cgB>KN/u,iOoaH03'+,guJlS:AoL<64Y5\Dfq"4-782[Lnlio=4,un32ZTZW;5^
%o="&9F%AX*cV'!C]/*Rr?4'S^[lDd//IbCj5Vg^_(51E_[X@Y)(6a"-N47qD%\_sBcK',\EQ4$a`&rn4`/.It]/)HHVM^;d2L+?9
%3K'i&`HZ7;/>Zfo1%/rlFp2c""Enaoq'"nFai'-2$hnpcb2^/G6,ZF*]YLH[n%mLH\$ggKY,L%g=m7^oAe.eXHRHf;OH.TA;BpEo
%=D^sK-LKIn6K2.@M77K.O%?`^gQ2N\%<b*ui;HVAT,fZ@NFLa1Ph9JX14;"0fYFR.dMYY0BTj1DA@P1sR1Tj)luC/>;%uuPfUdZ7
%FqI@DjKq=q?C)(5-]jp9`Q'mhrH%mq$-<q1,]c9h&PHHup.RRe\jq$kAT;_rQ=E5?*&+2@rmJXsqofL3QEb;c0p`11YO*3P1]^pN
%7lOI0NU29:J)<U9pY$ke]mK=H=WcMqAYIK7Si"\:+EqRkg0(bSg[-qgrPe*:bis%=[<B0)f!"bl>BSEeYhO#uk!\V_TBinsp%&]U
%8q$bW>+N070aH`F(q]=B40"oK_99;(qSQTdaiCprCE2Kn=6Ju=7DCiBWN@f8ngOaKZi2VNi7O]93(Tlf5kleL_%=X/]=FBjbKG0%
%2tI#A_9\ZGbk!1S9G;*,_tUJ3H$flT5F`BOBo'>!h"f8-".XH_#f$<WIeI3-K#X2)IrgVD+7+??/Eq/)\\nG0rI-Bf^QNbsrXQm-
%@/.Fk*8L=#om*J4CPP+4,@D>EQ^an\;1&(X0t6u\,UBi-D%9a9]lqj_dZ6D"Nmi[m*qaRNoP-)dn*jc$pdTLUHl)5<Ka[t0HQV-e
%5n>`iS_T=`iZZK59,;DuK9S(+?lMHso;pQ\<DS'dhIWH(rCS;K^ju/o0_*rpNF-_,0H^4F-4^6#VLCZ;pM0(BQodIa]bB3&?465r
%iVUHq?i06J42:a77sn%WRfS[j%"@6'^%sQh/JN^3O#@:gIK.>#%IsJls+6MZ3qtL<Ys\]HIo=Mhp@$9*[q94h&08V],8!Im:aF$/
%5/-.g4<_GJNaM`BnOej%o27*To>GPGs8T8c)EOE[iCaJc@LR^X*o/sXTOou[l1odi5[-Z1;]C5a1^5)j,HJ)/+(\b?Q]C%nc$!]n
%!n(9V":ldO6ViUM+?fE@BS8@_e&]B[5^IZG'D!]2bbP+#*<>+QZ,>c']<Cr:dQuC^53d@,3MXA;4%dQq4=pEYS(@)rJroOn1)=jp
%&*rp3;9.9U8!*#X:h\9B^kFj`?j-,KI.s&[q>pB-`,!E3PXiU>W%P]A^,)Vt.#?2pnjS?h%rM`0#RG<K5b(Zce.&%_n)Lae"&B&G
%82)G'F%CXFrO?Au/e@`9odK\m]Tbt*ZuejP;85%Z.L`;)"^r1[h?3K[i`#G75P0:/l$;AmI>6r"ds3-hLZcU-+NBb,q"3\W2<@gp
%j,_L[`u(gHoahe3-P,1-ikn<sH4,<T4:e9Q7M17sa$D7aGWn]5!X?LX&<-cCeh<3)(J;P(AVdPi#c=Zm`%+T[]efu6'ncq6'uVf/
%:o<7["mT##L\T4(P#LQH3<8]5Oq]C.=NLe(K5Y2FM?lfT[KU7c!^%/c,tcdZjJ]FF:;X:1=n9AdcR07>F_:sQ-biQ9#(dQ[iAZ_6
%F%1c3/eR$5,SDQI^B>fj\CF>H&d=XN(7KUf)uL1Y4=G^-$jDh*b/\K-,REhi-pA>:3Y%6S#pPj,Z*3%b!>C9.,:N%.p(U@L!,Vj[
%P_9@GVUILOVOqC*//Z]XWsB.[5`l@EB#7NdroEgCi(/5.?BFs+8H.E="JKj+*jR+YMTBlZ$Dg%_$W*!\+8,r*:nY5d2';>$Xo_k7
%OM9,:7,S7]cuuNm_1[J8^=4MI1RMcbJn,Zk9C\^5m(e^t5TaA7(i+Gs/=L5,)%*fK@H!`(BF&K.#uq]!l^tT;L^A8?\B=-D@sCNI
%M,75a.]X[5d"MPeT_so<?&5mlho!D]+8:ik6t?g%Mso[>oVLe2E`kb10Go.(XP9q6![1GtWs"I;_jA)j*kobt2qNZ4i\UCXEh"gT
%0`8^PHnT8GHkOLM=FO'm8ai.n3'bg.Cmhi_60!nXRo+m%AHS=mFBg5F&O*S@'8#WWo*IcPiWPrFmM\DWLnR(Xn[6_`U.5E?O:m?R
%AC7\5`rqV"VIrBadRU#NnqB\GW^$<%;_X;(>;INr&>TLo#3-_TA&bF+(df<i&ElP+MKP`PT*qM3,!?be%S:At7(CkkJ5c3Lm?ne]
%1`l[rZ'TaG'EW%Z'T1pMFB'/C*".brR$Z5e/=9]#8ViK="hQKYlaXjRUR/76.;]VX.3SBu&LlEjdA=G6Pecl6d/D)(LmSpR,QdQU
%U)aDOLo#q?^pXQ2'FD'4+WZXjp@5QVOB#*oL(XjU+"X]!lP!&)&LJXZ(kh9/R9apZOOH6o##SA372,hl`nWrUoZGo"T;k2t'bj%F
%5^!u.Bq>P>'-F+miVR6.!/>!'h6[0)r+3udLcoiSTYF%&<6tQSmti4nTfDo?UXVS;faf&8)InScoilu7N)ChXP9+k+^#26o6B\(Y
%VrV`#\*5%f%ac\2*XafL,V]0E&!;!kj1>1+laC1rcj(jRN[RYASH;K8&45su+(#3t%m\ik"<L@71QuPi:3dii\aFuZ-ujhg0RW)A
%^hJN8#t"bS>sQ(Q:D$rahY9!KO>%fKM5hoNa!lRbP]>kr!H:TH*;F\&!AOb@3@UoB:IgT]N0,6Mo0^ZZiNn&j_@IjS<GFn&-:D;u
%PtC"j,U"BLP<!gI!rNUsGMJgBYL"QTKkJkE+FQqWRICr1#;F%0<FRA;qoOpH186Hp:6A%Mn!G$1#g?(pZ/hWWcN)pH">3T'l])&S
%S^9(o3'pl]-c[W$KgEoP[:<'-K*ak]Oe<4Y>KDe`^W1e$c,8dH&7:h,R/e^4ljQR=9&M3i4eP?=[/rOD+T!5VEH4M[<8cnFHsN!]
%-O/phGTI8PbQ*kY2_D3A`WTlD,u8,\0p7JXQkYS=!9ZHU#tTGRi^9[32-=KR/4efQYW*%F\,nD906YA`;[Sm'`Zq;>PD'#tiAMmH
%J=[udW8iDg%!:Lik/7iLiuT76$mNp5JY/UJ&f=>o&2#8]N72Zb$qS0C6V%Qu:#ZI>3[$T)a_2k^%AspK*o\4m(`.nlEKCZ'Jk/26
%&5-:U2oE,H@MjdeY7m-G`:u)6n@/0B%,qR7)GDhlp?=sP3me9.2=ZS"+QH'^2Lq_#h2.#><.IT7,o$`S5RBKN5ft:H%s7p&M_Wg_
%K$#!Bn5-DEa%6nl=#?&cN(<3?8l)CC-t>$%"bT9r!J&f?T+e&4,CrZ,!_+l1JX/$H5/G(o;]R$'TnjRS&p,#X)T3tRB%(9I5:07k
%(L<-qBF1tB93<ZO?m['grtGa(BARqL?jqS?BSFmF*Q.t4HO),VU=*U45K(#CqaB4aMRlO5+=A1h)&>eG8AQ8"o&@cN?\7(MG,s*i
%mGIc2hu4kPqsAkllf[(nc<kZc\"6mh!0'1[Z>QoQ32bZ#U?:`ZnXR19hB/;4^]!ku5M!r`]<30&n.1OCplWtMe&eu/F;G=gs5*-%
%064bo@+6&'J,@RgH1&.k++A#!lbECj`=-($]luO5R-S%5JICs[3/UB`l5Q*(>Qb6FVkDCe<!nKk8>[M<5U$A'",`W<f79A0;/AK`
%$;0Ye;io#F,qo1U8Q!Dogaf8&)0X9aa-M=c>D$?rq.F`i6oXoH=.Xe8IsLP^ntb#0<<%m8J8?2dWs:HEEjn6DCj(Qpg5oX3\B4gM
%(;n\mf,Cg+g"Ci%D)>mQ]q/I'gL[u!%9@5]@D?q?)E%hY\FN(,8aP(.<&B)$02B.UH)ocb2`mm:OB^NB;VA8DfC4-jBtdo`f,5QX
%X7Z_`Mn.@?kb3'`D>UHd*neR.`F)/&>[]PXb\.46O8nT=FjfP3@+tTBPQI!h1l!`?-?G9lD8,q7Qu&\TR5OW\7,-Po7C+`#,e<.]
%.29Oh&H:45R#fk$g.An:QY+IZh1%KWJ(uHRI@K+F@,&GNOQ/IhUVX0]q%k`7s.ppN2Q5T;%eQH&B]bZ25=9?s5_$33r+i;&i:PX9
%J:.AUYiLF[X8];4`W[CfpD'h^7_!E(>MX5Kg/guJf2cC+4r=5nbJ/]F(\hAb+4%k%M8XH6FjiHk[a*1]1-)f-?Xfc)kTD1SS_j+O
%B(l0V1+@PG7$R2%]QSUNS'O@u7A^;JWS$TE24p*#&E8c<k36iohh#roY3A[;oTokAaG(aX8,[b?fH#)QIuRP4>i8su*1+oYXT:`?
%+#')CG7WhZ_c0OrOu]EtJNVE]?F)l[2*nF[24sMFNT5FDR="=)Vtmn]BUuNaXl9#,@;XZ(pT4_IdsAa[D0:Rig.=-GFq$Z8gYHcI
%Ffj+2SAP?kL2l%d_G]g/NJA60c$lhPDY8&C0#kMQbOq?;T^]#c\E@%VHL.5PD(of"=2)KN])CDU%>J6!-7T@Ng6:aZ_?ZYo_l#(l
%4+9hW;R>2^r,(*!G2U&_F+AUNF5:cZILh?F4RO$sZ7=W>G?q[k'<'O#DU0Vp;Ed9;SUM9d.25Y)K5E+*k9!MmLTqH9Pb1gbg"0hQ
%X4(b]m@[VNFrG85\8F#c+c9e\1UK]+V+"&_LZW$D76&-0q$3/t@rbQ?d\GO]%rBQi=jb0AnG0RdUR93T=^rR#]MbZ*he-X]rO-G>
%fTpmCX4>AMHJSQ3PHr&5!,:-X-H@\Gmrt4[f'"luh]-am,K,23(g_>gFg,+ebs9,CS?3Sp@Q3T6W`J$N:u@!fVsNORNrtK\<g)3O
%%aK.mA/\X$Y@/MJGNP4<bM9Bb)YQY<lY^aEd)>^fCRqe/mAu`1lh3f]Yo?=6DQhE*ed=h*Bj'"H8a0MPoP7\_*5NQZV;*!]g9pB2
%[Jg>n]?hXkFDH;.!?.lA90fAn?=D_8Po4WRLAe?gYPU3Jfc@G=bk/;]DNf0)B("E*F:-a1D@Lj3#L,/_UoccUP:b!>aGXchQeN(2
%a#bIDZ!Y__JBK(j3=o8l'[Mq_`Be"/f?0/LXL28bnW=<-h;NUjbM%K7',bobDS+4mB`mU+Xl7c7$X:0YB\9``an#tC5UO$M^Xa:p
%C(P+/^ZWm-NH9`ZU$jh>YtRF'h>S[:P$G3A"$IU1/k>;t,Q<9QONp1W$\3i(k1-iQk]H,,?-osbIb/>V[<U$oc0!f6kZa13!Zt;r
%Z`3sL9qA7hgX[CJT:s.DLC/g]^C>7L7LP/#R9+8XnME+uAd_P;FhZB1#:VU6l'cAVG>D!>9btB4i!-kFgqse<Y`Y<,(d13n<c8a7
%B5K/H1@SqM`qD%Iq0ahU)R^,<XE`l\?alK=K$&],)`j[bLqSaoST-GGe4`EkZ?C!KI4I$R`mMb)>36e4&hGi'0MkYQ`Ak>fRIm3#
%m.P2e<5u(-9[2aa#\lCQ'!hg08T/2\hMcClX@'VMC$(/C,1]oC6An-8<\Z.#l/8XcL92G_kSi4>KcnH(#j,Yo(PT!VW82'VHOV!H
%(rEb'%X0VnG;!dd5+<*e75L1tB+c)[=+YOa#nbD$qm6`[U"akXQG0MeTi@ONSAbCAb$<0E^FNJoY9FO5UcHsF(85&MO#t#E2MYuN
%]oEBah0u-PR,Z2.X"V'%m.Zq3d1:9UCnL?8N>DAk>,PfGaX[HaI2?eM_;j?n(KpNi]<Zk\\]WdFO*@I>S"hp>ei&0j*"ZtPVg'O,
%riVCEK8_'g<=1f?TJ@6YRF5JW7U2PlkjdL[U\O?[Q*;H/1)5B=9LU'c.L_C;Tg;O7f8PP2ISHU-'L*Q"i"VT<LT17CB/[o\=p[.(
%^ihcs>CEU]*5tU&j#X__oik.KMQ:*q-i&tWn?Rd;M_WVLd_'dIH'*ll\Cp);T&rOq-CDgtIcM*qG]i#K9?9F(GaC%/N^k_.Hc`X%
%(uS9<X\)1]M3KMuZmYG^(KLDhhs5J^>O?D7N]"D$q^3k2DOZ*M5KN.Zk4'F*U)?%FJb:Ws&!Ch1FZS@Kr-]4LW)N_ibh9u)[pIo?
%"jZJ0ftg(i0kN2\&.M)lPaK:jkH/1!4.b;h2=C/B=7o0;)PcV%e@Sed&6`JTn7is,okR]o0FLsk",]7k528$Gdi+iQW6Vc)olf5X
%Z<>=@`l&VEWORKRH-5TY;BoqA=o)#N5&)sk7qh_jI[=ck#<0%CCM1nni_>U=cl3g<1C_Ru70p9u,Oj>P+Ki`AL>^u>>6><R3hsHa
%eR7%l<kVgL5(1=qLsF8ZUC`j6BO#+H\nrud!4Sm$Kipdl^&>b9H4:RS[QD4hn'^nYV8G.C6*b+h(`q"l_'aGT(gl\jUKL(+U_hsQ
%QLV6CFKY+J)<a/+rg<<dXjpPS^4G`hjA*GPb'f'Gqc?]'EF]O;%,Gp$ImpE@RpSt?'<B_4AgQh*S]tQ4ALSPB60kW4emkkF&A76G
%#@L&*)sF6Y)M?%QZIa4$TW(ZQ@`V-Q<p,X4$Do`M2tE'D5R:W,cDX(Q;m?/^h>Z:lELG4UB?H07;P-!6bC?"Z&PIlIc"o;R9P+3X
%hl\X[\lHF"\4S;oUL(S3rL-3n<]fu*ZY'RqCY*n.X*)3lq!BQCK0`d$[^\e5kmifr@;C+a2l(U!h!P(CGdRjj`m:N5-o];p0MC%0
%Cd#f-@od)#dX(r9TS_Cp^s'2IVqp[mp!)NTY0e!?0:!kZCAfZB:cA:o\g+nkZ/a<rB^K"'3ALgEq&HNcER3%b*Q^/247*IJNV57"
%Rr6aAT6A\20V$.>!DMTZZ[E:__<BrPD$Mo-4H<kF2-JZ6E]d#'Y=@)WT%0@mW,T>YJqepL>,0bh?=iY@C_4[2Y#I'IK9&s0>r,2o
%L6tn")3pY&jrkMd0)89RE-6cp+:Gksr;sG,>`jH'0/t9#WKn?a;-i\[%aSuO3$Ta2VY/.$ln6oWZ2saJ>_/C-0_(c5J&kT/SFV;:
%<hM?P<>?ir'j$W.SFVK8CQ-k8Xt@@n)3qS`]XT`Rj/ht+"?V6o<Y#7pcG_[.qOk%j6*j4FYe7Orjp1/)q"/;&N=[1h=mMU&l*^!r
%T"KDS<[OD\:U\&M\.[c4.s[\'\go)YlHoMK%#cM?jqC28oBreX>E((cFU6smde@)6Dp:2qHJ4l9O9`13boOl[=s,hZ0g;$21@CF.
%VWro-^Y9]BiQBa8@$8'+rKUTV;^s<MDR4u>dcZQ<G&4h'>&:Hs((Nr@>HoS8OYQKFoQ^,eqk]:IL\KD9DjI#LpNBVqS,F_$kA+_$
%S'S)nQP](V>.+:dNdUN,,&aZ%^3]?`-[NG6rSdb$Aq*c]eOm%Zht<c.[c\+B?cm$)hOVpa:\b6b)p>q2k2:Nh$JfO$Dr9o&X(T?0
%g!c;BRi>5rT[\;_W*[d4n"3>H[G?'8*NF/Qm[AIrA6Aj%Yo(/Y=Y<s&[g,1uiVCnHH$`LB7sBuN?eY78TUYMOpZuE?[Q>s!<NfcD
%s%k[+j^6@%eSVehEHC07qJgRnOM>$M0AddM(S3HYTc9_-p%._AW-nI38/9mKm5JgY`UdO&>eT_b'`!-[>kb_BDJhSNJ#![mTEh;h
%B:ld)f=eBLXiAr:i_'.1:>oUBG"3)&9s$.%DNZX\9D(n_]NckU8&sp7KtH<WV;dEpcV'b(qld#rk30XVf?\?,YLi*J$iI'5<&rbu
%f3S:1C/+A*G<W4<5!<ZqgNOas?g04l(_sIimX<%\/8hUT3tJ#(\c2HcAt`/<J%>2jB73ccIX'LCC3=J6(Ad\UJ*CFe[j^S(B7nf$
%3H`*9N^BqSegdfQJB@f9_hFB;B!JK30(g4@DVs8$D/J&lW[oM!+*LfDH7s2$;PifZV2a)dpM7Uem>lqp;<KQ*l&g@4)qjdg*m'`h
%,h8[L`M-Tl!rBL5mJ.iBn!$mh)u$?kQeqD?)i7pL+tV4H](&O5D+4)*ktuT@r3^NDH*5ngQ7JRb[bu#,"VUaQ>C,q?Z5f)NT05#e
%NZN)>2nls"7,5-o#(4$O_;.AWi\NZLO6I5RKnoQXWYlCBganbPM;74Ti,L%"aY3>(@JS)Eq/l<*f1N/gs%ZF_]R$"4h0nmpYZiUF
%Ptqoo?T5`K>W[RUMUC1r@nk<oZLP)<ln?%)7W/XGeaf'%j&53$>[9S-]R*[2SNcOoL6"MK[GU2F*QA=k0:s&([i[`9Q5:Ld20G;;
%=p7_*L;!N.V8ocT?hKX)agediIQ4u?3.*V(9hoSb\.0gP)/o@1):\b$cu'0A^FJ[jGL(le)ir0KottB4Ej5(ZUKRj>H*Fq\lmA@E
%q3<8/b?SY6(8&Y1K+ZK;BB,0?g%LWHnM?fuAn.gLrjfUZqE/-S2@eUJMg%@%k`KC),"MN%Zat+Z[ob\Xq\PNom<gdV=3uT/>r";C
%Pm.T\->;#m4db$l`R<FbAY@W?YP&@h?#VXGLV9VQf,<YYSlAaV:QfF.8M6IX9@-DlE2TrD`o^,r/oJG;Qo88clEkp/<h4j5<!"^t
%'(&AMcZ$)!\CY&jQGpIDl-Y^@Gd]W')U,72>-4$C.a"%4f497!rmTKBe8'@&F72EbbHPthCj030$]!n`mJr:19,9gsZJ9j?<:?rf
%pP&RpoD<L]a*U7c[!cgck@48Zr_j-`m@J*W=F'l-.9goXiVCO3Ye#,Rn."+KcfLASr2B,MDLIU`GH\6#pq@buBs2?7F\DZ7G*=iJ
%54^[i(CRoWFlS=ni0a@bq[[Eo=hqL+VVCi?7[8[_?]S+21\NC-oYOFq_#Tr0'+NsI9C#f7;m>0PgS3nmg@#CST:_Cm[n5QMk/PkJ
%*h%J*%JF3,?I=6]3\DD2%\rZ#C5b%[+IASrqV"*W107=ShekR5/Tm;(?G#Sf)nt5%ShF>Li)c];4nfm!rR\Bb%hna(bp.bh2I2]"
%<hqg])n0P+h"c?VXMf=3J\Mta4aiO)SU8_>1q$^*g-+;J^V5qT'@XI(]!2@U<\>T]k-@+0_\p2%j4QkrCke_*KVKbC0F6r5c]h8c
%YSN-%)J65$]Vld^I@NoQd,VfWD]%a>5!>D0O.G$t%<jb(eZ6a[l[?UG-M>.CBp/k6n^8S4-L&/>0,Vm16:tML-HiOUr;BK)N,^'/
%-Fil)kljF3mGC-;;Iq8NgSH""d#e$1f9:iS24JmD6?CM'0hV%Sjs/"QnRdN#>Tk'TDJm)X9''WI?M"DD1Q>^e\jQt(Lbig_4I*&p
%+O7%t%9'!\:E47-*EjH9iAfPk-iEs@VH:^6H[YKVlV5O-/8I-=&>a7T`0dDW7PjQme,rcOWNRt02q[%YaaL;<&Co\%aZ5Mr\Y%`S
%p$o-U%gaJc`CsAINH?(c?^/2#(JP2`U??k&6T-9=:cNk$]MmY!h`QQSi&#EO7oJQ$pH735Ibo@^<k\;OO)E3XSufmN!Nb(-Gc#kn
%H$&r6=fM)YGdC;_pj,a52CHKU_nFafNZ3m-*DsD#fig;oTqRdu<YceCQuHtZnO)U61AR;]Hh6q/KqrfSg4*1QrqpQZSPo!f=kN2-
%G;g$rohR9OD/WbWfl!*([9.e7[?!7I5$,AVhlbg>Hk2)!lX$F%I(3@EbJB(">5H4%ZZ>Y'j_5WR;#p9*PbbZ@dFj;"f?*I9a9(p6
%9Rr=M[<npk[L!(T,.MKd]=P?KTn!6_!"*1\na?,s06:YV'L;WBjCO@qKu62,W%0hfSQKM[jA-S+"r"K;rMPA\YO5_aYj'E=,"9!j
%WDZ^qEet%_gRN7HrD7rLPkUl,`KT<)c1_a+0CO?0;Q/qFHfD(TUiKBKP5[uBH+pra7Fb;Y@H)jV1FsqrSuUE0mDHg/X61W!TVbm^
%duhks3Aa;L8bp0e_38>4T"V&W!4kbNK?9fFGKWc7mP[AW?>a0HUCMc*&"iK3SKu>*HLrD>GC)dhZZ4k>RjWoBp?!"CIeM<qmm#Y<
%2IG969KIOqTF(8%Lor0:"Rds\Qd.hN>_<V1+0u6#beo,*BEa804%k[6m%$UH;:[F>pf+m3*o9T*YVP[L2(mW)ZKbR>PEs2Q7cd"o
%@StZO+!9:@<]VI)cer\])/K%O^9dZ"<qYim`Ktq@Hbn^rb84chUUPFT04,^3`g!".3;O7+13`24l=+k@kABtam3dPBAq-mt<mS&-
%s6-VZ)_7?,c$o]j<OB2UoU'r,pE$Mf`WWO,SL10b#Pi8@pp:ltMOqT\C2buHL\IDJankTDqo*"92;]nICot"Uft[4HC%]=%EWi9*
%#SNfl7L.`!I^OL7Gk2p<)K'G_I-PMh]j/.XG.r(F!cOHR+`V^BogGe>kt:bSs1r=mBp3RYZgpXG[@3W%2P1lmZ>bk0,1UM4e)W3b
%;dQTGc:Cck+^=<)Q<Jp,V"2FGHO))N?V=lWkGSSEG[K;1B?k63qG0`0gXKcYO)M`t/$SelDch8`eo,5.5(*@(;/TVcb:J5Q[ih5k
%m$14>DenOCd_5H)Y6tQGg33*bX>N6"CDp)6h-2J>oD:]o4m5]n!o<'(?bD7\<fTE#I1O4[]=IaFph@RUY]D=C@"[R3]0M<c$[pB)
%j^e$i.i[0'rI.Nk^2`,dB,En5URg7-et;9*C*Tf:/"^u\NZhk78)&*r=K*s!*t$C^ne+XT;68d[dslUhF5uekHf_BQf))1dr?blr
%q-`ZmY^a/^7D68/jJ+22pl3!,^h<uEE4*@OIes.8+T'XkD"Yfa[,K&\p[0##O)Np&><W4R(#/8Ljmoa3`<?To;Cb#k`S'&TOGr8O
%qWXQ'o-q@Bi)]RWQ)+`VeFe%,YMO9he)osX_kHID)q]O];\$:;QkU=T@=BNoh>Ni"f)$g6#)@?3<7ft%EdG=J])QdU@_Lki[J]a_
%K5$OmZkH*Zc2,KKq[Zc9HMp+BW3>ZM2-FjH>.gN>gY.Rloi>Y7qp#F&.K%&6W.',73IGcfgO6?HAjVf$&&>[@SEo\,Z$c/=oV2!S
%nX+io[?(=3pCL5Ph$6\nIW`LsK?D@>Kob_[K=$(_Kb&H*eE9^nXF>T/;/U<11dEsXr,hgJq=NTd\(&!37t>tW]7nP*XmS#3,2T!Z
%m<7g/AES'b0C5iASo:bJHYur'`jW.Vfj@<?BV@?ml=8jCq)%o[>'\^>hA[\Rntgj9&7U2dD[YCmh$6KXXN9$BMEZJ[LC_:K]]Fsl
%UPCUp-7-c&TlO73aZd\-a5td:"*DuFC7+NT]j33)5+YbIRqMUoml^6O$H_R%@="-SK.i^t&%?<(NUkF6%bTmt[l2iuRV/+0YCB6B
%bUM@IK#Iu509E$Do6KN!j1d.2N@4+abG@_oa]%gj?f/!#[G2,*C/tO@idV7io&\`jldNb6KD^jZ2Cdna)_7Cn0>:[NOZWJ%PddZ`
%P$,B$HMb)]i)2u5')Z0m"o$cPkKQepRG?'.V9%-A;>KIS_4\Gg;QXadhRWLj,kC?SioTSQ0e"q4Dh1!^GXhea]"\570=hNGgu3#D
%oWSl%TQb_HW8cCdj6%e6X#HYhp2>F!Q;>-kr"Q\9^lP'=io8=SC?bA1R&Ub]2]+7t/Doa>X*WsRQ^/GDMt?M'7sCF6G9g'fDX4L`
%%4pB/lG?T^#SYPqBJ&)*Ri@tROVf[H3MKe+$6LfM`hL4s"MrNM083]H(d^.[pgS=);=CroPT1^[?]A'@OPXC@SUC&ZWYECoo9X,G
%r$gGu.iR]NC2c/_8_pCaG:Ia_JZ`)FMc8h^^Ru'[WkaD!H\H@rFC@Wt5lKm9/0#$/<-`+l4%galf#)hnk>KuloGcZ2;?0q1pP,?d
%LRj#54KcC$dJE30l>QQo]_Sr/PoDB#1!l+fR\%1JCt%r"LE&qtT=oU6&.%(<a'r7ihP!W\/;Qo'R8=D`BKGk=<_bUMG-5_b@d!!M
%=)>?mT?$MM8(&AYISr2r2X\3I]g4+?(PR%7M/+$=EO!P7m!#pojlP=%%1]$`7X!E%Im`&IX42(0O-&V]lrP_-rmUBCjQk:nD+^_X
%:G;1mKC&Sq9LGU);8Eapmn0/gNnmqPBWN:UQ?M^M!=_8q>h/8i%d;sE44&+-5HS_b`qFkg\^@Q4\cMXe[Y*6?Lq<MloV.Lr-3pmL
%B^dWG%4.H<SCPN2Q]#c:K6a`U]"PO\@U3kO4`7Gq0UT/ZWSX.F$Ls=r&/WbrWXI-R?C1RkQ\4tng:^.Hp&:]?oqS^W'OHrVIU$f'
%:$8GdTCgDK%mf@Ph94MN#QhWpqWXs3+#h-o#N\tK%_K_SP(QbpYC:Kl_>$=(\p4LsIP<g!>VF*[11R$]AdLOA6Uq.[.2t@&KB5hc
%c.R_EVAk]G8ptgI\.Gk)DdfRma+Om!;l<cW/fG2pqUNX<Z$KZ$=uq/j\:lBaXj)iliMZ8<k8Uns](>]6(oLALpF;Zu+(%<%Wa7<'
%_=H2=)#\Xpi.b$SL&JG>b*_8DS'Ae/Rp5";cU*`mgVr#+lcP[sp>2ddit8u]pY^5Z@JNU<>8tb\%k[V@l[oP?8IrO92l_!FPh&l<
%1WALufX-4O3VMkm4ks#Gb-W#e7e3g[%N=.4%+T]K5-:UqdBuH=I^g0C*paWr/,nLk2t,UFJ2bAT>6!&G?@4dO<BksQS`:3?qij4F
%FI!F^@YW'FNuen83HD^BEWk0I[8?(WS.2QjbFnbI>`r01p2+@0^4s/kdg0X^p+D`BQ_X1W,ABZ%_cQ+W-!t\tq.1KlIsI8-F!@GF
%++_c'H%U^XnY51\;Me`!q\t=P#HcPQ`q%mI`Bq5ML%t)DE&ON"2GT]0I:eQIr@/@g($gS0k>-*Rp$=8.,05`-jXos:c1gP3U[Apl
%EE=YtmT(i0[oN7rk55tHSs?c`g4,ElG2Id(`b)jZ@4(R1ic)S8WQR_-gf[luWQs)<,tch1bLeHk(>,VC#H>H/Y-RUV4tB)miJJi]
%X\[,QKu<K>Jc,AWp@oeAcjPq`D>;co/X?VP;/]4\/fp<C[bfka`6BL#oH/J-jX_D1bL62uA#6ig/ffq*!FG9d_sQa+o4!ZkfmC3`
%F\%UnTM'&F>*u(Bb/n'\Uh2C2ofER/Si3Oqc,Gok$'ejGP7G8q[Q_#uWI=cO>j+;a\QAaBn1d2)peZE_o@-D<aN0E,X`*Sjh3Vnq
%?CelJRT1"_K"r89n]\lP0ue^$d)-*tc7ddeJ"1<+P":V".Q^90B]%5nkgJF_;Le<Q:qaHl]9Bn-]YBZ#*FU9(@sa(jrVWS1iH]j-
%U\oT_V)o<rqsV]"YdCraJ55!]MgHH<b15OCDPp]'mrpFSjmK;mrA`TS;q9>/"Gf<-fa#6/G(tA?BIN9lh!;CQp=R=5h8MVJW3I6=
%dffH.+'\.+Lj&00qtSs-<p-P`lfk<s[-ZB/l":JD<=(VUs#:m.dd_V+5+l]2k3r*fNHA1X:\qKfV0(nsb>HN0jN5orqL#2iPXuUE
%?0DfKmIi2jR59^e?:V+b@!D>?&D-Gtb2Xj]bjG8)5[5V%7M`HoFcZuWi/&\?fB`s\7^e^I_$mT?-;7WgaKBL1[Dr;sN%]t[nARN$
%:oO-#-ahoVm<d<R9SqmE?:Tqol+MD?."55koVqp*Oo?KNh04mLr"+?Nh+iT_Z>DILc`P[IPpZlei2MT8)Oi;.-M77?c(!"X+$[`i
%8Bk'OnB#m]?[V_1ho:Z-4HG*+<WK"#bih[aTu:7\F0j/Wna2,1eg3N"mATimKk:fn"9AZ#,P0Qa+1FS^m4[Tc^<AP)lbdPrSND<p
%XgYDs<R1O[RD`Ss'@uk,7dfN)grKoe))F):\FPbL=)#mGLNLK$9#$6(eV;>do?lYkVq,TiF[Bk;Nt._Y`Edm.Omghn8X)2V&!C8d
%IrS4nmao3/e2nM<+D\T[iB@UtS:SZOE99cX`WKnVb]DAOhE0\!mWUc0i2ZUX;U<7W4YR^WRBrQm<Iu:5Ed78VbtQmOfFqD"NWPHo
%*UqU6;G/ZVjkSn;Gf7L@Yj+4[aP?9tR5</daFQTaW'&0"HJ\#L#.8BjL0>tfZ4"RA>]##LoM?,aEA4!ed7';h4,`HPGEhDZ'V>K"
%d*rXfFfj&^eQNtU0]dD`S:f,RXW<coDV.Alok(?qVlORCG3q@Th6>JrJUPrFAh^6Wj7'K<ANIZ"U=$YsJ4:b#?2$2C^,<uk3YreJ
%mJP`t\DD/sXuX%+D#cQ6UZMkH4Dt_\'!J`Jp<;;lD=./63CZ:]\X5CH4Oa:[\a&jVf,2J_-t/]D1q+1Eks,`5[8*LJG94m5:`YFX
%X<e]JEe[*.Nm<3N4'e*+j$E8FKlZ0EU#YOU5b65=KF^IDX`+RA^3^8@4e/E+!r"8$Q06q?hRlu/-%!sqa#Dm>H5)ZHGFp5Je_8jY
%_rAMscL("<rPd$Nr?Ldn^$+_[k1]7c0POO2r\&9[eWnA,22^7o1&MP?+?=NRW8o5&Qp=MG_(5cngu%qY`VJn6cKYVFRneXEch!1K
%"a"m@=Yki5gOJ<skO5McX<%lOrV'ZVMEI+O.N7kT<4M?`GIVToDZ2`t#K'ASDKL3?^k]]2^L#utmcu6JfK"XM5.Ok<4]g/O"lHP8
%ODB&i,Ocij,%&M(NsBh*\kBaQ3-dH@?^kfjMsJD?IXNJKoC==hKF_K5G.s<0:Hi+C;e-ub?D)d(Pg%2,9,(V+cDisY@h(]AO7Dm`
%nU5eI_QRLM67I2G(rM+36_7>9c_FkFg;:%MnjDOuN$!B87hH*p>CT&TWiK!)DPHVXDbqmsFSGeMYJoI)\UQpB.XS#,I$-S87_(i8
%EK\*3*UctMKd[>u%X6+p5l([86Zu(]5OOOsNPH4f!FuFEGsCuAQ4CDL[M65Cdgp<Xm,*;F_n[ZJMY6^FnKQAkB$4/JOF$fH`27k_
%YN(,R7cP8m?F2;C%^+>(F\`)aJ<&NBY`@P'+7XLK]ad[E2=BDs_>CUE09'2c]S@j>BCcF&"DJ4@k?44b4\dc_6Ke1rJ+f*9(<S'j
%:M(;9^Ad!.8t!ME3V[Y1XVPfnLVb24'[Q`$h?uB'RWmLSI)DOu+F"5'Ie-o2YCDhNb!Ar?)in+U=A-]W7u%LB2l'ROY];:8J\T6T
%s%Nsf%4[[3N$Jj)ht?UuQLKQQP1%s!-Aa?6WI4YB.?I)BWpp_^V6:i8AX^rmm_QEa/GJE(?bXqX^VG;I`!Qh4oS0lo[n),>-Wg'W
%G5;EhSC0hmnX\6>m),Inq&f8F/!S_RC7Z:hYdUg?H-6l1>cD[aPVI*X[\Nj8AH%qd8!jG@:Ha/(^8KZi7?oKN5i,A#U9aFucIAb/
%=<uVn;3Bn>?RhLFU'00"h1[0oonL*Rc!LeWaRm7,A`>M3)b44GI$?lAVh1-dfM,<DGj1S&Yd$C",68MapR;4^5q#H/WGqS&L5M5A
%J#I$j2bCt`I0D+W^2$Z(g[YT7lmEuVlLfRtU;'Gu.:t+o;k/=MTX_b&8.!,G3[MfEGEg&$O!m#4`)0-\Y>OO"F[tg_52nItqnYp^
%b%0d3.big0V/kHeN%1Wu-)u4M^Sf5j;1P[:r8ss3cL@,\BFau?,Oq+u%XU;3e8[A^Th^4!!Hm,B^Jj;#7m,=rY?Fp&n&%Y$rPZn/
%p&.&Y8?(@EQ:0Q"Ibms5(IFYW\'N@!VlO6VH?mXQ;K"e5#rN":2<l^Jq5&P/aXZu\Gkk!,ibZk0*VB>YraFd,(G,?6^@9lWb82[@
%BjY>^oAHC)HFlA$3Vn>9I)8CbmZW]!@Gbu!qpq)?p%EdD;<QP4HojFa<ULd<n">$skrZP[21<`I,MmY<H2?oD:"gDt%LjH7k!+:.
%qfD&ZfDgGr?Zlr^hg5_lq!ns-^>XorJAY&I/^a#K*sMR.55XK']_=)XM0#raB=Nug(P5o907WZ7rk4*C(Otl>j4[j$XuH<eF1U?q
%]H$;8:MrsRs2E$-_ValR6N4,Co_Eh]]oi?jp&*#5_)<uZiVu(l^A5gcr+j+"be=3Hn`"=,G#s)"d(>9uJ3^NV!m9p/D]mLG;Lr;6
%#mG'K4qTc3>mc.hpio#BR7pZa\#K'mTU5B0"C@*,Dh5aBpb+=k<0KDnmN2WHG(Nf9LHDb*/1ERHIIDuUHu*Ha31/AJcnFQDe[O#:
%SYO2RAER2ik&rf"ajn\mkMURIl/Q()q7(o6fbqLdIKc^K*Zke"Skap[i7B[(9>94iqLlBck2,]<(a`?"gPt.=e_iN6&WH/`Y>;4t
%@#od"K<NV<:%5c:R10'@,+#"]pbEFR4K#>KI(PjVm@Nb&L'in^5'5.6IgVb%B!S,Rp[BkYp\/hFH4`6Dd+@6mI:tCWAW[pd1Ab$1
%q4_,J77Bn*pHR_1\6R_#$6K;0$t"CS#K+$[]uTV@I<ZV./C7jN;J>hLTu-D2,ZTeo7&7`<9I+sD:.D7uV/bQA3I$EdeVfcVLEEN.
%H-]aR0Tk6g=buL1IUgc9nAZOb];=Cu[`/iP2(nA<4UqD_U7Iq>]4h5NG8hR8GAj4>TDP*[,kBZKZ1?4hCq&Qma%?m79C+WEqM\]$
%?&`;VhfpOBE?loA'Ao2\_o0Ier^*-W*$!#n&jJ>Fo!n63Da'3[nP8h3Ma'CEjnMo,E1-3D?ORR(SP1RXV%`YmrqQ4CdJ/+b8[O1U
%0(En-H'B-kce]:aYLdkO<k(.^MS]:)1A<]F@?QUnpbLMdg^>BSNE.Y,=o\Ipq<HaA.WKX_:WZC]+]\H@h5-S)$(&5@eaHCdN^E%*
%jK;:6_tcHaC\\3W<p3QIqW,Rj[pMdpFT7R=k\h<*ff9=JdKdZ07oIS1H/srFkg;molUPEP5#_Af^2#*5G3AT_ca*GA(n:=MJ$P'n
%?&-+N-EA]]oFh%JkRVZqdePgLnrX0[-p4lH'<+gk\k4*cI2ouD]^N-t__?IQ;N1/CHW#s/G@Ec8.N4]Dc^hk=+*3"<&0""bJoW=9
%KPId%,IC@nM"$dVV1mfO<"btR6<9>=LRM<oUs?r;Zh&OKru(eMJ!Ec*MVdouUdUe.1K1=126N`uL)if\US"JAIR7Iae@_%?C:0bj
%-l.('3jX/a^Gg0TMSGQh(&#1XU(i4HTlO=cgJ]/b"$l\Q?9B6Vn!p9('d!VG.pG_lT&5:epPXI$DV>OV5(@bO@^WLG.YYmS(T$QY
%maG`1ZodO"Q[<i,0C7eX+7FP(DiY-M4o%"Ap\T"0Yb0![MYih*;e5p<p\)+Hh[VL:LNS0k`2ekpB"ujaAr[hXK?X;e&Y_O&pc]*u
%'8b]kRlMO4Zd%If8[_]WQa3Ap:W]H%ePn.SEM;05G_aF)I1:pVlE34iF1n(;I/0c5R_O6`I*$kkH>eMahVb0%SGmpO)FJgM\1:PW
%L#M5-"/NosEKi!9fu$MRHnqZ;?i&;r.<+tS<0E]jj&3RY9U<8VDu%iNiTRqE$>//<"Z[JM[r/0mq*"T)WIulg`g,B0Ro27q*jdEq
%k%%_ndZOL.OHAq2#E`L9VV9jO4KAD#,,6'Y1lA]ha_4M_H7NWC?d[3OKD7k[F-)GN4q:aTO2Z_^V)kVHrn-7Wk1LiWT3o6RlYl1R
%9I&?*))q8mn(J4)NYGlmmutYn4R*pShm6ETGBb1O7h=M22]kO%L2%fAh@%;tMq0t:oMO8;NapN'gMpONh],u1ro<%B^"ZF@GuWI6
%QL8FpH/nd[2h0#'cjBU#o:I"5DuWT#-[1bQWr)@2.T_(HVbJJM"2gYC`5K`"3-@Q[A[r?9X=^?UB4&]]qK_?dfK-45cMH^Jc,fC+
%o%h;<jGWB]`CW,G]Qg![oNT_`[_GhPBr"tbkIK'mk[Jb_(@Lmap<d+,W;R>[Ip>GMk?+[(R=BX!?!b]9^<=nsVL0]@\fY"u=EsT*
%F`@!*M*2!;:9!"5GIf`7Hqj:j?`qjrLY;!OGl$V"WuO.4@:$t$Rg/V5GOoq.ceM"`+0"#ScMR;%D1@r;;V`UQHb6o1l$g*aH@FNF
%\bMEWpn$]aCJrb;GOJG:Fe<KXb4c-L7_4)^HAapSpk->:i\rZ<\@\.kp&YKtgKlei^?f.g:<n39#:HGJh6W</If$*mdN:pTB92WR
%U^b4(Sr];/a.L@;mn&JQIQX/bd\E_Dp.aV9YLCA[ao6GAq6RSXp;5@/+((J'=+;lUQQ5bBZ/!02o/q9t3Z.lnDqsUOmb:=uX8V`P
%(ldDJgW8g[Be+W'rdB0MMWon@np'YDIN/1\(qq'X&!Z#8e"C!h97ucTYkP\05*\>oJ'@MNn*2FpQ.nD#qRU/ep$Y^Z$%8.-bjG.7
%MVeAi9?G:O]uF@W]_+(-6^DWdLF;9Z&&Y"V<JP"3jbJfaH[4!0N@6FT4N\t^mEp>]WfA;c08_L"]O9FXU<L4bO_)aHea>pdh+!D7
%!;2e$4=4e=E9eV*):8CoD(3L\_LiQG[ehL7'g#%+Z>UBd5I(.CBptMS31YIA%sGMM`M?=V;6#8;s(oH*3Mi.s;`;(6-GE=hY-q+P
%;B\^`#<QJ##KlhL6H.j=iRu*VW60VSF"2W\<MC,u&PK%q4(0nY5SYNAr0SKH_<abr521J+E!;Yn_79ES-5@:A+(>/5Y2)>&km8Tm
%Rf.V]G[/QPP]90qm9M%h5M(:p4M&5'9@oHS7:e]us2[V"dPm_35.>!h:7%gC-YGlZp)p0`#HH?cih<iim7^n)&!IljZIE7?iTT_Y
%?P=NNl/;;_Zmnb0E\N@DGqLtJ/*UrXoV4O=-h?bEr<o^=:2)U9-C&A9Z/=M?W"sj%a6G$h1ChI#&RTj^;ca(Cg]Y)oFPFFd_$$,)
%@[S\\S1c.U)Tu.SYOg+B;5!cbNBZfTGC2:57S60mMEb1OA\L-K3Hi[EfQ7g6A%lrs:#2c(Q<5o%WXbd5/=^a5OklrHU[ITHAM\)+
%0:qhLXQ?Bjq3"$,a_&(@?J3F2X@M+<"im=Pcd6FVdGI;H&FKeKDWddh!](d_Y0bibRo)V(5i-odX@MA6[rg`+E,)pa?Y,$Pp$=Nm
%O3Xhm93;'VLUNt4lA,;"*J@XlgIJ]4UIN>'>NB%f3KSZUgl=&p_41AK_UbRd)/[le:rn;dr.S,K,bkEhouk?PZ-mmHD>2B=!uj^(
%h[?Qaf9GBqGDV5fgJOfsbB[bb.\Rg;el%XX3#rrBO*Ul%mHX'mDDg]=Pj'k[UC(ZgUHMM_?7t."ckV6u[N*h!H'JGD?Yn2+<4^NF
%<p$1:hAE_FBCL=KZl?DC=5sg.lVX^)54fh\3``$8hG!k;X>Y#F&N14sp6aaP<C\Xu%P!31YP76J.Dar@d=kG5cTb?kQ&qo3Q[<su
%h6Ru!oLjh7b+7@e-2K%D<NJZD@E-$6hfS9rFF6O^2NN0u)rb[(D*4G3[*>O.$2XQ`iZk3n3OF7GNS=!oc#k:J3GLYJrG"FZq:k.$
%heH+7f(b^ah/3YqXFYc?mBe@R]m]3DLNT6VW9sJ^DaHo^gM_)B:&6X"-s;UWPUYMIST_W2UNW,Z"05:]6fYs(*T<u,"6<[SmZ'LF
%etX:9%)86gbZTsPIusFPUCqjY\D5KWH&T$H[F:knmpC4\;<?hkO32SYAJd<'4!,2m+WTe9?FnaSgZKb-ie^n^p7c(s2O"O"N,(SP
%+/8!^NZ)8d4SKr46)K*lNdVahJ$^?hIY.INW0;&AZrRNeImb<bcs[EC9JJ^L[k\YXR[fFr_e:%T+>I/>EFKh$]cs13C6iQZ9RJQY
%jGtD(W*CHNC`#YON(1KEAp`RR[!B3Wr:A5KNU)gs)[dbPJi7B?1hhQGn)sN*6Buc@]mJ/.EX9'RnEqZ@C+t.k3G#qYG#.!\1#2T2
%I>W+[c'O#?%:C90Z(e+*4b#ReVPg04geVQH*m!KAhf$60.=#)SOA6;6\$iK`D"R)1romYU/nB:.".JH"ZbbrtgXcsGhc\P0BtsJL
%C\ng#C&/nJ24Fej/QgbCNRap[TjPe2H7S^'qk6/aHti3$If91k"uM5Bm8@c#Ip+tJh!(^bqkpp"oY0Rh!GE!*G>c6MooI5:Y\*cS
%ct3Z`[SL>!Y<aIUB@d,1EOm[Q5-;/=k0!D^j*1P$ciIfG.X5nO[<k&=c6)_OD4fD4XH.?$>+T1*OgNC!6B*Vd8#NC_LNcHg@i)''
%XS0#ggbV*I@4iV$dC`b;[qHmG<L'\XB!68MrDPn/VAY(mi&"J.7#U\9kb^>kTc\GAM>a:hDj>[c_0BH;!ORfD<2-O;^bYo!^ctEg
%X[:!"B1;`>$#EBDOOjd(N#enA7N8RU<gYYiOcKt=T-Q8P_!L7g7`Nc.Ln1L`6X[RkW%)p8Itthf]_WkmOD77um*1K<J*MHs*s"Rg
%/#,7l0X,HnW3JMZp!dSQdI1u_5AptAJ::n?F)<ugLnkR$G#Z'DEdVad.L%drMEY2sQg['$8*/&!\l%SL_RXR6VdRk9+*Hq"HTmpY
%aq9:b!'0WipmNeDqIpd(d]jf-+M?%SNf#68VT!pjdrNjC\?d'\e$WP`Y;57"\q"d.@TqEEMPe@^or*4:dWSTaW`KZt[`]tCMX@@@
%Ug+c1oi[]C:HiJSJ_"#pqWZ0je&^A&f=,NWdJnPp^1s+j9q<_fVS\gWI2_E"^qt$]0qGpi:;IJ"0*KXicL7'ur/ENs'0OT83V<5D
%/=)7@s($lCV[L`qJ/epTRMeTgL9iMMUlUI4$[e%-A<c@R$(+huN'hZ-*i1T\;`o/:8,EraqU%bTb4Tk0q/g"aqa7cJ_.-"Q?m54:
%>hYVE3AVNoRd7"7CL=qeWd8:O:sVlah)^+j6.B$:U/M&k(4jJqFYGoa@bHeCN-a^:F^\p<r'AQ>e/JZoEuHG3[W>>hke@[:n55\b
%Aa+iXHcP2A,_0O>It`U`n-`(55MFmme,>O+"jDl5;'&b/rj_CT\W8Sp3E%K<d6CiDe96PE'=XM+:]m/AD>^Y*<$uqT]@*lPm>Zr<
%4t:H`H,9=4`#SDJc":PbWo!`d;\4gD0@0r`l$=?WRWAL[(L+CMl79`paFtfb/qi1XV0Z3$mOu'7Ng+Gm7X>nHB=pYC2pm12W%oQ4
%nD0@B&@S!%]Gt#QB])hf[$Ke+8Pg`tmREedlY*i=NgW"B40m)i\8;'%a:6_N7SmTcB/Yr&`Or;<q'6j-:ga=eb:lWeLIAWg[qr#i
%Ts]-AS&C7#R[D>e,R>'r.TuA2:41.T!hl%ff[p6p'l,,L(,i/$T@j,WK4YB`]LUO\AurQfX7=c1OT;/7C-\t397;Jk/OP%Ohpn@Z
%DYfcGMi$JdS(K8g0m0H6d0&$3\D2&[<UC<5l.l0LL`iogjG-YsD6^S4l"jP7\\W#-<Qg51Wr93Y13:BH1MN[$ZnmJSM(NVg;q5%7
%Ok&)<U'9$faCAF#_-*$[\\"OukVtL77nI:&aVKE.,"u_ujjk]V4=aE-<?p+%'N9OrBRA$8Z,<pqft*18Cn>@iELP?U(Jq#@YNsHA
%cdNpb!Ri)./-8PnE3]`XHhb;7FUq3_@Ol\':VPE"#Ydj"Ds-#I_ClHSVQON.gf8[d3#akN!mO0m>7tWDUQ#<!aPE-eg/*iJ&(5.-
%\t*@_q9`0C/Yb>XQE_4Om!)^mlAbA-I1qLI-I597[lO"1>l=l>RaY2/dfRE&!6R'V_kd@?0V&^D%^$,2b]kJ6m0sA%XJ)@sXYeVa
%fn5WZOSFf:/'r_l0)P]Nj'a]4X`K2a&>6Qg!0cXgZ]V#d2=u1O=Q,0QX]a><C34Rc*^?-<a`b`'Us9J\T+2G&bKeBIo*Cci`!eh+
%&\Y\=FDPJW--!:pF]q^d`1,:n5:=4H?beHJkY?:`&De,Mc5^!'_(r+-EeQ<a!%]n4,2a91^8O1Ga;Yf`g1gC*#8gLSoX[B>h/0c`
%V$U)gNiV#"+#]uXqJ<b'2f<-pZDR6t08Cp"fb(hJ7VHmR8aK\I)5N50?8iP0V&?c+Mm@<!!:p!;FZS#HNa*;&N&1$@F*uMtb.WeP
%5SIoc>_?aDem9?DCso4OY#_lm,:(I^s,<,p]WSeP^r[AoaRIBUZQp!RlO/;f"Xh]!*Fm;6/&7OjRO`40]RqQ.0K&_D[8$jdkQ*q0
%VI4@7(tJ!.+&TA(mVY8o0E+Ic27m9pZ`WH2"8L<B43l;0a[K49Yni=([O$X_dDCN@C_36W7H7!uM`<@"J`]SCN<OmC/@qkf4`$Ks
%iCZb;N&&c:46X`mZE5-U796)5"W@cccPe_0C+_cl./@Zkg7+OhnZEEp$IPs`IPYKPU/C-:!3oEFq;W2AoIa/(_QV80U!/e@hpj_)
%Aj]m.R$\m#0#OBFGeAbj9_`AX)r*Pg1$AZ.8M<P+P;<@fQg)SO'Wl\L.o7!%XW-FG]at=oniE,$KpKCiU5\dqLSm*:ehP+\7SU6\
%Z>#lI'Bg8%jsM[B/D1cWc[tP@]s5[*,DESQr-457BR8;M?-qAh]8[&X"n"8i`,oV@>3\Ng@$CJ1L8JSB3i[I,XgP^/c?Tr6D2c*7
%9\aJB"UZ:(95ump/c_BM!U^0*&FSZ]e(d$*kAI:\kh=DgU:@!DLPSj@&=s&W;O/#-gb^NC>DHqh#c+lrU?.M3Eui(@>4AQPD\f&%
%Pqop)V!a']bqq?E-uKVF^?Nig]ga?QX#B&g?bh<>?^rKC=EUGp)\3pd]oL&ph](?5;pNlBliDH9eG=<T[R<XR=V[f?X:eo37lH\-
%P1,i]1t`(k*VFPrDm"OBF+0RAI"W6Sbjl?p96d*P6VQ3?55'A:[Q+TLNP_a>c"[3E<l35se%EcBbG>VdUD$P?[C<n$CB(0%RgucJ
%7jdVQ26fV3>"8Cu'5OD=[C(MN`E"su+hXZ4j6a#`4^&4`PDO(@O8"Q0BDcW26pj$>$Fl5=/?a>6L[Fs,0i?V4>P-:Ld1>lVFCe,+
%F%b4KSR3tP"?X+8Xut+B(FDn-k)%aH%8b^%Uoc[oPm1mg].3qRgF7&SiP@fRVWACAXGP.PVM`Iu0g&-mWgL/coMT9@>I]"UF3%8(
%Gt<oN:<YnR5bMhZ#%riLrUC(jHa,Mji?+E=%sGnqFrQ2UEM``_,]A-F]>0#<6gq_@!GY^0Q?6a_(X!RG4O$HQ(<4#4V:&i9!\P];
%I9RU2g*UJJq<[mA8pm8fj&qFS.Zro^Y_]Kq<&pRl/K[RRhaBJsF"O#@frSN*k?Q3..C\W0o/YFnD&Gt_="i`XY3"CnPqK4EcKAHU
%#K(ATSBna3Dp)+k\8jU%F"JK^bsokOS87q"0!KnI^;Y9l>!C4#=MLBP3<=I]m^ZdeT.'fp,f6[32C6RXWAkj;7YT1&&r@GWHElUD
%>1Rb8:<ip#ELo8U;R]X\kI3)*OO=@Z94m#4'i]>\n4eaQ!61b0'gZDO86LIX%]?G^R46]5DG^Mm>3)sUpVS%%dYLQhj12i@XKp+A
%db?]XDof/P=FPsFpOfI3cKOJ4"MEcb;Wbd;b(+\WFLfbXF8_].ik6ehc4ZCZn@!/YjBfYufSNCGWE,Tg9Pj;nLqD?(K@kgg\\)C#
%M2;U^')n_to%%2TbV-4r\9'75><9O;b)F3C]6-8@==BMVZ3ZbHNI?84fh.YU[#LbWFtOJM[s<_*["JZr1$I)!J)/K-$_uoc[WIeR
%b8J>.>MA9,o/()?:gWHoHbL`J)G"L2S#q;[i8p&7i5*fQE&81A(s#(.7g34;D6+]^F>4Fq03aJqD>[@U:2%(XVV'K7rj`?\ASMSL
%cLj,FK9+3i7a>Z/!o?Qj([(GQ\!p<6mZH'u7bkH"-1cSR["P?WdHbM?;L@9<Of9\J;X7S^2`DC<lUiP#*I;cWd;b`04M6Qb\Kpc"
%YtS*8cC.">/R2QgBPs_*3)4:U1,:B;.9q!.`]U8iF8:ht2&GB!bZjF/p,81MDKU<kJJg(g%"'[kG[TtWr:=;hjBA^4D.E:tCX$B#
%>30eKlp9Aig_b`f#<HJg>&udJA\R!DQL*id<nqoqT(Zotfl@*E[WCI1DBQ>EnuQY'H\f1sle9@#9[!^,j@\qHYCT%I6$bXp0=U)/
%?DYb!(:&@jOVR*I&DEr`b1.;=.a,,Sij.D1`)al2V5G=F_RJ.GQD4>=""W(alY53@[>Zc[UkB]XTs92$[2D(\fo79'Ar14>kJV\;
%PNIO?.YV*LHfJAta);5_m^9Q"dkZ5fP)J1dYI_(7`WFV*]JoM+]JjnD___Fan_S591tqaH]Gr!*2t`.U-UAj5%Fd%+]f4LSG45*C
%*kaLc4Itcrf(Rs.*?=P5[ds\B\*BWgIlnJP@DSV!p6J9LfpWqQ2(O[2?;,%-,2I2gNHJ6s\$Q5n\83\XG@%d07LU6EmN5a)Kf?%:
%KT;s><hoQ47S(GVdc%SM2qN^?0!G\WAm7@j^*jY\P!imY&jQ8(#gZ-f$+`TkA&T'FpOkf`'Ld]"3lS0)1TKEt3H_Iq1Znh2QijYZ
%C>``cTaOB4B4%()[r4B>P-8&WB,Q]GEk9Lrk,jPU*\6hEe9Gf(162P`(Q7lc8;;8gbVS>j\p(MbDXQ(Bl/IS#l;htpgR$3eF(:J\
%`dE?6lU8Bdk&#B(1M-O-4O`.\Mt8i4R:dFM>+E'6>R1`&2Gj10nntGjOuePmRhL/'8F!%oCt_*CH[E^=2U3)r`h8Z^%U32^\QGt5
%SobZR=/@N%-:le?Ye,+dR=__IHA%Q+^!ukXKM%%Bg=Ch`I#<(12nG)X*Vtc-g,C);Z0c@?Dp8d<E\44n-e`?V6=Ol&8ql[AkJXmA
%WfAdr2k[/e2fdD&kp<S8':3h%6:NbCj4]W^Ujol&H&Bo1*ICfaB3d5=d^ERBhAk73pnGq>9AgT1DI(2uHO(!BL<IE[Ni0"&E3`2>
%pV*bh(!6/sI='#OQKKIFb7,3.hYqDe8/?R*8<GISX_jk)(->^78/?PT.$Cu"kh<_/m*b/I=B#238appu@@GSR_L`i44Li5?V=q&t
%P\1bIpS7ba.*lpP2ID\-f*0q<r3_FQ(4l1O']jVE4Z?6&2e/D=dos@3c]D['lLL5ob4D8\WaR*Q^9UfYQTP/[\<(c?$EPdcib*0g
%R3Fid]s.n??uMX^)0="`S9i_j\+O$q)ULN/Dp^!-a98K=o5[0fIiA'g&JtDN;[d>"=j^(ul!)muHp"==cH-pld>QaiVJ,ilD@k&L
%hl<=9hL3NGoN/1DJ_XPm,'-Z-V'_mFjWZ3ta;+3@lgcHjYDF(g@NkPL//D+m]QW7]3#,1MT*q5pbsc1p$?IVGgS8ZQ0=-j<djKHh
%2&H//Fs!2DHG?k*<8fF?ZUauH'u4*8?(q"W1*p1ob3gkhp;MK*'7%oAe-G/G^M6*_NG?2c/KGeV7Q$OgiU,F,$Qi)cBKiN=G:L47
%P.%.*p3+4;MZ#rXs&]-1[4h7>gc-%aI5r&>rENU[NXEZ,&"haNm#(b5SI-<3YO"b2+5^&\UM_[=;],;lG44ff4^C<$TNc8\nju4C
%ZkWpM2r4/V-%C:*U"pKp*BS;92UsoDLSBKg3i1cWhksVm3h6JAe#2nc]]UF2]o\b6')_9]#I<IU:+oE+ea"2+Nd#gJHC1"b3E_kW
%n!MM1g@]bmMQu$$2G\,-lh)#=j@P._qeT:;Q#e:LpH4q.LYGi<Wi,GoGjF.dBBj5lTJOi)V0Has_aQ(dKt=s;R[2.a$EeHuFFhlG
%8Xg32Z>qq.82o(3QckaiH*pS^fjJ6\eJ.]!m=kuFX>KI8WkQ$\4tHZc(:ij]UP4,N`G&>#]%G`6$N$p18nN'=CL4D@@@pP"*s-;s
%KmbJ`]9b&7Za/[d#ec)3^8\'[=7shK^r?`YXPu?SB!['*4tGrfLpbJCp=VoT2d=pI<Rn!NCE"klZVl'JT?Th5qlFtneh=7R@@oPC
%)lrhD>jdSTTs2i_o$pu4RkF'6g;>N6_9M9^p<E>N+[pC7Kmd!-D,'=Z2cnYp+]uC6_EP$#^.eUP<EWQ6BO2)D]E)m:_EP$#5.t(Q
%:gotr<SrD3F8`s>Wt(('.iTr(Z`<;sW`WE1Yg5qF[Pr2-0'o'O0TW!SJ[Vi#5-%tpamNK5Yg9>Lce\<%Ko"pg+59'[>(qC%,qYYF
%^JnX6EDCC0ig+_LXO0MELu!M"/9U*>K,JgiG)`E_MQgH/p4LO(Ge1l?$8%TA3BZ0XkNT,Tf3A0cJnbqI?([oq"KR*R1i_&(b_H0Y
%>]7)jBCGD4,38"I!^Em]VD`Ykl4a(YK?D(peYY?01ReKeoSb*ZKH='Qbf84EatiXpa^jB4b0Z[2jIcl?\BU>Rr6H9pk550Z:VkC1
%s3h'ejfCuHbPs\M3U1Ber^VM$HN0VXRQgVDHbJT0YBBZ5/u-VKr]fkJ;DsmAR@G__Z<NX0r"#X%qu)$@q79o3kP8r+@:T6ccYSNm
%1!,oMdi9<5Mjq0SES&9eNO@78\*t[6ep_0.RQeda7ZZ6YUo&'i\u)TT=m:t0,\j5d8*dMn^%Cqtml4$Z>Ui=i,2j.8jJ`F*@nBVd
%_&kG0N+d?b@:t)&[t%?KjD2TG=g:fJj[,,A;QZTN:V"g.;QZTN01k6M3UMJ-DPdtdV(4M78U]'Jeh6S@^$'%#2='neOaVu8Ed(&l
%kT3Ll%`s]2qjoJ'@DHecRlfI<HF'_sfeV-*H7=)iq0HIcHJan]ne4/O00DR"Df".,'rnp'6l.G)X:&;)n:FdLen,8!bf;at10_50
%*b0,Dc35*/>j_mD:-8ZLh/5,-.ed-t(Lf!s6=HKMMB/f>-RMpTD;Z65[3J`^?UJMYNf<VoIMn9]iB[agXbpSU&rP>3)"keR2ai]B
%p\o$3<:@Bi]mhLu4'_`nR?An[QJclXT1=3L\bFFFWkRo7IrjAnk3B]maiO>8596UQe'YH:[tUi"]_]t.iOS<gIn"%V<,^o6?`/8N
%SC2[F<r63L8=f=gdr'Ze<do.X#/+lRg@t<mA:'g*SmJIG);fK/b?K;uZ/5"a"%Dh.96(+P?)/\u7MZKog<ocjQ0No]17.4Yel'&D
%rnoA[NgZ!P=5TpnnHF54LFk$R9t>nJkj`E`6E13uSZss;c;r1pY)iul""UeR\Ls/YK3_W+ILJL5HA4NTk(Po<I%<a"I=!A\p0`6I
%>3?O+<&RG:IcOa)V)LNL<JmqY8>YK`-Df,LkXSN?[Yi'a*QD3)\"QbbU+DKZ*8A9OP'+5SkD7HMHHWMD]%bMfVeT@\eZlRm?&%#S
%PDg%`d3qd,#c=*o5]\T6A)6N=C5514Xo$4333<WpL8h_AE$l,A18%WZb#Bb,g:Q)<7;9OO$`Wu6ao>U104eYV(]-E-0bHTL:XhGC
%X4tc1)p7qJWZXWhYhn>$(Mebg^uOdLIT/[GhUp`RSEN+?`iJ@P`LDlfA_r_V)eE@h3;Rtm1Ua(,'fp)2Kdcd"dTNA]0QE(pA%,3e
%LdTI:e>iP[AMkqGUL$Z=cqhC0>tl,TW0'.Rlmq\I+XoD!B6SEoU<?(eHh1rM,8Y@4L9G5mKnqumJ_\nIDlpPqE/-Y14kNcsh)gR!
%%>[Kb1#N"TlG'bF<N[334jBan=cKGYo+3`rZu(@fQclLgEGG[O1d:f4Q%]-*pJY,[[a`_o6W:-YHg$WALo0bbg;VK)PHr3%VkqH2
%*T!:k0oPd.#h,N#I5R49:7!pW'j6'f&2Ap'8kW`.DE2(i[dRI.[GX``X$>$e=X%k/ISN?/`4<#'WP+ngX2Z[PY:jWK$\%"['":Q-
%RYuJ&$(!9;3d8b_oj/^&20$eT&%:W^EA#A+T!?Ef#AgfL+]8<M9FdHT*OMB'FW/p'F'=AhX\gV5O9;p:h>B5Hc>(g2aMV:CbQOf3
%M&KMuGr*0KF`.aP`#W,9Y&j;jbnBrf_u`",QP:BC)qfhrCqqWN=#M)5Z][Oiq*XVPrFt@f`4tc`F-#sZh8r7F8eSh/Y.HPQ^>0\c
%CKWN,KJ%O,S\:hn=@?oGc$gTlkdn&k9=e2-d>)NQ,J`"t#Q8EeLI&+Q&L1EO]Hj9LL&YH"8/TDmZ\*Ln3kHp>!2HHU/.?ZXDYfn%
%%\",>SuNh=Wk;>1.69XS[65O?.e\".:<1%o;:Q-)Z7ciXDkHVB:0jk"eNmS1[A=YJrg6#s9@P9!?N?th9(P;.p#^W2['tm/OWmrp
%c/pA:'p`QkH`dZ3f4q%VJE@IF>nUhRG=!sfbX;B\*bYp]bdJ;UneVaMnn-F86p&ZL/fAiOP!m25*9n,KWqpHVM-fK[/cF&Q9+l+2
%@%eXh9']`V,gjk!SiWAX;QZ688b?2I\<m9&<(WfcOIE$/OsPsN=CP-gk[I,qPp@tl8Zu*VQrBoh\1YtJ$B:GHT3YL]LsRcn@nU'-
%\E.[;`We(H,cfVF7AUK\'cOqWs4q7?MjF!bE`o);\)!L>($]'ls5@OC1U6Z2?<4S/5^<Nukb)"@l$,2<C5!$+]q9&IeqJmcZ9QOe
%%S`??X'^,8m!mis0?7De_F(rSKf>(q<VMlRiHD5dpBqM&$NRXoE2jY`n8KWFT'M\Nkf@hY$P,tc]]llBXnfAB)t3sahKHE:A3nn+
%3KY'uW7<L_ZrroBgYlE!=K.J1din'1^<WQ-4ES=)E6HFi'OECSF@K+$A6=m/*dXg[gq\W!;ZKs%lms:OWYZ^;hf`\2V_*>UiUZ)M
%)_/kZhfe2r,Og0@iOYE=n\RY3pCsc9Omd\Pi>`"`G-m\H1g8=C>^0rI`Pfl8K3l`-Gj(Yf[q0th`:=]c3`j?q6P6cW0snt/&"U$@
%1hMBRX`r`t*h&"r*STq@0%AqG_F+8UMmj]fq.q$L]Zh66Y$N0YZ$K=m4Z?D^iGdQ1;I%$%_S[\g.9uP_6Xqe3_Mptu=Rj8G<C5Rn
%>^0r69?J\]\GV&9cF4g3WCMNAJ)R*%IC#=L&!n]*gDE(+gihn8Vg5lCE-50/W='6-D`cIf4kJu?KoA-^\6^dMoR9Tp=r/7*HEfT8
%E3V*/`=!3ID28A!qPk>Q3h+r+.Ik)O/j-LGp$B+S#8;<l$P/enT<3T*<sLfoGj+t5WV%l+S/4\!Pm3^_WiKKOkhM(rT$9kD*a8:n
%F^M>9d:KiWE7#3!:Xmd=e^qD%d(*-5'T-#k_F%rpfSnLbHf:ZtN6PmlRDdhE(EPVAp\MR+lbZ#%lX!AYCL)0u!h._ob@N=hoO*#`
%ike&YAYn^"Gj'P0+W4l*(ER0.D`^o3?oDu_Tf#c9`b5XTD;rE"kD50'[.Q(7S5%5UT=L+s@s-b(F(@UU7P/NAqF/!LD27!=3k\h9
%kYS'Jgic>^m#nZ9("Z3dU=n6Ug`,A5&UmqD*Kp>4*t'seq]!3gQ?ADrXAZkiGBmcnL\g=3<E2d5.r5i6&':G(D!4ji=e%eNfO1p)
%N^k=;r'l7)WDg'kirGX])G"TVXQlM]8""uT*WDp6O#KFt)njcPREr$fRS>:N:4,JsL#2r;HTf[OJ,]j"Fk_9&i6t%G+Rf;pK1F2D
%1Z<Q)\WMOjs!SshY*+e*L_:2ur'TFZd)nPC+,Q>&(XL.=D`dmp'"H.UpsOrdiiFk*J*p`bq9O+?r;CsqrU,Vbhr6A5H(5<I\8YI'
%H+>ppM#=s^DtosZk;:k!;JMY7?(AC'AF(p=Z*1q0fH(jOd?R%n5Z_85lZ?,8SrH2M8pE1Y0+Z)%40]=6N.q8UafI,b,.=+9>UI!K
%`A]Baqac^d[m,*>TAm=l-\cs!h<Vt*-3&3N6rMDbaAfM5Sr7j2i_D>&402Z&Ma.C\4:.$;>_$j"lW^k8H9Ul.Y:hY^mnp(tAGK:8
%YPLJUW$a-7X\[,?WPA4i5K8AdUMj$R8`_H=(HZ`sq$DL3q(ZXU6PC?Ri_GBBi]YNsX\)CF"e`ZjXFQEFGD^mHlcSf6\R2_rXe&gT
%a2KE5/iD=_k>L?<h2:26S<P[Jg`8ZJ4&c)o?esj[,1Tb_:&B.gYBn0$R#)7tXKCjEj`V06&Qr37lfW5WDd6W*a3*eM)Ld8AT6quj
%PW5iBi\Ei56qf*l2$mc5_u4+X8Z.5P8EJ2IJI*!^1OqpjL9FL>PTp;!3>fWbrAaT[@dRb1?]3%jCR%kqbT=mQDiKdBi]DXTE:)S6
%M20sUaZS,(1a;d/b+pt%6R/IXE#<ql4\4cYge#hu#:]V(@I[>^%&8/M/c9'h_f8ZU>:\L$G'"_U5Bu:^Ae1'cl:7]eaO)CZ!_b1C
%iU?k8L=uSE0X^6brc5%-]`/m;pn#LU-BA0VX`6,SMhkmIjtX-e@$;:*:44jXf`Qo_.AORrg*3)&(N8a;&`tgLH7"e)^d\r!g'/?S
%fW^KSDAS)]`UN\+iA:9Jc(@,4*0qKJeG1(9B*!_GgpM&WEMoU/?mE)%hMPTBonTPnjRdD@en%.7S-5Fah.ugDJ,U7/04-r7d't]?
%NlGo0mk.[hn"gj^e[a_;89Vi8Q<q^+1OQ`,9_X8nSJG'P?DaS&E!`*0]6IW;-)2p,_Bfd(5PU))IH&ceb.D")I(`:R?gf)YmU)mS
%Q!V<b4mhH:LNAi7q`^Ru25bq#)?e3DK3s=-%6fI0C9Fu!8*NQ0VV0;eST7tl!.E>`J>lf4+fn+FeKrK?B[/rh]pB>Ban_l?0[`A!
%G2Z6[15qimfdE)mK42-a8$>&SbZi<T[.;T3'MC/@;Q5nAg9N&:-XQrRgeWiaV+E;D\+`_0O5*uE8bAGB?5;ao)GgEf036X<P:>\F
%(/->pc:XdPn;$,KQ\F<TYg-o2V?m+VP_fmVnDL6OqWj\/iP@])N`D=Zfi,.[pX_18JZhH4kmH.Ae\<s?"Z'1N]]Z=c#e<[![!r\&
%P6bcRfBjEIV?hdj0SlL5n;B+IXHSlTP7hR3lTF?%k@b;&C:c.[&u6!YF5T>[MmkS+r-T^UWJ^=@.t(ng0Os5WI_!YXRSa&,+MUWR
%nCa2O@]*2Ue_#/ER(t/*g$ZA2p.aMppK]Lo=[3k(>q8)InkWYo%LX1(<mqZ9THg2H!J"]M"WoF!)0Ye_WA7Mkc@Df")EWYVk_')!
%ROZk^IV@rD8`LL/>[[:`5OH,&ibo+:R&S<CW42^j,jMa"3h4urCO7j2djoeZObt,c.objiRDV5m.aD(TeZY+Kj"qKhh]5OM<9T9u
%Sbds5oUJP7\IAI_U>e[E2(C@"`Mkii&42A]XZ+mbWitsgA3Yh>=hE"kHs?E;.@5_TjiY8lnf[]*RsN/`6YDtf`U67+FDrJUJI@3\
%\\2f*3E%)MViEC(:ScijIc<ig`:KqHpI]B-"((rgIVPWQjZ[#BkF8Z%L\Zi@+"4gmNmFSKg6h/[9(^TXGA/nf^\/<]K.T5EZ`=O`
%>'^JbrFrE:lGM$lmu_MCf0!@.pB\>mkKS`*iY"_M6g@MWg3FB&hai?U=o=$D07$n"/i6@Eh+C6M*gRiC<cK1,COS@RIWUQl52JeN
%]=2_QV<$=IW;*[uh7!Hu/_%?/LapZU<<)Dq>,HEa/XoF8NHJ8@0u>uZ;a)]*Z+24*'kC&TrTV5+>e9k2?5S@5VrcXS4-TQdVt-[:
%YP3%5oZ7fsfGYAK?[;s6FuDYW$mk^QrbKL?[K8DsiuR:8oVlU#AH%21;G3YYTtRVcC$?,kVM80cYC;2%B6Q/J\\SdHR83F('BU0X
%jf-XhIufKe%M+]"*hopqJ-UoCE`,$3Ru0^V^j2]/30fR=G?!Z%'3OYrkq0VEA,@fP.q%iNGf,.Oc(cnq$J@(hJhuuI7W1NSg5Z&`
%b5LCQ.R/a62pZ$L3j[KZT@<%=?GZ#W_2)tVYcffsSZ9.FqDqs(K33GtD-&mNTf'j@%[<8'40LIG_lV,E4g91J3gZ,ubDUN&K_u>`
%N(K(58ZXMYi%7(DCaF$R[9sik\7Q+j.tlJSi,BORL!N=a7pkRlRTYbWK>e7UBk=fJbfYK;/0npFXLlbt5!Gc`q8^tE8gt\mlM:3N
%3`N\n9Y1%gpi)aM\JXb#8)8Vmq!?lALae]aN@'4n__HLE;>`c#?ki&.]k68X,X6%MTkq)No!(p878&ba^66E+1US>I^gIuWj)XMb
%qCR3E^)ZN(/#*-HT6c]MCM/DV9Y&a_--On9^,H+Ah*13'FGm(UY[HuV#DQ6**BF`3h;\/EL;A:g/L]K3HIFUga4`gq98omV:,;;b
%>=p7:/qLi_RG;\.E43]`RV$!/<2md:Vc%h;WjW<^^]0"(,92JLgZe@1-"63Vi'anS?(9WJ!k#aEh'*#6)c/#S2$u2SE_/((=e]+0
%XWmC`U1O^a*F32'F+-be?>JuC*q[P&gn8R,s(;(,PJW\5V$oB-Zp#eFrA-7Zd:YjBE*1?G0R+FAV0)Im8-*-Ck2=Ql!<e2XR!d`E
%92,%EU/VXh&=jp*;NkoA?P?U7&3oQ'pe"W9_4OW:jF7g,s$kj)YQE<84g<h?D-@VA7?q@Sp:JJolJ<@J*u9cg60S3SPa"LEPI,HJ
%[JuTTc%;nKdMFK\#PSi=#%fY"9[aXRA&jR#h>im<HmduN.i6'[j6nl--.Ha'ea!,6=:Fr9e93LA=V7;Y.rpusF>YXY;f4DGTuh'#
%+`VE[2`97$db0Kcp;k_6^bi?)N-Hm@B.FU_'i4G4dn:8*&su/PCdfNm7\PCY0YH#bkH#Q-?cef-dM[s<^gej;*R7Ne:VK07n"8n?
%2+5F@5.]tK43"MJ0)>Xs"%>X"?=XJdPd)Z--0e*8e'>g5N*p^eH7P89!,]%`ND7@t<j:ft0nM:-fi9WgeN=aN9@k_/:V,[,7aBL-
%=Mnk=Ac/Af\#UZ9nY]NggD`%k:_6_6/CknHL\M#$f!R@69@'`PIAcqjJ@*2$(&_k(_boM>b?kj.V5!baUq&'eA]Ug<pWM;HTlBOm
%\qtYH3ll,Ll%lUXGO\R()7f$,<\S?Xd.=(.-?Ys:4L]D+j_mi9*>H4?D_?Y)R.HEjP#dq"4(&m[HPX<>?aN#b4DB'$;rsU&:V1Vs
%R5FN*g>^o=5IP6tYM9XPUQtain&#6uP>BOuX>6[H]@4FHhJ^hAOoJeUr_0m$Dg-[S9_@6/51t7FrU?HIrp55rs*"-ZC"NCHmSCC/
%J%YYW*Vr"WIBrMoDuSMI\!AtBgjMo_T4DG9dpbP2r2a$A!N(nC/h,2M+^u!bbY\>n5`(XtKR$`&HRP8@N-U/d0n5Yu^"E=0q.Zic
%56gdj&_XbI\=C`C'Pk[G5!PYhq:YcurZ+`1Gh=bFn^g#$eS1qtCUUBM"8Rr1msNA2fTn#<k1:W9NUQ)ea?ed_@d\k1\=*)2Y'-HQ
%8-)CT[[ikr?+CKNOfs@):n[V(Au^'Y1a5;?r/BAIeUAJ4@[R0Cbd%>C(+^k=27`KrG.CI,G8]c[gjfW$2(_*Rq,tB*BUU!Do'bD<
%1W'qu;mF(6ffI,uqX?ekGRmd+YW#Y5:TCMYp5]QORi-LcL&6G->GgTDX&rqp1a#cgB*u"1$:gplB_(2Qi0:ssSQC\u`b]T`H7\Eh
%5>sQ&3#ru^p8E`q*;J#'#WSB+mY#%iF-$`^deI'sg"*8H%Y$F^)&u>ZE5h!ZYQY)p3t6s&+S;s6Z]HNSSeB&;N_8QFAJ#Da+Cpo:
%=<iA`UbMs<Xdes2ZrD=GiI`^;W+W`A\1BKB)D\OHN#i7cbp,;\#gL"%lHIr5;eq&,l9gVp2B<>CE9]g(A8.#pOK2.=Ra!=HJZ6W=
%R"n7H>emWU4_Ck(&G>P[R?1`h+io1s?72GoNO]QPTF=`aTU#mC<M.NVI>%:'3Mge0+u]m]UTbe&^%Gh!5`_Bb17PLo'@5Y`>gPh+
%JI:_je$]ec,g=W*j/-N`NCI>74ntWB&N)psNh4GS\!j.>'OD,0XVN\49e/cY\:C=kS>.H;/"QEIfB[i(gI:6Q867DNZcRC%$^__"
%KP:q^MHFja%F_u,-=VaE/uYej[)a69<hoVL/Jg6QRWBQ39O!g#2,&qP0l=m`fO<L9$.Bl-5N4t";k_Y,WR_)3^,'pD2$rMIQrnHj
%S$nNr(kL^0X;KnoP;!=-<G4V^"ZMQrl%HF3M+(J\d_m>VrcgoOZkh8%g9gi>;-0nTS8sTTPSt9T7cMA)`e+1m+_3/b/]'[c(X1/r
%:*uFfX9S@C:f,1(!aiE=&(Z7gF9K"#Z#Fh]l:;T;b.MFgPu_s+Rh]Ve_P@ALX7*<LZPHOmOr)+S-VN1AMZ%M.8StK]S#MfAF/uKL
%b4+BC<4hd$31QR(84VhRR.=O/Du(T3_p"aXU$Q3"qQ,k04j__/Ae+)$"&n:q.<s8O?-U>Zj"7[3lqTck[??o0(1>c5_/G)XX_t8p
%U_1^Y5k\OuIH=FHU1bR;'P#c@Y$$K,#Dou[J;9AfB)Th[P-cG-6,D//)HdXSJ"H/qQ.dm1"u%m`)Uq#-U=Bp$%`iP)0L]St>-$=M
%)QG!)TC3sW`Ab'M/:>Th=_G=H->)J=3%][0TDes6SY_j'0h"4k4)3/(?VG6"?-Kd0]+;k>WA2V(jM*>[^D41r'>7?72=buL/)n2a
%[CEQC<;hRF&*'u*l2fL/Jq`&G;bO=aN38!5WTS&\@QT84GuX`A\E7PENrk]TG<e?#%[=PkrE"QsLur"_[$&L%(t^,p6lnVVq69^p
%(F\]edi%f1fl['E67Y-GnB0)B9a1K1qHUI/WD-Z?f83D*[hh`QIYV*l]e]Vmi*30eSSEp1WIM9bF(W^c]fGcuAi$thOj['nGs86W
%.c8fel6kE3-a+NcD-@CKT8n0p<Vn>\m#3T<HeBo5hmfC8pt6C4K:LqX@g"6ki;692'NhAHf&bZLK&/r*B$mLtB`DMgkEbW\c2Xg-
%'-1@\p\>mII82fp$:UROs)2N8+%]M#D4-/DWO'@ck>?<mrqcW-%4ldKl^q/UJ72X=:Ht,loCKrms"c,&4T9alIo!N%gSt*rn_cYJ
%9$`P_:X@d8/X9J-iH%=q$lUMAT3u-t/ul>EV&,shW;4d5H_hOiP;+FE7(Cr7W>n@',aK>7WDugc\+_i*@n9M&^[sP;4dDrKIDhkX
%f(-=#*K.KE^TR;D&!\7$P,"XY`frodAS:`6q=sHhSnfb7N*P,L9NHVFq0%%*HVKj0/"MU@IX_;oA,OSa4Irq(de/e[4G@!1Yn'g9
%M:g:c3;o\HbPtnG/t;=-$>$Z3,:2$RQe',18^Ji-g#f$q=kU8:GNG!l['1%*Fi(BYr2l+0eKD]bf:Lut5#%;5h=2H#CphP*R$s'i
%iR%4A07QMerakS($XU6)J48OJi+kBNSneql5PlaKWda>qT@F#sAnC?=,fA4OV<I([VnX>GLJ[3\KSUFgAd;'foES.0>KfdeC*`H_
%?M@fK"?Csn#TUMAL,k9-"F'(!SYgD.5>@o!Q^jV,E3)8uUH2*/W;ssp[Hj2\O/&Y1LFdnFAP=oY]:E*fV_PSZJ&n:TmkcboQ2h4U
%j)7NV>RRfm*M(W'\'g(XX>S+$<]fI'qM(DQ&/C-JUlN_*kZb_sGmG?$dkfW],]/T5d%dH%I"VYUH8Z.35aSIpF?/ZJT(e#-`h`Om
%]i]&o,\C6XEF.ooKsbtZY0SO+NB9(?C&K_U1,e^t1mf:t&_EXt;;4T(pMs;.c^(^E<'H8;>ag7MqJ<FjVn\]_2$pi6l.p-IfN7.Y
%Q\'C``H;[&]M9(m2gbRMW#g0"hZ'.G4l\4,OfPtEOVY%t8;l<%O4aVAVcCrBo5I894WG`AP,I_!Ol5Seq(*+qkO2e*YIZ0Jie)'*
%fCXUL)aX@#lHPR'/iNqP(MnT_bqj)M0=mFsVsc?iG&\HNpCfQ]'(1kiTer$C1)*_7b/c8rk@4\?`rsWsnQFk=TQI[='.-D[&G[<:
%!-]/nKef43YWO7GFqBcOM@HPJH)`AaVBgW]UFkPA&=_B_G@M$_,ua9HPG"q&dc'83Wj3mM#Ht]tr"!5,Wl?i)SKQWN19-$g;ifk5
%2Q[m.Gbc56>*C3=,P%UFeNU<!?s[,5NOD*'1R6j0-CNaOX&\sH@4/j"LYAQ?@T1U\:t^-V+@Q\:7X!'dB@^dE=JRgN,h$;dL6fD:
%Wd[e#O%ra^N"n9SeLk8R$'hD$mKW#7V6NrnH$WLk/2X$"B=cAS1f8a1<99i\%\M1UR"^_rFYWZqn_Oc+_U#aq'Rds5D\c/c017)=
%EQ!rq6NuN=AQ'\U@N\mHa/7Lndc!m9;kG_,X\OMH5>bAKFR6&-F:%<DRV/7S1A,X0FcrBinK-7eQ9b?Z6t[We:qka[+9Q":h^ufe
%QdjJ1a`!!$8b/@^2tn:hn#(ofrPS^7otjBW?*9t=0\+GogLo[m3t.3nD;pkdDm+.RK*tg(\*V&JD*rIficQRar]DOeh2)o:D=(R"
%B#OA?5To%H.1hBg:No_[W8V8M*73&QJO;8eMd'eO^H_S)-'5$)&0$?Y`NegjQ>6Vi1uE2n6i>LaL`Hff!(k&Q7VnN&RU[EOk<@Z_
%M!Bmm<pW27&U%[c_`1L_,ei[l&k;FsWK3j1Kof;NOd"BKqadj$&:4<QL^:=$DPHO/cpp4(4ImEQLmgBW+r-fpos"O0'9Co?iH7ZM
%$*+P8TG]FN57_fW8ImoBP3iig(U`80D$SO+G5"0;&(%\[FB,Z(ZdV*+s.%BS^1sEV(b6>l[gRS)]-gdoaqni0B>tQ'9QOB=C'=fP
%`jCsVU+Cl`.8)38Xs),uT3;t&FI8Agf3O1q"7hCb.<_7RW0in1grZ_=miN9SC*040^_nK8\hKeV]Q!uWlQOa#GnLFYOBuKgfVAbZ
%J74skK_;)1=>@'`#P@:JRN+?p->RKmNigjD/Mh&.Q&BJT\i^$m'TD89>-[g*rueHfp/'*@:%3g?@YLN(\=&P*e\/4ON-Bn%n]i\"
%Mo0dLRlcI.o6"4X`Z*[f8\ARNS&9J0GS2Y:!kZ?p2g>u(e>r$1jP1JGinaIOWQU9l`/C\$4,eB9-h43%ZTa=,[^hTHB6cqh\V6A5
%M3k<`jtPX$T#?PI0(go)4D<W:]:h!=rD$H@W+e4O3X+U?:htYQ!,='C&'nD0m)3hM\8d]-`EX(@J@,Y+-bSo'I"aeUT;363a\c=q
%P#<R.R?KT:J#D/,-:ubBpE!,N#lj#g]B/nemYIupFI,jDg%KDq*pVA:rSaZ?jtOkI&R@SUb!\&_Z0A&')H2I$R&%m@Ahd)'%I%Cg
%k)c1F%o)CaS:s,$ZPB3YoJSr,*>[]#Dg9YDHp(;qTM$$]N>d-I:<'6&Cu4uXS]u%B^h>-fOb,=6qssKF52HT1n%_`^c]c*eBd2=K
%SmUBi%t"?R$p:!3B!uFEJ+^"@Cbr0*bmFN"&b+C>:kHUPd<P53HJ;,(qsYP3b+gS7T?<3AV>&$Pqp0J)oY9-po%V^B@I'SnS_hq(
%\qcVq\&0mYqB"A.ZNplJhW'R`8S;9-d+_Y%K7D!5FH?E`#=JE8#(MdKY=L4^Mst([&Rf]O;,S6bB-g"YH!]XT0/Pd)Gug"A5ucbY
%Kk>Qq@ME!R30@'>#t'hPB&ES(^X_;la#6;'s3EU<IC+FOV73)*i#rNSn6AjhTML]&iL+P6V3<Yf19r>"/B>id?]/c/6:k<VA6G&u
%L8P'N%%e5:DOVGqUaSmjP+9IfZgWrZs6si&'PO)hrpd=-%%$%K+,`n%#7E>>hIb(:0e%/p%khrC$X:4sN$+$M^gg+T(e"S[c/uJ(
%!5$e4Z1)Q19'1,!_$I`8Fk]]-gY^f]p@kdq>!mT5+!LiorBFKp/LGb'@2'%I^neFC]VL2B,['%oSsCYWC.1n7ZLF9LA9_73B=rce
%+tH6=&Z9TEYm$c\AI_qcd%e*&Zgat]/(9!pJke'X#=&n98We7NJ]oBRT&lke`,/ULOqVO0[E&=J!-a['b_YhsKa]QoU`e#<9p((i
%.V&cm+hFY/;GpJ5+eg+&]Y%Ogr.u[m9@7r.-"/)R?W#ka]jMfu+ZZ/I1uNW26YIUYZEXR`M)BIm80X(HE*%!EU`2c]:<(oqbXCNg
%Ba[D"$*VX-@0@;kkC#&<Jp;,uJ<78`-HS!4TH=F>Nr94rY+=5]`?\-$2@uOd^r*%s!g49C!V6s*8HAj6IIJEh,QjJjZ@_r`.tVXV
%>39t6iL(r8JLkgm,72f,a<UqOeo)`[,iO/b_2BjPni$1Bo:*/gC?'![AtG8VO_/-\d0:6Iff%i+=F`&4*]0$_=V>_g5[=.CZWpB?
%Biu2t+>aQ4ih9S:e*)dV#efanpAcpF8-2C4\k0]lZlm/!Tq-__"=0=9=gnrCJ.WM;>&]E#g^,nQ5cDR$Qm9X#*6_938W%%%Y^a$s
%lN#6\8Y-0o&4OBW=l'?.=(Fa\"!#+@(81i'6D0ugfNs-k3'BrDnMF!05WB)Rff252@0Tbd!+*OOJR<C:Jlt\IXhdZG5lh;Tgl;KB
%OqDZK.tB8b>3(jj**nY-!Y]'_ImaDbUMS+o&pBeo/W9q#+Tg'/2?Ot@gBn1a^^?B``6_1UiE.4OUj*K;`8bZQ'#<FN@#>?pClIJ,
%3<3-DaUDSV^ltFFJ5^t6$;?$4'^/faOg4J)')3ZPO;2Gr%N,O1+-72V:gaPa&-,>b!$>>U<XqHNAO*bEfE)hA]FS2mYQSV_"2_oS
%!&kad&JS*.@H4Qq$NgEQ^l2t2Q:f(*0PdI0;,lI,UV`KiB^m3,3#715#XeuG/IDP%PG2qOYUeLBSq_5m,:!ls4>//m6B:/k[*0`:
%M)<!\0pgi1UM-#'@#l`*"M=eqpr4G$:lQ%enPMEj*6o))!FPsV"3Ze!*@Ga:Z[3MpZl^-BL0f!^AVMmp"dh+UJ2/;icoWj"a8hM,
%cr,C+Fi]6Sb`_pd3=o;spEZYRJPlNO!cS4$@<KZ;TR6o$"H_US_$)8Z9?%`tH(ZV%O8rm[&Rd]JN1\!<$uenUD]&S-S+W_c"Bq<m
%):/Op+O.ds!+/.>"piPsJEJa?)#,HU$tQJRjN5S+!73KY5C=($aXVu&!0mXEkh$XBN[,*oBSAp1[_O=/^bVJ`70n)V[V_/cJ53rf
%"AFJSnTq>F?ijdAjAH,VX6i?A`urJ9BIeTKS3=d.rnZ8043R?9q)o#q(Eqj2QFVl@GHpEcSQ.O4L(2]m6ELFJ,?bI&DklFsCeW_Q
%5us[n4qd0YJTB;YCfNGj*!+n#<7NK^YVZo$1pBaV<GN9UTTm_EL>"Bj/;2Vhf'7GorZ#=1XuG_cC]g?CW*]bU'+;DW=uWB^^efQt
%8B;l!<`?S[(W!95,^J>Bnr1k5$@qmOC_8RbiHS5V#/2XpJt<[-K)hW52osf@a^/e7dRdnFp4.N,M0<OZ#k/j#/]+#C\8;l[+>Gp)
%LP\[&<JZ1G1s9^I1Y>47LfI<mBVH!=-O$CV\0LM`Cl^nV0q`.pJ.K3o=L&P>P\_gcO2M*)H.<\ji"qKSn.Bt:"sT]g,ohgJE<lu:
%8"jD.!Z7@2Kn9?q#!>C%E&>aW_=08*+Vk)SK+EKn5kR6_,:=?u6l#dP.;UL9I\"<6f/Nc1?-!%k@LFV91+HJbL]K>r;;DhHI*plF
%3Dn;8!8A!J*#+4AJ.r0;Sp*J(QrGCt'j1SJbg0m2Tm7eFMo)46-DST!EOtQi<'LPb>#?,b,J[M+HW>]/JK0f9bp\*UOJ$oUW-Z6W
%?l@<VJZ[?D1[YWY#2'fY-K_W98cgXo\n*Q.aEnmsJL)i52RJQf\u_Xo4!t:^PX1.ie;]S:9e`;\6bt/^rhUacEj?17C#I'_^4999
%W"U_-gULaL#X%<-&j2J1YnLD^c5=@8=1)(^&L^8_hncr06A3'=GSA@MJ='bf@Za18Me=<NE.nM(<OMX)*V\V\(C"OSIfoMM8TtL)
%"`TPc"53k>9_3e2*3.%1."AfG!)qi9*oFuN"KN3S![*bW"sB[+AOiS"e<h+i^S%n^[t.'^hgh[P&aAouJ0"0Q<If0f37J"lde$e0
%8'+/`#!i9E_?g")JOLb9P@9YOpHYR+Q$&r)+9MNDs'Ps@$p&lrklF,C2Qt?[LnRtE#Sn]p6aR+?'`lrYQp.P"T[eX[JoCg`!_f*&
%3@[Ts5+jY".iPW3Pu\+N074")##oc5%143ifFI3@YX5).o*?c&E57?6iq$SIJ?U;M.;[[(5s8NHbq(sYr!',H9CNb)&+VJp%+9_t
%b8]p]X<FA>*b>eimET/u<fGTBoRKOpYX3X#c4O'#%P8;o]\&%m4+Jt>b$C.nqB.s=C]O[5OZnS0,^fu5hkN'eC/_X2-(_1W%n;__
%U#jC&F#Wu$9h-SKe(nh_2gq5*B7"FKein;cmYf#pQPi6\8qKO2B?6O88,*pYhRP1g(;M8=ZW4bUSi5!O)a8n^"*NhX9_0t+JlPf=
%?0&?(N;'+t\1/J)F;?O0O0.F&60IgS=1kdcG8BA05;"]mG6[GgcNEr>6W_W?97nP1b;=`:@s<6R#R2>8'_Y_id);"]>:f8DQ2blP
%P!S%cQW_ZKYV3A&AC)S]ifi<JRUO;oeV*']i,dZB!/P![EFB6*++k&3YQdDf(Pma8[K'e>bT>]WW6<!3#X"din5Z%!Kl'(hiinCF
%s0*<j1_-mcdG+t!#D3=eJ-)^VEj,^\>_j0rAld:`!n%[?h15.:[jBBuoM>OWP/I8b\PW?1ciV]og,MSDL;Xi_Cbk5s\<W`2R"e-M
%JPD#]J@7]dKGL54W3ZTTON.TV%NI[jBU1OL%g#Jk(<fOm\2GO>,hshL`j^Lc"ln>[r,D<OXZ.A++?.ZN&3).U,.<#MiO+6`FeM`q
%YRs/*+>I73BS/$uh?Lk5LhG@l6fT+h^pF:*5ap9F+fXat^uQA`#N#_?9M@l_)mfMIdK7LBZiJN^YQYT+@%<u7TE<;XZm>6AA'tno
%+H:%G_U++W'2Y9VH8._\#eJY6A5'c=(5tg8:'6KkjI!JZ1j4QK!&d05#@$]'@[mdg(:Fcf<c%l+JfZEgeW5>7VPkf12.C7;!b]PC
%&dOpC=pW&0L_#"9nU\R8ScOkpH=%>o@!I8C+Ij]ClQ:P1`^YL2#^DpE%ZfEon9loT8./I8!V"_GNl,hKUgFAb'.Qf)5S-r?#9';b
%?b[)d9LU+a,iUBUrWE%s#8hb83F"#GaC,1t%jYWe8^_ni*RB7`n-HL-5rFJKmh:eA5W094#A?X1hpQk)Y^rGYZi\,(#eu$^XGKZ-
%KVMp"'\M%I&um"TJ9[2F5RSICa66>SR$XTP,NA7ooi:ko)M(jAC`+_"ABR@ZSKZ>]c"Hum+9s(]'o<[IK3#kS*O+/tKe'Ui5aNYs
%0hL:6P&VTKZrCie0Hc*p`oL2F/O4g((,0MZ&BH0S3"V%#L`rK\e-5tG`#H;haacnlOqK2a<+<j<D^_t=Sd92[a0>dtZ$Ob_$XbC8
%Jl+L6MgdI`4rT9;5cU#cJ3u'G6m($m6qIbe+kctT#\a<UPL]gP"GFuRfKqhZ<uhQc?Y@EC7YojH#W2m$!1&=PS-]6")p!sV6<?-p
%Ga5XD<IfY/!Tq*.*.gjD/[B4Y50t"[j=p9<g,2(Pjuc4>+=bA*.LW8Meiu\q`n3L/TO:7?J3&VAm7UW5OMVb7$=.<gS$626Tue:*
%CTDF6dHs0aL/T$G&t+`4W=1oC"0Aa.Mih^e!88!B/^-lj>4=pB_ZUfF)e[HDVNV$,+1hQ-$AjrO.EUm=)q[Jg!X]%`.CMKcO:e9*
%`kW@k+DTpf@NeJ*,G6649o&^IZVZ/fkQ8T-"-EAtisJLTI5&<!>0*^[5td(M3IN+h=sRQa!Mu?/""\sW[9s0n+]'^MinBY,5'Lfd
%b="OFOJA]U!D?;I7OL6BL(OV2obgq6+5f=j<.p>8O$7dhQ":e=m0)(&`#<RqPX?&9NBf:5#\.7:dX-41$Pp9#a?^T00_05*+@0DY
%A=iG0Z0ZQTZq^57JG[KgNBgXdDEr=UN<=_O,4btH#![V<S>WM$Pf%SW<c'#%6nO*^S0:%IfEb#mTM'72c<X!_TG%[h#'CsB@S%9W
%RT1MH<eVZ1h1@C0l*1=E=&HdVUW4EMF<(C_T]?D,KGK).(u[8de^-WnaUHO_6j>s];Nd#tjRFT(/M$q9K+!P_(hPOD64gq?/!*RO
%DD6>Y+A3LNJ&Q.%,g8fNTk/f$,_ReI@7[+)E1iqe[ojVl'Qi@QFU9*V.ARL$oSGHJK0GtGnsC-P"$"ILW_Q"hOq9(T%A:\*Wd-`3
%#a0!+b]j33d/'(gUUH)?#U0l**4s&6P7^!O>HsuXg2@UPH`!bB\ml,!;0Q9\fTN'(Nt+_O$p?oGJ<M88\3h`5&r>(t/^.Z;>,W&8
%T8>\*rPXo.Wbm=E8ajShAQU%l11Yg+C_/<D+H`r6"T[1=O7>R<I[2\M[",>"E'P#I@F9PE#U1CCJZhDD$:jTN"u]1"[a<+6_m,=r
%1r()6dZ'ugW*`F*XT]qX$P7`\IO`u:<*OmlWJ+@jJn'J'8K'O?e\VFDCa6;q)`2F]P9_!l*_g=I-k'PO!j>$l!Br?XRN&M8,HrLd
%$^!.QU_"hK+hg#qU<4Du#'?rSOOStl?sHZ21?<irm%+M"A0Sok,?<-=;gN9j3%scN1_Kf9)*r=EZ+M6#:3.['!OA((0RBi4U@SOt
%J3r5B*l1:F5m/#nRI>c.LjmbI"cZJA$/.#Q5n^)\BN[P2g2169Ti2*Hc.puaI\=7V9cgm"[m</cNW#>Yi1=_Wjr@N:._)?8Gfc.g
%:Ub:=fl0RYE6T/<:H7kY<qR#pob-4h,uAE<2nR,3SKcoA&/B&<s+rur5_uZ9YS,lM%#bGRL2L?!a;c].R#M,MS4*enn(V:r7NiNL
%1_MMJ!?2l->pRBW-=IGEs25\'^P4?d0TOPo&*>K\)HdWBKLmn5M@?.7$[S1J8B4+.!9iJ2$WMP/XqA<"BEJf(aq\Rl]E@2EYQ>A;
%ciT#52@YeU:bY*K<(l.<'"5RqAUPXk;'9,;"j7SOQI#\toR8U%V4[lW)b($K**]A89!J2+J1a%$=>.Z0%)bqFYc'h7Qm4Es5QF2a
%0G2fZ-HoLW..V[!"!.a3Eg)Vf(m6>(mU>/*,]o[$ZiGJ[lQ-U(06+4UJ;,AW@5'&u`*@.X5ZL-`1UKDC/867FJsP%U;HV@6:pbI!
%b;+g_J:39YL,QEU^j=?@-gH:#fE*;.kilXr>VS!0K-pYO0UO[A,J-sT',glW9oZr#^i%["D9P2;%GDurBoX@mi7*kQdtZd=#+u9!
%d%N057q@S2"-$h""@FDg=(R.AQ:p5i"T6&;)-'r4L3PC[2Cr,\/];@DZW.r6MhZ!r`>1%=XTe/:TWX;"Z*R^_1^1RKKO.d-IFR=i
%UONC]!fkV8bOP]@UreM1eVGdkFI[ruQSj?qeQ\Cc]hB>Q'G26<aAkdB2C"Y+`1lu.>2]CD(8=!($sS7:62HZC'o8S-@X=JOLD0e=
%oF+#qITp7)<Z&KEnE?^&H&06:D"AY%1F,(o=kMkM\7^&rB8O,FRhXE6*+R+uaWa,M!aEc#.Z>4X(.AiJ3@tgTB!Rdd1J_MN-JXte
%+%`JmTQ@XpUeeS&G\UEgS#5DLD0jT4h)/QGY3\`r('Mj/iJ9ce8.CI_J6pTR!1ZiOC.+")&kip?;;saY#/g]B&mb[`RtP$#oo_ZQ
%O#c\uoGq$ML^qh%8@B8sB$'L5?!t_f$tcuAWbLZe6QgFYWd4jZ%biTYFb!c=$'%#*XpI5!\NaC5LHmq8!EEul,MQ:djKiuOR8u+%
%CM5=9gN]8+<eP=p5g:F;!SF&)K9WYm!F'6E:p.cpWfE`k^rJtpQ<)q_![a!K(RuiBkfp0F?rCAXYeW+5'^3-.0Ml["#8E,?E#;5S
%-kA,CYcJLBBXCUGAY-_)mFT5QXX_@,<km;3!gq52ESlSms5/aU=A7'ABaJs_$kPj80P[6dX[,d#$*pd;'F!e(k/1Y)5`j+?ZAe,^
%4l\(DOa&spJH#p"aYF(YOXt#%j!.Aj[js'2rfIu'L]HN^bRu*h"E[!d0[M*T:a0&\13CR:WLET?X:ptiTGm2AVAHS+1PIDKQGtqZ
%cWSFUAiZ$(/?@`([22,U=X(Du^^gS=1@-SZ(Nfsh)ja&C!34CtL,>P=iq+tu6(P`g9j]$">q@`lfNV`+1rCLk5tAp2_"-O$JDdk=
%<!.C;&W2+YR/;Jq,RMqq6'*NH$euG=>6a]H3<b3@cjE1R`.G&p`DtoRW+'I@!+E/I\j+P?/J'>WaQI++6.2/!8(*q6j28D0ibjr]
%A_]rNZSJVNk(@Yl;;aHcRIuVA2)LJh),!kL5Z`KF&]u60JJj(W-CHled'K+-KCMoSTVtUqN0ODl24S;9Dh6'&=nH+;@K6b^7M896
%*@f72Na]X3JJ0@a,+Mb5_9%RL+<"*`iXh9AWt3\_*oeD'77E\0l6]n6U%_W!0_#U*$"g8JJfSO0pbkr)$Q'&oK5jFK'S\_(AVucS
%^Mk\<bif%;'NbYtR:$(aLqtU#ROlZlqA_d?!$<T0"PRV%'1]p\J2S5E"-rt\jY5QrNHc#mfE/LRZf%_Ep&O_.rGsMENYK^tjH(@+
%)9l;XNl.AI(5)#fehphB&=*S-5eJ'FbELkNN6*=r)M+2F,bXi<auE'(F>(QhGY8*C(GT#EOP1%<"L5B:\Ll_LQu>M?$4'pon,Zhr
%Oc3^.L*gG_h'1f$8DtFuki!"*#XNu^&qd:T2?t8lA2T0$k]`09_8E"N%^lOE?tP_iR@3mf:^eS@!um79Z%&,e.L9.h$/-Of&m\Tn
%752FUJ!%VKQXVoTGm'1"@d^n3W+Lt1kh$.-'B>=I`%U+(ArDgSJg>lTVdSL$BK:Y_f>?/Xn-"h@$K;bXHOE&o`!2;pL(7DdKUR_6
%6<nu,PQdQ\PZ:b\5_UUJ80T7;Q-hE('#?%8Nqdi!F"qH%9jV<DM.jeW&<)@TU5$7\W\4HMi%PX5@h'k06'4,=<<<`^rm`\?##0AN
%\I1e.</[7VrJmgF=cad*J<L$Q"UnD]7\jQ4)$3X?J-uB;@8[keT0R/o-nK<>#&@6n3=qb@XQ4r3&;[m&-<mA0M'[K-XO^(u$VP]1
%%.;Q_<Cggj:e&5Fj<Q;4+ei/u<DcIY.B.l1M7=?n!>(-8L/Z&SOrC#><[/_Y(#>7E6PL4=<=ng@\k7L_0V"m&#U9'ba:p0mNlGNW
%.t,Xk@L@Pje33js+;2<=LdAA=P6eddd"&oH.hTJ&TZ3[4(CUu$(dY1;9J-Gj0K9ic`W@kYd4E*B8ke&m-D7uL>=BNh,'ols"sbc7
%S-hMT;->MC7K=nAm?At-3$.f8=;o&tJk%T38-Qp9!<\$H'HH6I,-l5sOX'J5i\<mHN<PdcCK-rc+?F`/U`(Z&X*Mni!`k6!2CR>n
%#(XOY72uC&pn]i7mkB'PZ#kL$>@(`P/D9%1ImR7$5tbmB1(ES,fQn$KKRdijQr7JsiRs*A=Wc!L=JR46#'?_S9sA<B_:YClZ</LV
%gkI)NJ1ZNZL$iDXn%^Yc.iGQA#ql=#=nRIK[t&on,>=gB+(!uHR?fs#d.2??!#GD<Z$Jo0f;aYC(gqEdJ8l+8D%8El[7Wta#KK5S
%&8>M`-XjUfj:V[EA;qH4.Pjp"W@XpS+<hu(`6;m+0I1iFg7Yb]Qm\bl5o0N)*j]9G\:_i[SB(f!74o$6Lq"!;obh9IAd&9n$8WD7
%bf)mNQa>+=0\$V+$"tJi[)kYb_)*g(4)c%H&-RW[KNUni58A;/dDY06M1e2(=ZC@IZ;_`rWXM.\WG:WX6JiNZK;^<)Kr@VMZtAA!
%dj4h-W(@JtO!ofsR#hU/MYNN/FB?E?=_%T$E.Nd#J=ts8ccH*\gC`8Q4RPFON.?LM6KFSmc2Wj81J*b)8!<OFncTZN_jX*S]'d=]
%p8K4&4sf0k2cVF]h=<?Q4ZqL#K+2Rq@i_$h_?\V!Mqa229q2oK@Qk/\KD$t0%%(-L6d',9HrT2Fdl`m#:Ni0TGgb[4TPR5#Vi_Ir
%^J?Ial=5#TKjM$ga4;6\#pA_90:9U:OR&]QakS*3S=U$!L*T9'1E^4*/fW*Ee2mVHiAMU)^^16b#KqKV<JVehO56\(Dmm([/X+I%
%/-9<%(5c;`f+iZ[_S;8Y3N:"1/?3<",-/$n[r#3?X'NrWa0odcA`F3e(\\=^N5WlIHNkU*(9p$tmEZ$0pJA8Um(:I8B>g*q;I`J1
%=/MuJ+]HjLlC*+frK[\&5K8S$CYMDOk90FlM#1\4r*r:r.NnaGSDWE/s2lKkA0BVXAt'5-p1+I$,*tlE\B2frZPIU30MR']m&ca!
%m9oLbT\qq^qj1@;_[j:]r:*=q:1@Dm%-]l[-EDB$M`LoE.hB+potG_o>:7-L#i6OKgG<PnXM$V6pIFS.A,=_iruu(-LE0SP@&k%/
%T,H&/lOIX,Hj#2YIO>FJQa(t.-tJC=r^%?c2qf56-f6HrHK]PtMgoU>E"#P#J9Dh,4;OMdZlg(7Qs%a(@qPG0rgDN(F':+Zc'R'3
%%Q)Da"kig54]ko(6*)*h@iUJ;O^aII1o""RH-6oV^9A.iVODS!Z&=;^Dnr;DC;VXEQ4'7Y$2g(/m)LrT=jTendE[[/2StC+IO=bf
%cOg^E5$_5ceDN@:$cO#efT?pQN"eq+9U_d8fVaqu?N^;2g2@]?h=%31>.P7X9p`,`a)8hEgB7pFJYrc/aG?YL$KDRtjHSGO'?Vlm
%HtcoH[e3<&@7GYL[o'K":tlVg0+=R$:`/[[ARVd'jkL4$Be2$l40o4#q7Wf_BbkPoj=hdS0I,AMs(]2(7^bdd/u-XLP^WV#V)CI/
%BKNOQZC$7476=]Rl;p&.bBdQ^F$Lg7if]N*[C3O^g%pV!3p\7*b">QN$dDl(.&@N$9hV'9/iF%@bf9S2g>.cF`3j5``RgG.V`ap)
%aJ&D0==PBm=7Qljs$/VSTBg]9#NhNC/G:1O-mVIKLodg7QU$Fo'b4X1%D`B<QR=4iOZiagZ*Gf*]BkRagX^#SIP^O'8KdGSM@#3f
%Of!+%IC?W/(!&`7oa:>u1g0`^7[>cQAS^F6ZN%=.XY<5/])=LbL!C]@N'qRp$_$[GeO?0W`\72&Q=gk;=8>5h;8ZYu"%=&0g7C"(
%S*Db<VIkX@A/&=hI*NY^"[#MkUPl.kf)G;GU$7GgD:)o,'YTs5.dImRk\TcPE'k"JL5]<%"1D4$q',A:$YIX-L#TRNH_=iq*M3I"
%erD((!M^E'pncAIZ^@_YcPJlKK+Zo?2j-gJ1&CbMgre>'[_ntl;(a+$9lh8>nZ"dk;mG4K-p.fGET0[]HGG@Lf`p*MT!d1,A%V`O
%"P+\/7a7Q\785lTqsN_#f/OV*IK[CfhBj#%6K5SjE2.$0>4h+cc$Hc3ZYkt.:1A+W$S/PKm6\<k(0MVQoVo7rm;S"_#'R<C/.sfh
%ruRI`/tPrXq\5ghQab#]S*(4Q%ob=J_BMr^fOdc+3iVk.7DL5'>t(A0`b9P@R0!k1aJ]]>Fq1+@_?53g5tIJ?hYE'B.gC0dFd4:E
%317Jhr]O8\R]W)6fCLbQc")[b0/E(&Ns99J:Pj\rcU#`,>DhM!DW(bD>TH2;aAm/:IpLZ<pq>rK:a^Y1HhlZR$mscTp>1]l,Ci,!
%'p0C](0/Is"u,6VOU7cmH7%4hp!rr?P^KdoKL;2FqtK6>=gqN_\&fiPloX#R\s]<i6c/uGis(t217u''Y-EQU#b)5HT.$XNI1>3F
%\qlt/N+"MHJjmo[4d.-&Mb\EF/5f#1(./XZ\:$PVQ_&BYpX$q!,(eCqA/`e,H?[\!/ch#!^8o?m4-Xf0$]AW-&)[_BVd2QT`\lQ[
%%t\<+IY5&U5,7Jb^RH`K!(ju:])`UHB$f3#=QntT&&:X*6!lo.<BUeInQGD>24t-2"2Zcc8B?=JKbEkZ@]%>#$3V-_;6hTFePKoY
%giW^TJ.[.J0*Af&N,7fM^C6-+FiAKgb[=G+=JkYT@$.f@[*kBPIL1qMrUO6J;Z2ek=^':91EW!^Z:C@P#0c$cd-R):9McF8^b<[B
%*l,([g]BjQ4ao"JMS@f7,68ZO5nDj>=<a9OCjk=2H$]JTI&bd,!jh=M>5.>QE0%d\3O3aTHPhrfNQqU'qA<\pPYl4FI6lr<U;l2:
%&@cnm%;kN9('GOX0M1CBIZcCLmZG?T('kA-.Na^Ke:+[@9j<XG:(C]UN-5osA3"$OD,V4=I]R?cq5"R;;qK)4[reU@b/VaPW$uhN
%c:f`Y%6;-2K"SVTY2(ZP$GaNa*)B:"-tG'aHfpJfj?p&ZqIPmlB[WI`Q\2N+^k-eU`5Nqaq#aSGG9d8+oXeWgfDZmZ!-4acA;Wqq
%Z+L)WF"Cfe\^*JgqB<cbrdiW/F$r`hj\gP1+t-c$e;JJp*\q/0,t*]7eFepR)ZVIY#uQLpLOM;E&q9dKn^/m=8+QCKJ?6XDnc\M=
%l>DiZ-G]c%3)_T=p1;X;"T\lEKk%tN$3`+d-up.Zqk.P3$CQ3="e<(88J-R\$pNq$Lt9F!bUVLBB\1c"`huTdf40)$L5/n/@#J+8
%.1BRdO?VkQ].s=qfT,aeqD!fLTQN1i$)<-7?Nt3^Pk;LI#nehl0pce^,3<,bH9Zjh!#&&le[_2cOIp>/P%m/a@P@;Lmb:Nf$iI=U
%\(t]<,/nf3d)Q_OgQ`_ZO8UCV!a&flK(la=B?<J(VF!)t%7a(DbjF09Ab1/2Q%X<r5/UncO[U<*Ik7Hl_c,J1H/m6^I!Xm>?76>\
%27L?_M";SrcD!6D`-&oh%qgg)X@.FK]Q]WrCkZIq8LDT4!N&%=-YSgSW^Co/LMD/'T\bQ"JXK5;8`E"(?XB\*a%E%_Q6aBqo$1]<
%NXtfcX2V*sS]bX>b67?RWUs3oUV,I+[O8-ljL2Jo@orNi:A2C2rh>\WVWmbpbA?'QHe#HLdJ2Jj%X/B'`qbft_%ir9`>H$H!7:PO
%4-O1$=JurKREoPg5]&=4/Y9sJDFP3Bmm`qgSd"Xf)k,[FpY-FOTX&udAE:Zoj;53RqZ2q4/DShe"/8TIc#0BSI[:Y:TGZnr"D0es
%OiTgn=gB0H15hTe!J>FC.5k^%k5g37HmV\*DChZ/Hnahl'=3t`+PI1C<JN=Qq,Km.L*8YKY:5'c>1fBLrn<^q<_(^6T`X"]-as9Z
%@q;8Z*$NARTk0h_U!5,5<<u)1N*>Ten\Q$!W#Ou0j6bcu=<)3d0:H`qa.D!60KqdS"+=l(T6:Yg[<r+X(`rdSf"^g`m>nm%,?W<i
%1CO(oaXr8I.<2IRaLQ_f9stDn&O\mh1=?ioCuOQU*CZ(GfXnMa-o>$"@"(YP=F!E\UB.qD=^;#5^+nmVSq)MsAWmrs;X#epE5Bh=
%[D]"*@o1ZZZ\Xub?B-f,h^eUI'Vft]I>=]VNdU'_MaMG/S,2BYd?bMgElQXJK+Q$R;YXW5bNd15+[LNFSX>PL<<%Enbp`B^d\Qd!
%13\Y+[Jn_nfq[VJWJ)fH!LsdNNiimDf_</KP;8=R>QR7N(kn`iKcPe1%.O$or9[fFRb%ZBZ-7fIV3,l[D)-bGNhoD\E1%f@9(*Pp
%mq/;Dn'ZGog$(B\0@O%j);'^dY1g$PHC<7B5<&]]!`JL:IPl3uPM;sYl4J`@;3_@2],'bIPP_3rr1^1'mnN9JgUfB>mtE8O2;@.f
%oI;+#PqI"-O4CH>Q7Oj-LE1%X4kshbrs=p46OhhT>s]V)KffA'FMilNK;=3/gk8kcB^JgH[uVR(n`Mfh?24WR'BjpDCX.?cP8`7X
%N'0kb$X-Dt25p1o`mL(*#S$d='OREmb>S;q<du>!E>R8YP.NYn-L$_jc*0C1>=6f)DG:tqcd,9_h+GnL>g@,5p=^ACs6WYsj&?]q
%29Eq(<>S3A'!t4(3IiWQ]jjQMoeV-T-&7,Vro@?5i=(q[$"m'McG2rrA2JfMRM/6:O3oe,)($kh/u*G(*#bKmYfK\>S2p#E/?0ep
%+OTgI=FbfpB1h+Uf.F0>3&gZ1:@VG9%<N'f_CrBKUmqbQ)OA@k$3*4So2/n]dN"n)K(_1qEAP2N?kdYaoX`%qoSIe*`]#Y_0`a1R
%><,Z*%Po1e$Vtj]V>:$d!/?W(6F$cmo&]!1DAH"]&pL,:TZ-:.DSmC%qgY(1\Gc8ndJYfWoSU(1ikI_Li=D]bLQNQ)>sU`F3ttg;
%ClF/l5X*;K#/p?sUC8r0ARI;*o_:\,h9$:hPST^5!s3d1e;%<Uqc&7^,$"B.TAFal>)\Y=U5:.&AAu>BU\Lm+a*[9>^1%5GJSYj]
%9??hZhj[&VV]8_%`$.J/VUYdca0tMk2$Q"7XGkP@g0scc$pb>"K)KW2/,(6MK6Vo=i"sunbdg-I[d*DflA7e+=56)L6uYAcb,`cQ
%!WaNeY':Or'=pT<a8fuZit/+bK6Yo6f8`_*\a>=QaBu!gT!n4F[[pTPd39`\5W;;+BAu(d$o?9n0qre<@=V;.&e#?Tfe_ca%GdJ/
%K+U4J*A2EVnqLbpq)F(>0t.P3_%$N+o9r$aGqr3VMD*TZ2(YmA9A?3U$jFSh#_8HKK<S.%'#@#CLaIsCO+W*ppp/N(__8j$$1&"(
%.6r(!a86hmC^o7s!@1KiRPk\&ij:KtB]nO1X/9<Gi\\82[9[b(J^Hr,3XiE9814ONN%DQ__+ZI=OQ/C-U[D37.,L+/=@-:pJr/>6
%IMmt%Ld;C9_qqO%+^gHNe,h1KjSY!:MCnV.0I84f+q_-XjVlW\>mm?YLng@WHf8spknjEMX'[e!0?j?u,I\Whc_=o\4kj2lH4I"&
%,ErI.1#N!gX+\D@lbitVPb>T/n0\9XaDgk*"mgAQTIR<Y:r"9a5a^Z66)2/qL6B65TGWjI0PV@oMi'`,\oJGTL>qrDnNMTXpN7?]
%`hJP+WE5FAjc(JqRRDnIba4+Y"9^&$;#()I5_])YMOLj$N4%_3p:F5SheqkqK6ZQlhRKVGbPRXDI,StP0)Lps#9l#oM?dLG06F4A
%"*HTeeMH`_rAU,QJNb&)j=u;+@*eX!1M_A9Q%AijP#^1D41nC*kn]?_qhs]4'gSR/7fneo!9%s="p=`D<_(`Q;hYrl3;^I&5nf/7
%3h>l,T9k'g9T#lifhO;0Q5D'6-BTb/k<eB+G,jdoAXf]4=D$#!Rb7%%hnZZoJ&.EO^^&et2N?qXD0(Hj;k*K-S7ZWt`@9k:k7(uu
%2Dn01U.e?:=I4UU?=DZen65&tgHH0gcsWeePk+U]9<@!^;usK(\O08NX$[QhX,pLBQDCY[/4060p,M!/_7<tBcsq&tZkBuI9:pmZ
%Q@=")>)#@"qmfY!@o`hM#Z6om"a4R63p2*c"onWYX^tW&66[bEpB-6U6IW:LQo@HRG!"7X=oi(H@DQdk7jGMu]oTslma!8^R+\FU
%^i`Pq3hP(nNOk`6GR,V$;fmQ/oqT2jqk,s1o!D?S0>J6$,F&e0IO.eY[$ji)Pbr3:MnLpGT^kGs0[U#SL[1$j+dppAB4XD=L3M.Y
%>;WVW!`^_*PM[&C.^4O*GQ.0_gmX.B_iY@+W![lZdgoL;RuVcPiYVpXMSN@ehA#$@WY@VT:nX,4'TuC^7$.!X$AHS6+6\TF+V"bU
%N@:lrNqamO'[;i#<SF0H6f"ba5@CC8+e\2E:aME61Jl!.&62WW['B!+F,lKh^j@3*7+Fp=&DIZXYg33(cUQ^q%boq%+-Fa)Y\,%=
%]o'USN8K)CppT_PDiY]CA:XF_70*5N+>l;<U/l.j(W@-59.fdr0`^<O"u'jU"\)Q$h7e,-%Yr0n13Am5h?8AM)#$,F\f36mXk1/Z
%\Q@)HKob'eku[<P`Mp+*H/@m0Mj8b-n3;/?6VYb7:r"g5'Xu7"Ih!.;*<N*?5GOtTRm1";jPtG/-45icD8ig9b_)TZI\:/tBEi`8
%D2\h)i(\#`ljXuuJA208!`"am?-"A0ZTLDGk'8DCAAT]G,>]Cm"F2g>"XZ@<E!1T.;-b'Hjp%>Y(r1XZ(3*IkcQq2JILA,*_EsRb
%G9pn#-3<,A@`[Ps2Q;JeGKkRKEulKJ`KFsWl*KY@B$`2b#r&Il`fSN%e(_deRUmX!Yq5%CE!Ad@aY8_X`?QrO$nY-_Qc?7,pJS'u
%r[tfg+C^uf]rG<6g$P!`h$g88/V7,6OY-?sg?bQhZBpa/;@sJ1Oe%RUpA.^2F7U4_;^_#?;BVRIc0O"o#98YUH/C"4Fg]TB\ba+r
%ASuDXFt;<p:$KJHle<eI07qu-Uq@5H?cD@b6N:p!n1"eh(,I%Jd0Os_mPu'UmjiFKFrC(dRJ"#<(&\l%0eH=?8rNl2iSELe>^A1-
%/i)W1,RmQ(08dLIi=PE@3u0tJ5mo8'f#*K^3:J%h/(F31:SIWJ7S,q'1l+Lc3HgS8F3KfO2A]5CfoH8EN.1k%5)7YFW6g%]S_sjI
%IL8^o@J`DCq^)a.7FT"7far$uYrIqtWXEboE:>?U-(Y>c@(VV@p6($3'G2DPLU?!=13(JiD?Z&9JoWH*CgGF1G=DQ(B3U/db,nuu
%n_SW-3X!SD_m,J>!LM:5RD3c.6-.V[QD/jol3S(.Q6h=iQ=\4Ed%[saZtNdh71"P9q!&p7:!ll^AViD5kfEk4ZISKDK(k3-OYEC>
%l%2Y)g@(*cC*>O<Bnl]K\6ZX/>\9?BMq+>WKkc5mU]u=6fu.S`AmPg)3_sUKkXfV6,Li1,!/ur>Aq50*+ONB]JBi5;Z?!&?ag%@8
%0f.;R.TP59I.+A\T5r6Wm;?,3.SYCo?*)g']59L%>PG1!8<G?Yfg!aN9pR,/_$kX?p'T4'GINQLE_n"e"E/[;AiHgXle^,q+$<$,
%T?hD'XR"KnH==:PHtoY:IcC;][qC!"Q2T22n$geaK5rGu<lN<Y(JUJSU<FcsDH0L8IYWQ-5UfBVl:tXm<*Be772tO;9V-CaB1(b:
%(/#65GmYHk$<jL6&ZBDk+=H4%6lSu[F:;Mfp\?Y>/1_@"@akEP'.C_A$,[&r(DJ'(=E+2;;\W+$jKd%oM$s]O9dW4A4@r)IFiG>i
%Z1=F\Vs3!-$r7XuO>:>Ung$lZ::2s+n#EL<oYh+l;Z`GZUU(\di5?:lkqY"7\.ciK?kQ]TP:AK^B[#CLneYO<XR$_e%FOf=XK1#h
%=Rt$NAX[!\[NH4SguLPI+mf#WUMqhYl*!ksBY=Ml8HF69-7AJ71"O(3eI9Ye>]N1U=8F+]F0U1XBHklbO!`qRZ4QqZEQO2A94R4o
%;8[&E_r@Gg5d_Cm3N?,gE\Zi/ho]o<bYK<K'dZCVRZY6pgIrBlMFN@7CENa?EdP=pX+d-D]L9EAbClNnK&f6U20AoGKsEd+fCV72
%HJ:2*#%Y^9kUSiE;CInHaBOP^01ENW>sb7\Z=6Er6>HTB>lBp`T]&o9P-XB%`NG(H@9Fc5eSdkQMiq$^6`i$'9")I$m?,1,R7*AG
%]]VTD,oY30F\(Z9V"8S3l%#\DWZlpQJ[Jpt[-DHN#KQ#m\TM,WWoDel?#7sYg[80LI_5(C^>kalHK3+*hXJbs&^<0pBEX+8<aeCk
%/n:$6j-?G025n^FB0mQ'7'eVMhrfWG:7/Uf(oO`i1no%_B+,\^^C7"d6I.\)'6t<1KC+(B,>)>4mq\tcf5\+e,EV!i1,>*^G(K@c
%Gn1&3@,3/uAOdBXdcHh9X'Jl!7;]l]1B+s_4Kb]Q9M>erM[8"=5P@=&7M_m'<c!?jF-+j/`Nqfu:u%d%r@UXYk->7a('"lM&/)5K
%;Y(f6AY>R'd9[1QB,qOe((J$;$\kZ_oOJCX1FMd%A0.`\jaC-B<BRL>Vc!a0c5<bXk^)PG5Au\hfYO9tJL9r(&Z?)qLjO:H9^$FI
%M6fYI'/67oV=d#o!7I?d\/lf6_*NlIMT/dPl?3e;r8ohLi,?_$YD8NFY57`]Lo?G:%hh^T(NH*Go<jKfhLjq@P(@=5iWO]Y(Fe"7
%VB',9#paR3-#CVerqaH1X5JM-r^G3dSo72G=kJIR"UA?[Rl1ddhI[ouR8BW\PW2V66?)U='tCH4-@M$=/5\I5F]Q0]&QGB=;K%`V
%#!W(p[niDX;\d8o.iG,4Sf/5V;MrBAQW@,Wfa&.T]mHaqR/lPZ*rif'E05Rt'!VPVU;D5cG]F/XVsV=EIerS:s"P(0'h7PbOaTX(
%%?,P)+J->>oV;/*2#S&(<Ad9@ppsO8BZNMM,E:q)$?WaaFLC$CV/adgn!D.g]S!KRhB$QG]2,hs[bH6!11#6tXoI+e^fR+lWHI'm
%mJ#C7QUArYkE<c3TuBM.@DHFu/U%Q9"A+QN14AXAaCNP&TC=4-@]<_lO6a(\ac2GTIGNa7OUHRNE67pn#CK])2iG*=:Fkj^RHpld
%ho\_LT9>4?`41jh?QI9BcLu[6n7-!kS5!M/%hN"p=gVMVr\FI@!Q_tm3>)d;fKV'GN$ebjmLrTP@J?dJS#Go"MsYD:pb<I*'.#R0
%n##72464"=qX%BWrDO]$8ec>,h1=]eg*<:Xl$S!HOC<rOBY[Y'57U#+<&@=LN9G$IYWB_<4rD=[LU]L9Y"lnYm9;D_"b6GYq6&8]
%4hk+]093mI;>S0rbQHBM*hsh;bSq2W9=JV]0^582dA;NuH$iMDq&M[^j;7RKj-lk#!gn>7o@)asj1Bg4nFnU*eN2>9VsTXp\[(Vd
%N]o6%n(&CDRm'"_!aQ,)5T,.B#rtsRdLl$n3J6kkMlmhAFN#]SRdEtsWSK1ZU)6inG!rakHnpX-'fFpD/Gi.\oOD;%+sPd]FoU3]
%gPFXh&H96!T/5b>N8iJgAR8=eCKDHoMRHg,.2H03UsfT%1^6rd5Pfr'rt\'*Q@sn'albHAOYhZ;^Zaj5lQ%\gZp"R?UseI;SWVW4
%^S[[E9mII7CW:]cpNHFabHB`Bqs=.^DVr'SN;q^kCuS.oMlJ>"1]J/!L)D@kQiMRR.:24<F'M'Z@tn[Idi/XH6d_IUhoHrIdS_@-
%b5@oX!?1k",itU/C<SN!^dMlm5RCH=;.DPi5G=mJoO*$)IaD6s(V\0E1mEE,n2FHEo%baOQ?"+G$sMc%oX74Rl&hkh\pTIH*N<bt
%UO3Rfl8b9e%rd0M;.Ic=F:IIM8oWKo'jW/HoA,oiK.cUaOA<8_r)So<eXHEM7U3^,XC(%eY>4uYUa[;jo3$a#*,0kqp6350s$3"C
%et<_]AHZ"/]4m1m_eRQ#6)g?<68>V_NhoE1A49)m'22[0!heD19("NPLCi^9XkPG;"D@W/jLQ88\7$k%+/*OHNGfR!O9@8"EbE2P
%%OnuP!$3]\bUj,#`+JdZX<+%qg2FEQfPe_6q3ogUk2@X0V5n\NSb.I<((Y_$$q*Xk$$;'GnYD%!^NI=-i[rL#4Ykir++eOi4Qm+#
%ZD?5NbHc1p7YeuG/:e3E'D)q=5o*\1P!mRjGUiht!B+?E.olZ\c@G0:--Lp2M%gj37NcEKCG$2C2S7hT-^O`k%kcMNgcdK&0ceg"
%^^5f'B$M#@V>K6f/9X*-W.56/:m[B3\<PtYOmhVW;J/f;(@/6al*#m/9It8#'4aio_Y=@>MZJ-o25+*f)+\UcR`0B#3(au4BODf*
%JN@6<Ej`;Gg!L:h%genX7t\<q=u94F=H8[fU3U/_p3T]#77b9W=T/U%:kCu-@gE.fX6H*YN/ljgB3$^ABsFb>oj,_24RU"b$^O$l
%40gE_j:#f>lImocf*k$@]k2$3Ahfk6KOtdl/c+?9(U0WToqll-Et>mZ`B=9Cn8t(`k38W6@^fQ18.6FCc#[qC!DY?h7ZT6+n%JZd
%hd%PYDGOBUP)E@Xeu5hB/L@FOI?hFp?;?OPC2JEXjkb0\;OEBl0&S=e`#0K9mZ`P\EkN6OMC?q)L<.VWWkT<R9D-oR0fpb\]:>pD
%0I(pBr<Shs+($,?@<5II*<u@O2q%,_`IPiKiWQIl(S=rmmIPVQh;e>g$Fi9a6=4qDJ]sSJ*8jc^c.uZ#Ric')3NR8nX.:08XX[0A
%!Ddc\HJ&TP6`%Wo&"!)^,2527]6Du4I/g5lA9/0m3R"p%ir3'9T?\J^=B9`I)cbN78qA,=2aX-aP%uH;WH3bWj(/4uNPg2RiEj%t
%*90.q#[.kl/DX`d?o"6JQ`>FkK7YKean0df^&Hb.InhBYg@\UF`"Le_B94GfhOQ7=#%,3pMCt!3.-=-:Q2/547;9?3o0h4Z7Z)AU
%['g/+C=Uf@-t_<f31^\4[,WTH-QdajE\^HNR,NJ+a_u5eMHCm))he>Ts6;&-T6,(DFI^u@8_OeY5\j5R=<,IBm2r!**#_)=XuaP&
%;*>SfdQ3MT.iLF$XOQe@l%ke'ZY,06dGsq]!$e0t!=nGMT;2lK?:=-gQO-Es9ed,rQ%s$!f_u3:J(Jm]IihfrgL'_-KVan?c#aP\
%je.j&O$3>1hC`uuerCNkAVYVdcXBDAT!!'iQu&TiEO?d.Wc*I?dV?ILCc?doVoXq]nN8:e.Y)'Y.tC$(pSp'N+;EED`0*@QK!fn\
%dR&`ad2?&)]!iQC-[cRH7Q9:2]lo95Tu#+(rlXZkc^*([f]9Y^U:jqK&ac,%2!eR.h-Xba.Ibtc(CfY81"\VRk5g.@q#:"#SXI`3
%,ljV=2-W,5L\1?Kk]ucki!jTccG5f-"5mo9lX5LnRaoGk&TQOWD)$8!GgcpZgjgX\H.<JLk'GW<c(L"I=r6RLF-sa;*S((ce5:/$
%W`d__a]_<H_j`,+B]Gr33h6<;qi>62?*?d&d[XUTWbLY[1hc"\@DT%#>0H"0Spn3K[&]>&5MH[<56,R+Lh_ZVMAY[T^.;Nm!.9]D
%PPSsk'R1heem:VJ%;uJ\PY)1\+[VKP=$/BfQP<9?^!V)@]pT[3.ef_s5c:KI+"`QVE49rhBK@_AjJG%6Y_=Z],#BYp@QF`+7^!ZD
%p?m(6@9'"Yiq(0`]F$[D$TV)Cn:OROi7msILZ)->^)\1*$Qn/8f8D[#f`WMoGDX+!T@ftcY7d<@q9_+@HBkMt1VR_WplCY\T<I[(
%hLB+\5H!1!-Ka'irjU>P&a,j@Pf4e>9F\"7\ejDVrUqCLUS[Fk?2qT1D!cO+4r[-$j811,?aDsp4TaH0bkolf<KOGG2;Z8%Do/(f
%K;KITedK7`c96#-ghZA'GHH5dr5Qo94p5#06V9s<0n<K_fA.NL%8+F'!,YqgYdh9p5Dt<WU:\^9MT18MU'_O>U+6@V31hX@[K)6c
%7CBhln+AgZP=:C=Z@E)&DHOsFqO]X7V9(4o-2Y?:/^Aa.LW='^j'W@e&R[5T/mi-)!H#g6WXbH]N+7;]&rE'"%GK.oMs(V?0@Ma4
%Aj<(2K-CG\Z<s46#o6><T't'I."2HO?p<MsS2'Ecq3V`s@2MQG#iN[XIWo62Zk#dhEd$r*Pg7lVF\T6)E6e&nj+QBp#7D`^h.o1R
%[<$oG]4IYEd<'6G?^N[$Ugt3FKn%K<Nr%L=<M/craDR2/;o"M_j9d]"-EU)`/P6/0Gdi`@eE<9F6kK5trY7"U:rYW0-]&JQ333o.
%=CT*s*&BiXo/Y^',RTWTUJ8GMaAW=/7Wrr_UdbE2A36=qp^rmr@Hs/^^?1OgNeThV#V/]36fB%TPq>XR4QcH7bcf0@3@n;ePBL&m
%aicVFHreh.L;Pl?NLHfrgkG<*S]^dO8ct1J7&#AP_Qh$Y)>hlrDd^M->osEbZOmHON5RXT_:bc:G<g/+j;'mleBG@@l,OlTT`r7G
%3\0SRH7j?Git"FmBPR;lW(qk<7ubP:7W"=f%g9.??Xug3T.O+B5XF7@ogQ.*1BjCGKfm_t2<oN7S-Eh65?<E@+KrUjKE]1<gH7QT
%kWX]IP@0EsR3*4\F5!F-#^Aa?e8oA->m)((<;Iecq?=+cpd-*MelteqpX)O]nO1F5VkB5k"O=qal*WuF>U-6QI[6Ca"ge1*23M#s
%UCeq3a%Jim(4nZ2Pf)-dhC4]\pB]mu+d@*aSc\PqQ1J#6D4R\c"app:r5Zi"KQbq7?%E<5IQkAOK%m(SJt-ni]jj+3+aq5?l7sQI
%KYOmd.\TriNIipm.LXFT_su,,@6q4blsbATGc9ZK2C"e!d>>s@6/@9=^(ngdG]JMM;%Z#7)lp:6k&iB`NdAt7Gt@2GrgM+$AJV4I
%S?L8+59Rd\VmLoHU1/5,CS'kgBITRW&(h;cVO?4T\^r5.;prm+R/3Os=mKM@h*R"bnrKVDnGdj'lp^srUP9n"/0lH2B+$/3UB\SO
%DRhb:1FO6hG4_6T=Pr`;Hp0IkCD95uYp1ZuQ=F>*$hj[$&/#a."J$U5)Am'`+nkI[]!'":CW)/_.q'"WFt<d@4CZ]8!M\3r("Lbj
%@aQhq@b"!/R%-94Y)9uP\.ekEi0S.,`/=ds0p*HVW2_pSeTNJh8Hq+j>4=b.S)f&.lb,KG<!r^9PP]aCo:[2!U6;PFgo^DFFV,a'
%l*qQ;c<1(C'lc[k5YC3DTa-39:"#(;VY'BQc(Y[C:@iW(o0)R\*>S`H/\=lX*c>DFjSt6Ie6m\^M[hcT7?2:cVA#^^4$@05%22T#
%+(5c(&?(dK)BFi\atd$!MSuIXnstTcF,I5C$<INa>lug:V#_=Ie3gH2#c=0\PLQMn=POLGi0VaG-)ehXa_CK/emjkDcT(qoZ0EQl
%cm;_5%4fX"bf'6,BfF\"K0Nea@e]rFTQP[$0Cg!;"eYVJN-8qDM@6R>/iX'%W8O3j#qT!%-)=><0qhsi#0o[E*g.s3g%bXq(Hq1\
%C,48s4JrFOgb[^ME^jo3?9X(S1=@Z;[K6%iLddjVNs+=tXr#TE9lW2qb2Rle@d+HIJTSZ@C6)49]SpV,OY#Z3[(K8.9ha*h6PGBb
%TY^E/\GjTeQ!!7bZi5<#Dl*.*RSG5tEOmdGerXc2r^96:7/o3bUC>\mA[r;uMK9YkY%\h1d;X7pI4AJhIR"&QZ,E7SGZhm/1/\W]
%g30Bd$9*JS,[&cJ\)X#ed?_adVG\IBDQGKMAj<\sVD.3/;-T-ggn[)JZN/L$?>e4P%dhVK4]HMrA%ESTAQ5usUm<lC^.@`u/Ae<?
%>0`1e6$QOCYC04<]$4_>!4!a*0>Z*u]I@fG8a7;5R>[#o\P0a7(c9*ZjjY]^_j_5,-rCKqPgiHaJeg0k92d$\k5^(T_]*i6aPUc>
%&G->h^nG9.,3:T'T8qf=Y84\#J>>Oo<7nArGX_+"R(N=)"XWD\rQ?5JOTgb"HH%8DJ2Fo)7dL-kH]Z7^+<Gl[a<"m_WgC<caM-m&
%ra._(f*:i\8c>h.GI"+gN`fN4:b*f>AY=)D'piJ'pM6=/R3P79aX(2q((XES#G^:8!l.fNfN=YJ>a2i*<D_>5BbE]jHOB^5*([n'
%@mYB:/S*t;,@XL3Yje^E;aN3<R+^'k]iMZ3g\o0O.`*)oB-d!M$5Lbr;aG'%jEi#aaheOLN!6Ph=MPqs]LM'p*)j4AhB54f3;$dt
%9J;[X(X[#V_QiSGAN-4n,Uj#.Nkg#)rJsCa#PX0qq)Fi5m7+,M1$s.H)6W'<?J#K_[5NJGOp-Quo<!-M:/S<>rXt/^3k?c!cnN8V
%_IX/@]JNNub07<KbU(H,T6cc)0Je>M?/NOqMl3$^/kI',ijITM(@\7B+8:jf[93WcN4u)>I&[2iE.rm*,E>DU(4"k<01Kn>@O0/U
%g;;h0(R&HpF;YoujS?]mX%hn_KmW4HcPO!6?9m#;#UZM#<^/jp9jDhFGl`$K]Sf]`IGcs07NXBNp"9r%:I]?s_&&(*_'1Fg11'V$
%rJR1bom:1C;><d(SK8u2k&YMf;/?X:af$<)@\2kD=GU"Z+W-j'P63.[Hi^1M9Ka3>,^-/b?%,XKklWY9^u4#%#pol,@e+.^C]r-T
%"-RhT7=^hO<"U#1P.o;O^8,/ag^=j#k5IjK)<%g?7_F:Rr.rVM,<Ig1O=e-+\)VH\-l'TP>([R;fAR5g*Wmi7&+`+/>0M@!b^AFd
%59QFGektq,H7ZI/nWNbtc]QG@=E,9t^5?)QOmb/(IM5u(.pF.a-B$Fr9D3=VM@V\R_f$a3;?mLTI)tb_[052@Z(r*:D*3dnJ<i%^
%d^@n"\AOB-@U"2#,6)nZ?P!,p_*V]31EFq]o%'M?.2p]C0UJ>YG7H7D(dU#5%/:@cbndYW,M_Gs=Qk6]i[Z0B$h^+q7S"smNdTZB
%Y2`Za-'&Qfb=U-P=T_qg$.$L'fM03VmhAl^^'<e?A@a_/ENkqOdp1PUkWYqfdh'7=HJS#hBi=<klgL1N5/H!UlsI]'s8((ZC1Il>
%_jD^#c9h8ll.#eFpe7j`3*e2nS<*V4$LsDM<^230UNH(VAk/=i2+-sa+JV4;X1%2cB&,<N,F$<<EE5U\"Y=$'L-cCeWVI"Ub[GFi
%c#re0%,"Efpg"suVJ?3;Q08u8WQALt;ENa&S1[?d:+oUKWU#UloKSYo@L'oodj8`Wl[,V(gKL(>Y>H2MgqMjmFo-%3^>D*/'VJj\
%g_+U(U&iO5TN$u@Ch0W6g)rc0KeCk?;922=&>>:3>BE:lESCYDY_XQ##2kf5*R_:9#m\"j!)c21J1:>Hlm,;M%\6bXmferKQ=qiX
%=N$u!n"aMHke=`go_7q;dq7[+8ROQ%"-Qt+iFIL%_%CN"aX?ANRc6gg=-[4tg?go'"Wpg>+M4;EH%_8HQY9kCP^CdOj>(+oVOeEV
%7@mE*fI=j&c0&J-M<W1t=+QFj:5$"$eN8p0ffND^JXS4ohZ>/+;0>d\Rd@4d8'M$Y.:NPc28r"7csKC<41Hj/i*N3DPB;B_NN`Q\
%K(/g"G2kjI@6;CVA2^X0ea+uRr*"hhM?MdF&t87u!RD!PMABUp.jV'p#iK<,08*"G$QdU!8`\oF[3N47i"$J%)??-W-E4;S7A7rG
%5H^_aV=ccUHps\20edr_k4gM^K"_j!@UN;WSEm0KmNK:b\m91Rd:G^u;(.gWm@),-@$h:[rnAKcS\3Dm.]^Oo<;UH8Ms;^'adDXG
%&>JtmPj7VSM"[)u_87B=XW!(1\2d4>!aJA0[hBq;^Xt$A=.cEu-);g2%5^)4lFO&r[qo8rm=!f/a,"'0QZ(%aN9F9Y=]te^ZOi8(
%XmpOtJL::b#23sa[/[=aZq>dTZ#%r+-[35F:/c>#m.=;_)T3POeLiX?*e^_RPu4MKRKd$(Do1Wo6u@M;f2llATE*'V\8<GtOgQM[
%GE`a_2IYq>ie+r+=I6mJo[YL=\SBh;^k0PX!Q^+HdENbDQZNZfX^#5CPs;Dk^N!"5]!YU7nVq=4G04`.qY"=LT.RYgC)qh`=6Z*,
%aMEpO8u"[tn<Y6i+>"4p:44/U1&Fho51;,VC\)f8:XoIL-Zo9uIl?67RiMfZNt7]Y*Bc:Zh*kC`Z.RUdoBa(X<?h$0l#).U.F/WF
%h<RSo#IXkN0P2bX+`b5bKZG`o@Q;LF]J"Tn]IJat$3'aC'h$+"W^+Y/jMl'uV[j:.VTfU)0fNr"$.^SI*)"jg$aaRi`?L]=+:A.U
%&^]oW=oup/D(rWI(ECaiN?\F%;2P`:U+gCQZ)b^+V&Wu7dW3>mCXNXLchUb/eCc:Mbu+:f+GW,EUma_n#&t"a6[,%gU+XT4gCYj5
%CW+CC%a^egQV]7b9dL%/7tNf83mNsT\faFb,b^Z9GDQM_*qRJSe:lD+_:p$?7WjGs[E.")q<Wdm!4B5*M%Y4^a:[?e&k$hYA6ZOk
%7M^k]StNYB=G9^G((\[`'EPb?^b`BPclK@r#@IsVTX^SWX#:^(EY,]*>`P&%b>Ju@r>o@NX!C6kQ6:0rMGp[P`qN<mWf;B7PbbD9
%QEmfF/R]DB(_OA?VOKWQLMBeJ:on43>Xb6tp_:F:j>?3^WG!bSlKO$-[gh59Odjo'TOr!J!8b8UBXJqM@i^sf]"_ueZd;fO[a7hb
%:1#sYCrc2SBN81sG8Y9V79?HP"4\fL+'](LCQF(J=LM%''TR-7Z(gXa%^:Z8WU)rSP8`<>cl!*U%c&0;in<aqD/ke*/i<Z?INbN&
%!%A`e)T#C\VaWGYZpX+)W<GAgO]p\5Fb+!g56QkU#*7t:8W:Ji)KOSURD9qLc<s6!#bJ>TC0oqDc1;F.Wm&nnZ2eS-:]p1t54>1[
%(YP.An';7j)`:)XI4I"4Ui?dr'V&CpC[\_p5l394PZumsR6O3?DrTLnUZ3HVkuZ:-O0SUH%JX!;nKJ.iVD6hAkdP1lJh5Ve&i1_p
%lm1Al(L@fBVCYnX]+mF$P)FXT?PB0;_h.CI6S9.(4P#&T$IlN?cdQI28iJ0&K2jE4\$C.kIp=^Wj2La?_5dZLHS"P[[Q!C0rfhhN
%;SP9^ho#uYcsuAI'(h7YS1"90dN-E3l4K5FOg<9j12s+5-kK[V[=[<G@L&A5((VGX]@#"%@3DQO'!f^-iNWZRZA!qRR=Egn._*n"
%ceOhNZR9u4S"8S"ki=,o>W;.(C8@S'NK?F.7Y-du%TK)_>.BF*/,JlG%TCV:TK%K+3^[$!2Vk+nJa0IM1so@XoY?][(\e2pN8Z+8
%LlteM_I#BH3UC0tn>ep7B>t4GJagZ'C:(@9pL'h`2*MUPb4HTla7%a<.(q3]0+FTan=^W=kV<\n5j/Dc6P`Zj?a/;/;aK@JYlW8u
%.CfV;'GfhISY4!ZV4rc\IPnWppR+rXArH`r7LX)62-D2=Td3l>PD)t<+:t["n($0_gi"g;n'ONoXWP*O/e7_LVM<55(-:JHkt,Tq
%0V`s&RY@'H'PrijKm3Uc^q(SSV&dq%OLsT7J$&*T7d(^>n$!lJPaH+iK7,cP;[Jn1M945\`CAedU;4IFbq40K.e:WcW;\ZrFa'<Q
%BKiAZAO%_9@[IZ_ASf1\Fbh>5?%P"8b'>`T!XV14@Oj"ZB/'eTZXfb9?j,@PU5&hS:B5@Pb,:WhZ9KOP>Fu5jD;UlI4lB%&pJa!a
%-OUI^&pTrq$WYe/pi!$e5TVT(\1YT/DAsX@s(`]V8JQMYqeP[.SNF'NJM=_f`('si.jtpK7]]uGAapn]`556H(8DBP@:X]f##YgS
%L$)G\Q^8!539`3#IR\F9`s^_PU!)**p046JMFD'c?5B7")Mk6e(JRk!\Jmm2+etq&IZaj#(D_imgFQ5NIOhi1Wea%_S-1IqINE0Q
%W5VYa6+i+E8gAbu8CTIQiAEKJOh2;S<3e-/Ra6Yp3_]Pt`ojS)<,!n(VEDdqZ/7u,m&2CRRe5ak.i8RBCS>Ukg?M)3?%6,])*88T
%c(@KW^f'-Z%=W_bJ?e<.n2o"O`(`0d@5&=#'Y3QGrVAhO?&:<A'aX_!WB!Yp!WgbAUahNs';ZAqQ'T1UND`7.LgYed)J/,/h\1Le
%h)$)*$ehLjA>]t\+=4r23NN`j1n\_]1kgY&O5)u;lF^O;j:Ue;/Fdf[fqf/`U>1IGd(I@h%2WailGF7<1d-jC6#J5gd4_=W6-<ns
%=UP-s<<+*FD#J.4h(A%ICT*Or#u,`ABubpW$%]<E#[2H#-.<+_ZqcHif=$@_G[7O]q0lsIQl/Mn1rdm4$!f_Y+E=eR-<'MK,`%Ob
%:pS!3.Tt%+ff^2qUPhET.=WtR`ZK']RJdm@aIL6"MSZmE9!q@tJTo$,&[Qp`4R/FAN!]<N#0gsul?%F`j^Yd)AC_tJAi;4B@_:nL
%I]2>O%X3iP:dHG29sOcmN<M1)=m,iEMd/FrQXq$/3OE`u?7P0,8KJptp!0.W>_;lBp5>A.-2#8E0UJfu*P^&Upe.Ksl6i5BQ0HmZ
%^Wciq3*q)/Xht&U7$h7f/g1R$;.\\k+"mk3B0U"QcVi<rJ$.+TITXJaoC'V,QB%%.0*<NY%!N9h_4uOT(SQ!m*atd^.#\)8lNR[s
%,KV1A;:\OL'5r;]gba/mFVWg[(l3i+%R>Q;he:1;^I6B5'mCBbo-.&pO1L?KilT%^75DrflBiq?%&`b`?87R[ToZi;GR;/BC7h-A
%1E:!r'jX-b$@;K(8TDA$"b4H>&/1,`YKl<UR0$m0h(4fj80:6q/MLM59l.ktjA\e!Zt(&2:_TVTrVAk#R7.hl6pkKZ(7@'1(()kE
%n7=^Q(-4qc:Zo-ZVmemX-Zorl?$Qpr#OOM!.SaA0N&Hp2M'hR)qnXkkGg(bsOB\N`9=1O=I'9,NUsmDnQp#:l`]OK5"G,5%,0k9]
%W_T=Ge)lQ2X74&\Y(8.do!4Q07WS;sZ+0XAPZ4"^_4<gu&E!XgTJGRD5qg"n,+JH6UaWAi.#XMnU+N%HSt[d5RY289<;&Q<,qLJ=
%q$0>4J$s_F-8DoAE5bP<V(h%uKeeXs`llo+R5EF9#E===NR\(D^F>TRr3\t-8JZ7^:5rds^HOFe=;8r(rVC6!Q'!GUQVh*ZY`W;o
%<kO%_Y'jH[A\j;?6==X%1b"!t,3u/]*qoA]@L!(7M@dd",;k$<?dRU(<sk\-nGKT7\^Cp<l?1:LK=;oFFi)eUm`J1,84LK5Ck9Sl
%TD@A"ONQJ3cc=Et-9%'<$5dB:Qf%%A):[!/2'*7BqHU22(B8ih'3t`P)RBDc17)bc_d.%`@"LZ%eR=%#h.LUtcF:\@.G4?5YCTQ.
%nSTT[-jQs^GqKK\$:*;UC*@h[b;69e[4ka."#jC/dh!.lllV:pP2L57",GG@_N:"3)"\];"#EiMjE5k(jZm-#&>_7d^SZd[oh&Q"
%#p+I1h#D>V#g5k/<aee$W^$^E]32qB;,l^4Q\O"$#J\"\7!06#C3o<AhWddW\dgEZmA-o:RQ=?KMR3e@Euqc!TfF2e?<<%b`&h&G
%m["5T\jc:oBE7[N/).52\rb\/nrJ4`+'[Fq2Y`22qO>LVcY^":a6cmamR?_cf0.ou+<*gI;@OEd0AH@);TpfK+mr=.32OS""<8KJ
%ScXT9DXfOmE\l\s$6Y137=c*uTZZ`i"RSoK=nHA1PXTeH@[6lpl9M;6%;jT1<-Yb1`L3j4JHZQ'56HZt"Cu"NO'e`G;jg'Kb<Rk(
%Wk,bBbm+YTnQEZmKDqkkqHMol;GA^+6-+eS#Kh&KDKHVtk58:`,DS]I;AOG:?i/:+C9#u?</_d4e&)#kk8Vl5s7+Ei8-@,;=XGF>
%<="d\X$nTZNFNa"LrJu*bFrI&LW8M5Of,P/?.R9nZhr1sDXGoYJ`MWJ#S?e;'Xdq2a)-=]<?T,0eS>qsqrbls0J`+=5;,GQRQLU3
%$1j0b@V)>?O9.6o;/IFh!r0RZ#7\:Cgl_L);j+!".uIW"S&rSS2-F4W_'U-%@5c(X1IB[qUPdO<_G5)n`Dh'\bUf._foE\dm'>Y^
%.l>F?R=G+aBk5;;:;8c?FL%m<Q5`b76;Gh9>&GU-As)'XRTNTh:/=G*;[Egg=oWrsbp_g'?(h"q`BUq`l[/!Gn['Rd/K61JHn`r!
%Yn*k%C%u'?r@qNr;2g+SfU=%o_EnkU*6"QL'k9m2&.m#:f\W,,M+YWQf$BJC$.:Es!ph_P(llE@HJ+UAi'ua/S/TU7XnI^LT%$r;
%"!,nno`3?daQ.cr4gcAk,1'j:dlmAC68d`m[L'S7jhBsa^M#-9S(%96p81L^Hbg'7^%Ug/.kiC:>i)Y+X'\Xn.OZ#:*De4Kg2"1t
%$'B?4%GZJ>!Zpt;4<Qi&J]"qdd/l#i_Q7UQp+#(V#EJ]>Eu2]rF@+Lk95PfpraLW'Sg<PrVtR!65q<;IL;^uoE-,YL'g_&ML%srG
%?F@(6=5tK\7l"e+?!Wslp&laf?0rUC!E?(N.e6:)9(/oJ1ZN,T.Xh!u7e.^],e58%J`a.`p^3k18`$@T"1amH-H$$[,R6R<l^(!@
%j\9$'TYMEn'b\fb/=_:;S&pIY*DeZcC2PkN);DRi^tGbs^e+Tl@=_/c(7(:=Ms:Nt`=%)*>5Q7YquZkdi=Iq_e3-[3%7PaUE"37b
%0=QIkgal><^AE]7rI9:OUHg*T:`D\6#tObEmVt1sNaI<;T[.2cW4cHLCS0Bi>SodsFOm<+f=o9g1+Z^DIbXNc!>L9*@6/^+:B'g4
%GDh78Lmue/`o;.H[lKH&rBH9ggj]4Hkk5/JdR;h+n_YG_n:sll_ak9#2EqmI1dhiZs'f3>5E'5G/bj(V,6M@-ppPq'E^2B0(o^Us
%)dO1,6O-2Q%odd+A-_GmcqT?#kmp?R'+pP?M<Qu0&QX`fZ&&Johpl#*B7egYX)8DMRk!-lFL$oWltooh@Y/<P#pp'Va@(JI@q9-b
%`E>.D>HbD,$CFc@iD-plM^++S7P8WamtV%GPO9PMp/a)]#7k`oJ,kHr!!Kl8o&AY!,bAj*6mE<f$RE$6<?O1noSeDNUt4f;a]%!/
%Ss[]1MXM/Z.8\:mH[;\XaVpkaZS/]H0on;Fa>"g%imnea#Pta_,bS<`DhqUt0n)@s"2R@S(qU+U+E$.,mE4"I."sQ+TGSVqCm,#g
%kQKI.&.":l+;![@(L\W+kA`1o1.U+^itjTlZkG$:YXh/9[fm_N%MMb3=FGo>i8RQddhYW<c(S3b!D("g(/ifhKM<pR`9,u`*5Kl<
%U(i,TP=hJ$nu$Uu28Jdd%T!SR*`nFo["&Mj;jK)@',:1LD\jmZ-q27.3+lfKN;jrX/&D)d.ZGDr5Z7g3V<?&R:HPd_So>Wkm0AQL
%G[8Cq-:]i9r3.?RqteXu?Y)6UFKHe9knTd8_HY$A2;01u</O3<#S\)j@kO2]$QYta9+6W#,&%NdXYP_`&rd0]`G0qH8ZREZ5C6ZZ
%,`,qBCg;mUeh1.mPE<7Kh=U@-g%`-39]SdN<Z1#aoWZ'S2=Z<uB@n-soq>)GiIKY3nB#7X'^kiIH/FFR#mR^6[aauZ]6iuihDq#`
%rbCKbroGkAptMpsIc^D4#::F#[LkBu!5h0ZrPT<Z37BV`RJn-Oj<FF8dG7J([,];elWHFV*^u6lJ7,cO:Bl;cToeTpWP/YhksjBJ
%[r3U6VD'5[cX:m+]fRmMAh#@W$.1O814AbYT9k)!JCIT<?E:`J9i$m.ZCjrir2"G-"Dt2[9bfHd"f6WJ^q]T?mpTFu^CnXL.(1CA
%h^QQhFpVV6$M]d*X$KQ*V?Q[ILdIN00&7m#K#DAR%!g58So(LG6i;3YMDAj!;)Lskr7rnFHC%"<gZA_O8`>m^1h)qb<iEi1Q[9MQ
%;B+E:"n3'In6qYNi_H7f/U]qH/:R>W@ob;cnri<X0IH3+1nBjk3H"1TdU4``)]MJ`G.,48:#=2@Q3['F?!fu$p2I%ZW)MI-hHC\A
%me(+\&E@NHN!8%0&(jJH&'CFC,Ks911W<RITQWDVEi8"i6ATb]+%[2=87*Mc5&kUS(m<T=>;W_DB8*GE@5L,n"-)Sq&>T1,+UUf(
%99-">46h.eX@mp8W`j,e/bW?<>:,.1G[o(6"[`;%#guHFqlmWH^FopAi>AF'!4Ds?T;uY<EipV#$E:OW^13/<]_qcB#Rq5tV.iAd
%BQ;ah%R#S>p8ValX@!S'r]u(LTrBIGho[bF2e1CG!10qZ>[ggp:onTRTbM\n;]Dd-]tiX,C!LrGD_;G<q#rJ,=L)]<gWeo3cM`=?
%-JaCcgW8Cs@EXRrB-0(G$GV#uhL5n-[_^sA%i1jJJF*^c-LDDejor?:P`,C4"t&`3-]>snLaQT4eF3-]ZdAZ/^#XF$>VAH[WB-@`
%;st7+Z?8*0ju]J`nT&P1isYmupX-0LrJM>!GNc]m4c1'B=%e`pW)Zt?r@>TuA=>MpRk.eTQ94W!;1"9d+aC?'kMg\1cjP^G_?=T9
%_9Fo!c1ItD(&80a@XT'F'6lmZl!1,tBP.pM$e&'`k3X47o=>Z,;Th_VLkZ:Us$N4`qjgjq30-?7bFgqXM@M0G7Z,A5/rLGZM5/en
%TrjCf_Xm5EMEh2r#[#GOoe`/V6dE;U^PFl\kPp8HDm%DKf,[.A(&ktT5*1;c3+Z+r.^I=_3+?%7A`7,e`0"IJfn`)9:\P*Y/@XI3
%0*d8OqrqOq"!8!]$ufH4CeB;7M'K`2Vu.+KMG;can"g"7mO6BC[R:3c%;Klbdi@4eY<O<l2j[C2Ur/o(&WHMIFVl5&%;^#t_AhB^
%cdb@skNW.fQauq>l^_jU25LMhP]*0O^'ScQ@IcV1IMK*%M#4Zl_lFJ>D;;SR\B@*@mOGCrHh[?G7-nQ8UIebo[-s4h%Ym`-Y]qX`
%hMcuA%(r;k'8dWi"Pnm/=!'f.#V$-tNUN*N$ue3JZ:'6f.Nco:1s-EQU4F75P0:"c7>3M*%pHFJ:E/**^ne-aT!lhoh@6XWl)1IZ
%@^SFRZ>ZJq>ql63;[p-F'T1@7;Gf^&^m7r>kpQoVX29.1Zg%iJFUL@kZFOTO:M#AeEcJ-t>k=.`JRn)(rjXKT[mSpI`)j,7lAtZ\
%r7+)0edRSYa+BNPREomW_;m`ZDs/!piCOCjp]1c/As$;3=[TYH%00bmK-CTeg\3->8'V%kYbU@cEk909W'S<j%Zd:6_1k\d'\jbT
%eO"^gP7Bn$<U^IS0/JK2<(UU0`d64kYG[m(69I4>bK=Y^9:,qPIeVnnj*66@+!l4=^aN3fD:/RV*34L./.j>2nFA23gLkp&ZGrMW
%cN!9D>6T+;GIL%3iBB-RmRGgjQR/0aR-_2W-To:*9j/hb[=)O^3RtNdCpk)<HM^RJB2NLErlf7^q:E<Xp\E_rpg'NJgK<(2\[B:l
%2u1s#]D]\FAZh*YFt<HfrSR(B'b(tKDs<5%`p>^<_pk2(RRCN\R.e^k=!aji9B_NuYe1L4Dk9!Rg+4YIG%DTc%ic[M3Zt%K"D$O2
%;,`4l60$*R>u@X&KSOcjr-Ak2]8+lH3'hkA4/YWS'dRj#I.+VJi0`X-"70]bG.M,c4'D-CM1p=OiKKJU(Ai-a5,\<h0LXl`/*CJo
%ch7J'2>PiPMJ..*@kotC`f\m-F12.Kb0t&e,K.>`io[Dk8[&G`UGEWZdGe(2WZ[P?m&#4DD@Hjt<Q(M8<G_8:G,?(o$6WEZA%si"
%(Pc60nm%:K:i=i#76;emO^gsR-3h>[NZWma##/lgKsBj(SFmXOB*ESa5aU'I(i*d2CBeFEE0d^!G@V*UQck#FD).)e#:?[a.P[Wo
%,*XU9-cf93>6$MJG0'_S:KF(3dD7Poe>>2YEPqI:W^?_1A;qW,"2[`,7058L5Bb+09+P[dT^,>'J%tr_Kq;4*#JKlTKV3^E!U,7V
%Ub_dEQcctl`bs8,0MooXdFWd@,Z-gn86q+*0+4$\[Y,<93koC[nIM@kYX5&gd-QL-qP:Hdm#RUM>mnUE9p[-b>]ccn>\\PHIB^@$
%m89S[X^b?/LWa%kBO/\8Th_HOEF%hEVErhgRJgOqeqS`TOm/kY*1AD5G5u-,rl90-=aWjH[,8."r-%,hS]<f6oZ!/5gu4_+;L8$G
%1kHraMt!E:D:hbhWb4hU1qa/pVFI[aK=/dm&193[Fgo^0;qDU[?/+;Za?,`39'!3/_f9B+6g$AGoMIV967:ti1F`_GWs=N@1\)c`
%HNl5\Pjj!!,;?ucIo:'@6@iuER[dhB;hqK=f?r_j,B(&J#?FiWM-t-5O`J/8f`+&P_6-Ld_,_u`<>HUI"V!b;$ObPE>,)GXQUOHN
%d+h]0m%4[sGH^U<rX&_;.`U]=!AI4J?7/\('q/I+:2>L&baCT3ck1eP>:<aWYc=Y):l<>06+S1`>MA?W"Z`$I%>5tjJ?8l"o$@D:
%Cf2.'9t3[)=T>b(aAF>*MJ\')*^g&#!\RI;&!nM/4u`i<3,JV*]rBaX_uM,=;+iC14Ig$3[Hc(N+_!EUg."_;?"Asp&iZ]2CUWC<
%V#OmgFTgr,F"I23TUplJ'0,,69Vb,9.I_X[<Ihm$#[,NQ"pJ;_#+CKdKm@ON@BM=VLP?Rbg&Y&g?#PAsLq.9UQYM_uB/!t$l!kt\
%%KQ$t0kB$(e__m":3+>D.5b'+k9@$#_uZmF(:)+>Ol\:iV0/&VE(24b9&pY7l_$:m7E9SZq[s\KbE2X:VnT_!.;MFjO(NRb:ZqS8
%J\\<?@NUTr,FWIW`:Jq22rE-\dJH&;Ruu[JW5=<kBf$T5]GN=WK'5/?r.cA9[GV95'QHfTn!D.g`.P&RhX5Tnh5/gogWdHV(pEk_
%hL4csi%%UGbW;r4U;WJ4gRD]8DGK1"WDn^%EM,H!`7s7;e:\#<@MnQC9G[R!$%F-Ff(o"33#G*_$o(?0hCs0ic?q&/)higs6Fg7#
%Q%)tUpWHg.m-RPs$M]j*Cnems_"m7\IW;OZ@tPkuMBj)LifT=sX!0pN,`uGQ"U,)NgKi#90WAJeOqD5PTWMoD-W)0,Cnf')*f#u/
%OVLYeroR\u24.kXVo/;0B'9o0]AdHFLn`P6J;.%W:bd=[IPH(M=>XD\]>&I;WPpB@J=k"JZ?GR>6$u!mbK<)WP@A]d(TkhAfO>nS
%Z(E)-G@=,,2E>'cO,J4amG61/)Ll`,mLR\eNaSHV%WKuR#<4#;@XP.42%Lrq#aeIT5TZOSi=J"3j;.L"j-l^tA!^Dgo@)1cj'.$)
%m.]u;eM>d\VX97g\ZkJJNcmWRj/'&9c_cb_0que[M@PRlXF*,?6B9>f!UL<`i>5cOo]V12c0V\jD&+3G,;Pb2JRq'F3V6#I(ND@C
%/7(b65=SUj@^03,pV1"ANQgr!gi!Z:W^_*'MC."I0bpKiD'0Z49N"l:A*.AT5kr;P:.2]+f3a;8XT-EJhEDK_!lBVCcH4<Z1AYni
%k5G2.#Ig166Kn#D/$>(_rL*kn":g?#d4idVT:<KA^t%!h]7"jLDX6Vsch"nUQHd'_d:Y5pS#,oY"^>B.8Rjq3[%PPR;'"Xmp.qhf
%DiS,NOQBg2:]A?E=<nJ^it+"(/nucuW88#b./f3pBS(R2#U^=,'^L7=i%uZA#;m^TA2K!8WkV,GDp1DF.HkN9jf$iA9-^MGAg+&!
%V<BcHC,SFK"G7OcW-k<:RRd#l/2Hh;(,s)IKgfUtnT54>$aCOaVGEP8j*WfKbFln&'Vi:tM?_JJfn/LVs!!6BFF$JJ*U1MH,Fr"?
%.2Wt@:u6UNs()Mf!.'1#&dVaSlA8_Eo*`OoBb&@m4XC2DB80nR1BCAR/Rc[#a8?_rolei':Qcl62KiU85$`ZErI&]l_@63LaBV5T
%q'9.UhoaX-%IsW1neV"CK/@"R,9;7h?-<Ehd#LYA6^mkCH0mP(N+gcW"V+6^Ab1-[?LP58L?bT+^u@Xob^N+.Y#A#2cFf0:Olj+W
%R.F^qlj@=Bp^o!`OSPOobd]'P-3"0D#VoO]E:^ij1tseq)MKN@*j1<foC86g?RLg_elm6!a7k`3o@/kn@V4K-<:;q]V(LRkY0?PG
%UM)`F;-E;*%!^b"o/@IWOp;dsV?kkhBXM&*GkbPZ"M,o&)9O3tM51[f\amX!Z?6Bf_I>\e49MF'8;`BQMd'TAq-dS\J_H"&\JGh^
%1F<Q>E.OIn(9970;7n<O'MafU"dR]WEn6DZMWM_WW8Gu&,;<dRp8A\ABOP=6#hR+A!h9N6C]_MJ#mrOa+p_Oo(;XF(@SU^a'Tj]B
%g;0J)l$W$2K*J#@*:1`j5,7"K&$SsDdX-_U-IZB]GFYS;Rl&Bm3qGsG_l#?Y5u9n#/)"<AIl.38eL"NfWB(W2PNj,?.m'/d4]X>i
%YJ$-,i4H%Og?l]`<cX>#9d8EA]JW*6e8HrP\(\^_].RCEgV-YDE`(A@MF"8RFN\@0hirDSB,3-IX2:IP:#@nKl2&+n74^4F[_0`c
%-`6J]nPQ5DI=26Q@=jWWE2h-6H]ogH*(6ltjp/j5r`^;gEukMY\3(:S2Eq-1lg>QeE1OpF-n2M.pQ?r^5a#buFZ<TY]MpmP;cq3(
%"ms*:QKIW";KGSncn!HFr9,O.85ss!AbVemQ,A)oDJ[Ui=%Cp2+P`Tcq]je?IS38ed>1mN8P>?08Q+;gSh/7AF/%h+OiP)<BcDL!
%(q@9M#klju,TPAY*@ht!iVl8oL&P'IecI-S%SeUH&5K=g&5QXsn/!:6cgU1,N@M?&d#PjP^-_$e\h,.gs%>E,&hX^3lkc>mkYhm+
%iFs:,S;d4hWVTu@X&H&3YD-Bh'pT"3c7?-r).&2b*4'`CWm2*CX)2&q2-n/13A`hP'6K`Ok?Hj0l(]>LE?0Kjfhd)2cN4U[aH`R[
%FQeN)K7LjifE'\E!)$I:Y/hC;.1hngIf&bG`p*253AcID-Fd-8B]nhj+pQ6,iBRDtlTTjkX:d$Lm:V2]#YrBVkN/AEj3/mT`s2qb
%_c:'uhksPAQ`*bf!]I/F0$JW>QPJn8;[O.XCPNGe[>Wtg<dOshkK9dE5J77u[T4Zh=q7jg[odH<\)*jhS)!=.0M"ub*^ra;;kccS
%9PJZW2s"2]V0X<3LRRhF$/"Ns<(ZmSW>bf!9^Z$d(JZ.\T,%WRdaq2`="iF,%luMRIoUaloGm2hoK<(!i@?CbO@4e76.4@Z"^$F$
%3o-1@1"UTt%o1FBWj[7<6k.M6M6'Ec*_m=+n8pWM`>f5sR5n?e`UC+X,4b[_\6Y1:kFZ2qQ#[KZ(nBO@OSF4.q3%6YkKQ`f'KTi_
%SQam3S\FKgPR9LoBpIN(<adBGAehng["GP[XjFO!'W<%f17]QRE1,YV6F8:??>Wc3D0mKO8Mc9*Eup*7biJr`6b*-JX&0:KbQK?l
%604!/NS5o$iOf@]d[49XgB(mYOAj?M<il4+LLSu7rrm6J66:uj$4^ASO5i$aRDmbm*Z<!\DNs,k9Ll<i![56]Lku9N6'Vd?jga%j
%O.Zm-?V4>"o[[P]Sk_r,jisJ9U78Oa]$!/C>$)K\2hWa;Bsq%4.INbq7T4A-U;Eg+.#UJaNu1,ec2_]mAGF)qs3Hp<Rr<+AQ<0L#
%MZddaKY>Oip*nrYXo)6u\kd%L=n07)lC[\;+#EY.hZ$f*^\s+$NN"&s$cgq>>UZ2'U\FXZ.70%9mahDbe_o0SC4%q*<6!lD042%M
%?p.WJSC9\DnZN"II@TgS<d>ALlm&DEdFSbMo$/cQ4kp"GIsgakHVaU[iA5DjFW81rMcRGDPl\@a]rA3IB+1=":+m%!ie,5#_>[R?
%*Z(f!&Hs8;c2Yk`Lc.![:Q/b\Ql*$C#onRPd2Y)X+s,abF/dFW5?5Y)Y3_+6>Q__te;jD+UVUmPkr50EbUCp8Mp*A%6oJI[AI-7a
%O])Si32JZ\\BVU>c@,fc5$pb^CNRS-VDIQTQ"/>f/."GY*t.ZH9Z[-[@-_D4bd1nY6Wp07cFET8Qsb.*OqT_Q%b[GN2>fAO3s_[/
%":f2HD+DhGqT2ZJa^F7VrfM6)`RRHQCQ#pmq6.a`;S8TP`NW?ir.S-<9N]rU>f2`u:[&Fealp[ee_P"g8%>8hMR1LYb#QlW7,*.f
%U4,ee4XD@<4[(8\B?DSHn3X[E%fF3OWm5`p(4o<CV$V7T=j<lhY*p0W8\as20QJ6HL<m[6@SH`J/'aPG`*32&HTnqaVV4B8>GkUf
%MkInFm">QI99EYSD^>qhhT_ceOR&5]<Y"H&H9oV':a9:RFH3.O&m6cM[E0L))%V4-L0t!Y;`GP16M5X0q:Ce[aZrSS4<$kaL)FI"
%XpdAgJ%%[_$X,=0EJn39rRTDXpWrKC*b@skb8PY_RiUo=n^shaA/,h-?e'CK:t.O%"-RiGT&49c"PA_b?=/?j3%dUp9]kRp(,m6A
%E+WM`-b!OiO]Y,&L""bp!XJcA<)\42M%$AR^W9<(Lf"YVE;',#_\t>gb*8r0PU^YDYBir;YrM/6s.URgks[?VW>CtL&Q"HYX(*]2
%7I^0X%edm:9KEo5bsKIU*Ld(4HbLmp2qcMa,ecsl/K7.FGV)[!!LATKJ_<#h-mOuJ(HJ,$7C&O?0T234YFR>ACor4Kand3YgQ$1p
%$Uq1-4s6O)Wqu(MJXe!6OkGuL6'(9[g'gY*=/te(&KP5<cSkj%$U]"=#S`'S1X/Rg&<.r2cV"nhlM,-<S(3Ct$tW%T+gghM1sRLW
%HZhZT09As]=tDiW"1A\\4$SGBpr"h]1!\CS"d6&rq:dR)+"3g',ThVj-=MnY3M*E-Z(3'ehtS\1)DW)rhcf)!<L5m&o'CG17=Z8*
%:5*T&hofOh!^CBg^lG4eoA(R/K/BqZCoIF30/j,F(8^8%CNX_GP!IpDrH0piqflg'=M_>"[+MY+N.l3L`fZ(2l:7aBWpY[.1EO%.
%:qEdCTXN$WWqdbPFZC>F7OZN5m9EVe4]PHl&`k&N0_RdojtQDS-98bKJb[EldSbl;$RjZP,,668&D4OF+-7L7Z9\FuIF/au2P4"J
%fNqDt7u[qF>($BSKGKKS",O^pRmdM&7ia/I8Z/tX>\2<A(fkk*[WK4u9cTW'B,;<bW#hOZo&LW-qasR+<?CP7DNe"r'ui7!s.YTV
%g\Hb2d:F:9LD8VHjdFrAAXp[KI0*H266(cC,q0[koh@"8m4uXXZ03SJH1isTqgcc'YHItr_qJ3"Po)BoS)#Hu:J\:+ru2-qr%`/p
%G&kkaZTru^VeK!,)<W)EHuTSZ0>Rs=#r7\Tfp<ka)YGIfn7Sg6"HLpg2?(A(99Jt1D[[It(t,Z&l-sjo6Gt40E&P*eao'F[&EP0?
%N6bJP0A%`"7L[cGIIf;/!3;Y3V&HN??'+ZDknp,CUNGRK2"pM:,1V<A.k:A3S.Wss(?<!#<kp$\!A$](*sThYV6FW>E!>o*?8([_
%;>Nps5#^T#7p+'?C,mWqRHA5.id,A9BRjHudGFMF.^J`#6RSQ+H[]n6p&0i_F7hO0[bWiW3h?;u(9oW)JDGoom<.BFX^")CjqDT'
%#b]K2#kF>>6F$0@$X`pc&$`1W?sYbk`;n$0o-<["--3mtdMhO7e`Frb]/$mUliZ,6q%68Z%9JAd"SfQR?'I[eibl[!c"cGh?&c4<
%4+)hK]HSPHrZX&2ZH-PKB$:!)0j=#]d<i4k(Wpb>X2,*;XOcVXd^VECKXO3Co8kg_R++-\""XX6M*8O1=)faUF&tPO,GR*6WB4+_
%Q;<kO8ALV0V6%AA&#^Ki?H>M2s'@77D&nql6&52`/V$'7;&)e1(1]/W`OY:>?:qk0oPT.q5tX1Fs)J?k*.t#QSl$&Gr59Ng`YQb&
%LP,L49_'D0AIi*meVAS#c@+.SrkEQ@Y79cFPP\]=EdMseS?ap)M'AtGPa80ElOkH"Y7pY)eLqSIdOVh14I"nJN4S0[-jh:MV0WmI
%qnWA9dCGC<fZKqC;[*6N)KOo)D$>is?)J(4]'-XCGnP^*UgF+1S<0<:J7IlVY8MY'ESD!$O4dLN3t>R')q\HDB2qn2gp;LVrARjb
%?t0rir&E.8j65009Leg5>u!s$!I`aPW2dt:]994*Up0@&B98"6ZsPoNLF'\3pXdM2iU<-dp*k/)cM2Q1eXN>6V]d`aF-Pik%RGl7
%@]@R+,L&2O7i:;hb`GLLoiCT5IX397Uk@EbNV#XIWe3lEWUnQ8<B1p)9-%Qj:OQ"i=RT?[pH6.DDiCT`M+df9185cm*?sEbk_)KD
%(@84&9W$RZUgneR%:Gm/2R>s?H\Q=9SnosIi($/]W?uEf7n8ETV`PQP*HILAXV.9to5j^C:TF^>H5G3f>MO.&@.hD8#*QY^n!9S,
%am^>1>d6h6+f6>u*rl#urjuO:+*uTmO:)pFh\HJhJ4-"Z+VNJQ&nMf5Pq;(&_C,eb%ES&$F[fQE?,)`6bNP\SMNLAh\qDmn5>'(m
%&p"3A#>`mTqB40B6?_V#GY&%geTuZL51,G@-l&7*jqpm^(RPDb>`_G>W-&#tL=kN7hEWfE`,Y-@+Bou1(67t?@68+$M_Kr$KbAEp
%re08c?kSDQ3K14,_.t+-O<8;a'hKiR:Hd94Y%Z%-<9KY4?#[:_0].P_qdB0=3;HR=?(!uD`.]N\3tL/7SlLZhjTJ@'*E&(-8J&ue
%]P.tb>AD7t6dN@tKie9;g(@916_c-,Q\Y)0/H7F5GSNV7-;N#=):'A;M$I(OA&%0FGr$gKBo,kb3kkdgCb\5&>gXL4df9$r=b9G8
%&P<G!(bC%S4M)Ke-GdLh.V-UoR&4jF,.ksQ50]hX,_b]nBJ'(DTi$u((>OYmXqm)IBfDg5gt;90DA-Zl+7_7lG'b;)bM40:\qBr#
%q=@r8>sf?$jO4m08LN!tNE_;_BU+8*mClLBU#i@@*Wb-ol7.8>[tb`bIm>YlP#q@9dSa@MTiPo]1!0R>+1%WF\`=%.6^Oc\%lE$1
%F)VGE,=Rs`$Po2(pa`X`Lg28u*I:?-Oq,ho`s:r>%7Y8p"RDWD.eWUu;(q#8$Cs`&J[00dI+D!Bd2N6MdI1cJ4+\9OaS-X<XN5o<
%4k-\If+UK"*3K/Z;9;<Ni2NcBB'Gt7rRCubkgTo<@*Z*'d%XV"mo"%-ZH[piVpJNqQt5'$=Y9%sPhbu<e-Y4J1U&Z";A.K(i!LU3
%'TT+RNlW48pftO'\l6]AngM<b8G^UAl0a?<;.80!>KA!:ORi,YdjeNr005jJ&#GJ.J@N`1h4GFt9=*4==DpOjH1-u1Z&U,LP!#kB
%d8:Lh&r1k7I1>\be.']J^c212.;4Wg"3"cId05==Aj_9dZ"c?l_$Ung!O!U]6MaLm`\(n/QCMqJP#t-LS`'nZh-*`CHn.TA0[f9T
%42.`HaJ"RXgPQK7F)!0+W#;$U;4=UN32ESE&7%M!18i*/_*"hX.NM4<;s>.PnQ_'D<<si3'e6V/OE-$ZQ:'gjKN1QKd`6W<<%p?X
%7AtK-Xh=Q^C])em!dt/?<XAV#IXrJs\I55EG"d+*L[*Bj>`JZ?B8RTP)D2o57of\Z4It.n&I-M6g,tqNia9&W;+d7^#\hcWdZ1Qe
%G%Zpb_!7U'QW.ZJU%(S2VZ<,%C.8/&O"`<Qe\FXBq(AYdRU^pcHLCla4"BnQ$[l=)J5WT1daID\HOQT?:gd@UC(^m^reR[K?]Z?F
%$RJ05?_s3$88GtIoWXO4"jtl%O=dR#jf#0'lBeA+e0X&1DpmG=M8V4YFel;'e(^llZ6PffOgj-r4lQ*Whc1HZ8_6n:Y:R`Kk!V*I
%=;S:%c05M@[0I2Y[W^4!H!\5kA1:a\l5^E:G1g$ABE\1dpm=:KDng9k>?CRA@D6`ncOTi3]AK5!]5qV3Gcejq*A<uFG%Rn`>_b"_
%k"'9E_%R;8?"S?\Tl<92Lcq$S<beP7`*^Qd81"tM\<-uu)X65QBVObK,m0KAEDB<tnS7T>$!mL#;7,5?cqWV]i6/b'5gi8HMj&"Y
%Z?0#@ip$5#Q2S"*=Z[^1FSqlKc9"sE1/ks1q<KNiN^FT1_0j'A]"%%3*ZX?;7NQ,KO$dWRUB&%Ckd=AeTXUb42k0:4oaa+cM/d,f
%5SGGg7R2[Ql:kjJmD\nsAE3gU*6B%;`(mhY/=.F.Vs[ZP9\i!e(n$^XpBB,nF+*A%O<^C+3hh"p37"R--&7d?"/qfYSW&`nB'2qj
%-Z*GJP4d@3Qres771P"X5]o.>#oHMeQ$FV/PE[icUF2uJ1CW5ekGn$9WifhJVDOd\c:6of&CO(6*/d"Yi+pb\[e2*jB7X^W$L2X8
%Sgm??R2(t2*SYXU4_6KH+fInb(3H"PkAco;;*bn^gDK'>;d-cQAa(8r'WtjL]1MS8D940gVs*4l_0ccDY"I!#EKgU"gCf2%B.F>,
%8_S/'fg]%?Boh?-Yr$pp?('E)?#^Uk]NK:h\>GSR/S"DC9j[LeOfa<[W02\q%oV/2RW^nigUF'S8[4a"-cKtX5ns6(<PKP@,Y2"3
%i-6%KB7"`#s6\=YEW1B,JLLghcchB;"0.MN2TH]C#V2,X_L"@VghpeiEn>8C9W:&"^.L!]"Ie_Y;+[)t-UMdOK-VpQ"U(/`(!mV/
%3d2u4pDj)r?pL+g'-S^f,.&npl*&1RXD!.-"P%\.Qm\YJWG:!McGab*/KcV(;/YHgAoP$M]TK4bA[bSZN/0b=Q-PodT;RQ'YVhgj
%_=RL3n@tN_#BTe#;U02"U])7irZ`ch0p)AhoR7Obn)OFb$Lt=tj$i[Ic%*6Ze8J-Y*&h"C`,iEND.,C0ZO:T-Wn?<'HgNG2YI7.0
%7,=JaaOT:2#9kA`!^hX>bl';"[3(hP5j$5,X_`EmhTXR$muNB.Vp>#&g)ketcHuMUr8KD['be4d/b\/Fefc`V0A%H8X3r"cmtI]k
%p1[M8Cb(OA&OM2OU-\IH!NpN.=?JG0mm_-IXJ*KP/)NI&3)'`m,-^cD3<&rIFI4nm-hnl)cR7oe;9/aR9E&)Fn79iTJUqX?$EP$a
%YlIq9/P;;TQ(h77..8uDq'<tg<>UB4"g8QU68R:Zq]lLj%1'BmVoirl4JnOn:feAr&.-]InuJh<cWm*E^g(F_M91=qBuPb`K,b'o
%L#D!+An4[Lrn5CEL5]:N=:^Whf4?Km)DK^XgF<T1hN[8.Qrjd='\8D7p;3Ps:BO_<@D[*o]Xr%X/\$X`fkf<d%%5bKU'uoo_@4kd
%n%ptqr!j,!b.rj;S):5@#ZWrjs*Tks;lV.Y0V2d-('R/Cbu\1?)'!2f7$U_I&5l1X;ahIX(\>I>-B6+.H<cbs^k+pW_rQ_l[(1%m
%!/\_4Nr,K.7Gl.o*-tlHOL_5>:\tnH"UrHlUMD;'!?4I(lW<W,Kk/d,n*tdP$3q`48k"O86p4Zg9g@-n7#RZjlI,7.PA)lRd11\q
%^i,\pK30iDQDG*pG\7ZK@\*UlBKZa,4<Q2:i[5$7!(8q]CNC@"L+Y)ZT?o*'?ri9XahgE`ajd$)FNs!PQum/M3([,O0=%sW+(B+8
%qdk/V`X[&j7hf3[8HsO2Uj]NKGs\"9S>n-=;Nn(=HjefZJ_c,K`O1j\?tm!ng$"A),Eh:a)6j2AU/jLb`kBKgG?(`kCE'RP+,iWV
%]1<]go,+j`=A*o`ZHCuGq)Mu]=^nE%Oj4W/ZQ*mq!VrNBCj0hKjpIili!T(sQ"*2I#kTjj.n5KqE5b@q4D'7jE[,cdBF>5S`YJZC
%WD`$00iGBZ7)U=+97UHcC6p5LXR3%s6!jc!8,>]oNdAMQ#_Tbg\c`6GR8`hB+``6f[S_#PNN'0)7drLdgGFg(S`!^3S#M.;7CU[J
%+#JVi^Ffd$K[0_QA=sQK.$^acS;WXuF5UYl=Impe%UGW(+:EYIRl7Et((%p2%VbmHKTdnEiNdFl&B\M-YqHl4nGQdoVhYGDNEO&#
%nG+7ibI@t*pE:dR]eKR.lu3Wl^]ZDe:STSE'0NSZ;q`@&[GrkCruqoI^m3F?H<pk?i<o2?r\YT_WRPX>Y!K"fJ!Vss,m?Xd*sfeh
%jn8R$$8%&NE,kGq)UT<@kVFJ+poFWo0)HcD<3MbLpST9qP$-EI9!YD<[W>)]=e(!tlh^Ts1Ei:GK^dM-\?H[\(%/P6WS#<Ze$G;R
%N^"+m4:`2ILYo-[6QqTjqY*gJFrM.G'd&PtR#S5pW/LG56X[mWYp--@)l\_="q2]gcjXSEa[.uO$;P3<(e>T2+<s2T/1@Dr#VHb!
%>.oK#+57EASgQ=s;c14IDIL8:qZ%btGO"ZUgR#fTlPPoOf5Jkj<//21O4DA+bfbXMG7/["O;Bm-nMq@(W@F7ZGp,Yua2,a\1Uu9I
%CDe/O"!TVJ4uT6A.!#p?D0d\8aB4DR_ZN`G.'mS[1`)nk:oM6k;uABh$9"Z>F/L3rY=o\QFV1!gq0Y5B$FQ1[4I%qDi)du[T@.?a
%\O:p3nAe<q>'8O3FTN#O#q??$3)IeMYJRP)OHp#;#%@,D6>lr4nbDkLN6Hpt6BffV_?i_eh?h9G7%)ifTa$U@$`r/se]F!H5nkgY
%h<MCIc#:q2@G2<9i]!bI2'[E+qJ5'_B^E[sGHeLYJbG=^U(QI!2;F6]ok+:HdD&5n287.Pf]iu@U3e#ojk3N*Sucn>Nj]_uc_fkk
%6UMX'N(E['TnFTN)H&$[o?]1SNGgE$G`&Z@$p,7"!k7*87j'QV\'S6:=_&3^Ys8@m(1mE_=u]\C3^?5*`Jn9r&/M!bQq'?-h1E`S
%#u&,YE5QGkNMBqmJTb08AHi`nUPTInZl;:o/sbnhTF9h0qu\tGatTcDTLFLcDppMXU\eW]N"]q;U5%f"Vj1g/NQkjKRPB+kW8h9P
%C#2nn\Z'4LVb$M7!^qQ-mjg&ZBcWkr^g^V>rh0)n%YkY)SVK:Bs1q#s!`;g\Jh1qd$a7OjRtp+Ma3$Hp:2!t2%3k*,F;,KSUnio4
%^s+rD"&eIQ/1B`A;9W[%)HuX[kd-9L#G5SJH27(`n*XZsQ[uHM/tjm8jQ29s5d4V[j)P3ZBc^J&'Os-m^BG?q!s<8+jp.>1Qb.Bq
%Q(%7c@NuIF=;]D5,Eh#c0Nu/Bi^Q;%YqmugNFW&U(`":@A`7hGJ3J;B/9p>O$&U9GEsnljVcu/"@/nAUo(X^q12k10ADOOqjW=Z6
%FO-CcKWB]6FRQ7E)n_u2(=U&;G)d$+7TFcO$HcM?_^R7=G]E,9,*kMd$0HTu;Fpdd)Bmt,0Ws=@]qeV/8ZATM%dgAR'pB"LPFE"=
%dAUq[s3ir.onMhDC3qOq>qK+1mp'Y??R@bM)"kHanE9IF[QS8G2n,pTIJ`p)hYFVKrh=Q8U9F93;f:L=qc>TC73cg0MqkcuS&QsX
%p(^_5DKZrV"XSJRdi/qM;jW=Q7Jhd\I+s:me,7A5-n7lcF/*_C$N:r&XdrS.l(*#TSMg59oJ@/`;E65*%Vqgte;-s+%_gh36tm&S
%%Rc8;/!(@1B"-^V15hTeJPsA3'guIq9*9fGHu`)IE*/?#rIMYT17H2`AHR&k7J99^D$Eg2?r5F),S1<qMI_52e[j;47:ZEpX9Y!A
%"012)H0cO)nJV/8/0blE"aNhfC?rd482?+HDIrcY+nDHr=KA\\C"oUae6&ii[uX<(Lo&*]PTT]s-Z$XC<rZQb9uelL]l@,/rrnS/
%;g:k]R\F;&MiV`Wlm#FuqV?C0mmU4')XtR66,\0"\Vf*%+NYVEY'Y+QO'-jB/hot`m7ta)H=Ci)P:Ei?XNSEW+DF"PToM=FlH3T'
%E;,ammui@-BI60gX<lsT)QJ\D0<Q'A2W<,odnhdhqM_In7mPF_k[%)E?<1]7OQs&*(:HTTJ%t/Y,Sn3c,r,C<RCgF*$ZTGoN[lT@
%"*c,a.8!--r,d?`^!7?Fd.#OL3#kTZK0KH[3;I%,2?-!7j<Y.YL!"DO92]Ad6?PD'U2*Eh0G?]\0sl)>Dtk.1T\"%#*%b35f#?.;
%5)e+D78p'A%.Za4X)<go.[j>c)_-i-RD"kWSi],uKH9e\,eiX,mT[PHg<)([e,(Kd^/;W1\,Tc*Ki?Se;'hOU!(Z45cDN`Iiu8B%
%`Sm-YamB*on:^JGi=Kmg0jtsr_D:T_DQpHaCp]:e]+A`sVS.l\p-I_&nD)$e/"Kf8'O.$N=^CDlOsetPdW!s8.\jp9RqFXrL66H9
%fj>N_X##rB7bHJ\Kb.nGka8BUdI`i(2>G9]N`nN](tc`?BcW_3"O@SM]ZBYCrr_qdlP^4(^>`o7k-]S[X:'5[CUNu;DE_G+TNM.,
%J>Ped"nek]/!L&@YYYI)^d#G8b?hQ.^OrT/B_l):)J1'&\EO+6R07^>bqZe#>Nu;o86'\7o+MIP]3=oRS[5lk?n4jHA3m]D/;UUe
%!Z4$8TfBdVnJqS$+"o()>Zm^*fnTCIL[gOsd;>bUfO!W\K(Y;$nU3%.($;ePbf0-\_2o?fA#I/bgLZ0\EQn-jkm6-aj_"$>SoH\m
%_]?3J\BT`_I`Tu_amFB/N:%5UUVjHe,QI`4&q:*s4bMhZlO&M?dE'\76*j<+7EgC+%`GDFL+iX2ZTtbT_]to09p@7UHP\en8+sQ+
%+5BZoKZmQkYRN$9[38*]g4G\>\uA@q[\^+)p*s@&L]aQ[$Qi?Fjtj=()<HaN.\1*RE1EFKYq?%0&6A._*f/6!Jdj%3iUfQ,&d:l+
%\)ilq.>,f<Ophtc/EeS%-rDtELsRFK,I/^90I!GCYaDH&8Eb`c<dVGlF$_5/,Xn-;l3d%>bXV]&d3>^4_+ZHoJMXGO_+/>$oLV6i
%25L\<3Zm0,<AF.($@QG5+Y(n9_S[W8,o;K%SJ%5V&)GkL6>A:!ko>2KZ$=;C3?11QdqF2bD@1(YF=k;rU2$Sg%@X@.6tukhj9_sj
%Z==%,;'(/mr[<Wl7?#pG*ERK@eJkt^Diu2AnCiT3Ea"3t&F\r!Id?L0`QZE`FF?X(e`O73dfJcbgYuV^d\JPE=75"Y/ZuC3-4.bj
%mS7AS.1_7o:[3@,"d$c9<?V0Sc$j:I&>$J?#3_VZW+eeff?R=-M7mcr=9R7/AAS@t+0+GPO,5*fJtjs@?X9FS"?hB]P(o8.cXfKT
%ZcF[K@?\2P/3W`u]%uk*(:>^:)jt6&G?ErJiCd"V9^W`oKqskG.BS1YMMsmNIttg$6L;k)HO%o[lN.trF0^>a`sK(;85$<TL`g[#
%MCCXK=@(BCbbVI<AR39Kj>Y?MB4Y!6[T$aB3"eh9XMikN8+[S\8h&&uVA7GNJ8n$F7%_Bj+lY&&p3#8-kqaN"=V*0tm=s0cCq'Ao
%F1h*/Dqs!b'u'7;0-'T7\\C0MTLQ@Ia4tb0&W,^2]0rNTQ6d[oZh5*?%`Ta[D!F^36fZ21MR5Ik8itST3m>Cm3K>X4F-H`=Bj:6#
%Nq`^G@BVCaZiM9`#HK0:*M/*ZTn9_GH`Ghlo&E?`"hn'b*qh[\E@3CL!R7=jBCEZl<$_A,6R4.+'KWGhZP*8F<IILV%L!!BR(l6m
%0[VFO(2.K9Se;WER\G]R#?n%B(WS"M0f]=^&VV<ueP'A4]FYJ,3;"lXYqBGpnIbH9j=oiQmmb6c*p6?_\,"/,V+03X$)0aAYJq3^
%je'NL+2"3U4AtNuA3Z:9B+,]9CC:+IAd^/1+Za>j:SrH$Ro[RF#d,O$;iW3r6/]<=!5Y#d8S>_R)PltRGd1*'eaGj';%^I5J@,#<
%OH"o<8]^91Ko''<-*X]Po3"1)&I-dhP+^e06_nN;XIq%;;_C0/#l%^:!oS/E#b^RWJIW*niP7so!bscXW]0_)G_:09QOHN+9+<gN
%CrC3"-EZfYa-(247XS6OkI!j9IFP1rc6<l_*Kd]A&KO-+HfaXH30W7m0_Et3"]'pjo*5mOR%3)*IM>09c;@7P9ip!X#!1WMSIPTB
%:!3k:%r`c9@*.d7?ZYDYF%MR$jZ/M(_`RD8T/,hs6RWfYaV##LUSdfsOD#T@/J.rRrN)RQS;>C:/(,Kc?+/MQ3kOqq)6rXW/_`CZ
%#2Mg."qSAs:P_1^4c(s;Qp3[_9s'!$dBd#gk@??5NX["]-bapHgZCcjNdI%$eJr[d&`-aYK%o)oMGP.VLXFjFfDYc*G3r<]?'?WG
%c3$">m:nfTfY7%Qeun#\j8@jWVlI>*VL/Xs*s@6'`'9pUBqcq?aWZZiKE8T9hB2hb,+nN*,%h4qLd506>B@Le'e)W92`kE\pR=ZU
%WZgd(V)J3G&O'*f&%(k1UHc!k&$3t&69R>5)/G5LbW"n9VoTC0O\ATk0ZuK0litFm8"NRRN]h>+EK0Fj64>U,<nL8@)dqQ#dlQNT
%hAmLm_)c6&i)*0ucOOV/:p5H$#O/mM1ebm,IW;!NY:\@iZsZ"L.((4_Jsb=:#=h*DqZtO[,6:\$jY1BSYX;\?\A[]h!=dNU)$G"q
%^ZBS4PGSbCe.>>?7=S+S,&L)u*&]Pl!<B#;r,[6^Q(oU(%\`:Z;E):9LeQF1KS[l4'SdV8DJ0=4dX2[(+DQ7LKEYE.NLFYbg-k5H
%]2#ZF6bM[a[4c<I"qp]u?TN_b<<Pln*U()Rd<3:.5mIZnbC[<)%iPV,8_m?'\uL:m.-[Ht(qkZmh<\k9*+-,$#$HfFR\Nu&Y"J(4
%TbfcU`lhpGqXsD-bIC>F`@?1=#G=k_j0afYp<oT.q@=d)A^p5uGQAmOA)eEk6WpJ0AcIqof1RN-S4-@$Q"F$n713'tG4L3,^6,qK
%^0ZKV5#JWmK.G;C!-tTm=uSO-]^%]bn!XGGcIUQ/UX6[^&hgh`SLHa\:(fK6*iGc1Y$Q8B8LJ,f=j,K&/HX2@dPoEO9Qe8,Sap?g
%'b=++41A43^al>WM<"MLn,%m\.]W<cKr8=Tj8uY?Be-QcGo-P\WZBNiQQnei/f5dkE"bt$jZ+qZaX(55%Vm[7Q_d=NkpkrLMJ]I7
%+0!o!?=#,P-e9C^,=/a?boq/h_aLoZ[T:Af@XG+j!/`<b.<QBlfmIm>Ut=`500Bf\pb)$IY+^.]T,gr=VATGm4*W_>\HF<IFhhl5
%KCX0oFc7$`\07Z;ANEITEUQY[Z"4o]Ec[Y?9u@`'Q3C1G7ARb4)cTcA_`b9ZC(L+T*mJXT$F7\3iB`cj$UNGDjmcJ;ij8K=cY1$=
%394U7$1l`qij4I4]6O!%]B31.kbb/WETbhhCOR(n9;0VI-<!oVaDI@4>Mii)'ms@M<4u2j_'cmpq.7?6(d`!0s7I<SHP_BYf;dm$
%_lX1BqX%9`45]0uOh3aC?"*3mdauZI<qgijos4Vn$[\9C5i?>`_qI;HW\0Ftgfqo?#ZB.d/]4u:HtXbAMm3r%M%/SIHSl*kPJ!nI
%)_H=<-W"?'E=HPrW[2=*;XpeX\3q(G2:N\_NKP=^i$]H-L?i;Rpr['cV2nf^Fi=ZAec31J8V2A)Vn=ZI_TYb)GD.a*C8Q1VNW@_g
%5!SG1KRp*CgHGEoJH3o>(0eC[1m?S2Fq03keSK40'it^RVQhUoO6@i_/^oY,"=DhkeZRT*fK5"I[jn0mVJMH[M^h/5L6+SCP5p&\
%"1kiD-H(HUnl?iE:_+$@Zb,pNJ9.Q>U[&#\'8$TOAd8[96AZ_p_sm!bk:DE@F!ic&]/gK$3"H_7BmW[+C@o&.D?RAI=PEA_P%s<#
%k2<:NB;GTF5m6XR3Vm3"K-'2&Ra3I-[N?J+YmX01fUj&"cnW,npi;&o<t1,)adJUAY6q!3";"+9bj5K]\i7rbQI%sPP@K!NbiTpb
%p<?,s3V8tjV^!l_iG3jR%Sr3=:GBVNhd1k7hiHtJX6VPDK$9'b5)ZH'kLA%ihh;5@e8-%KSck4.n88ng6ggBc5'DaQS&RE]fWPR_
%X=tU<67Zo[PaqABYa.,!e"qQMXGm%7"bW"H0(F)1e%-"@'4#+qPB&]FG0i<\?[;82@.-5`GF#>njnP5W9XqGl]=Ro<"0AoO1M-2H
%V_.Q#PHC!PdSYU&7r>k8]rL/;63Y!e/(YmZ1n9n<eLVP]M%3E8Q(H!r`1;at'2lZ2p-/CC8RO.o1Qk<TlQinXgL0T(5R7GDM^&>2
%(d+.t"J&i*Y]L&h9tc0`:cslZNfqL6fUetK$@]UUr^p\'Tec?W^X`Y0?*0iX8c!i[%X%TeT=G5q7nOS6`YCF.5n\?j,`6eg*RrFO
%1JnK>,do+XTY@i4BS[(c[+)q/B5Ji9K2OGG<3Rt<Iq5MCX+4EUOniaiVE=cJE7SFSTseh&T+)p4Bg1E5ABMV0rQU6a3lUIq^pB\>
%TF&F[SS5#2R^7g1[#:(H!_L?->\UONrE"L^an4N<BeHWYP;/1ThUHi(mJJ5XWJaK&rXGKu7O;5Um$^J]g:^K3\S_5a4RJB=MUiVG
%FhpDFf53Z/_'.I3=r\m7Dpo+5OUbRu9cg>:INDOdfBpX@Lqq[:^_-%'3`(<8k;-phMM:.!IMD\*OLPnt+!#Ah'[P1-ReuVDR)7L:
%7/8i#V<c%P$\q/Pn_%Qg77mnMlL#a[,cP&roN,M=FHeqe\3;'2.#`P[M8]C/G*I$S2HEf32/d("dt9upoNKn7+DJIUEA5h_k1a=N
%`TfAp2gU$"[5?;OWGbN/[naaaQX]?MXM(+"PJi%WW;))i<HTNL%J`&(ar,3Ic;uKp4-gOo,3i,gbEk.K9CPEZaAZ>j]hEak*_^[b
%HLiQ.PH'hR4Rd-_nOWDU<S1Ia516<%eFOiA]o$"'D.b0q%MAuROAiT9dD92364+*l8qGFo5_MYq-9M44^1X@#*ImlYij3D*T:L6L
%f2'(WBb]\@)8&&?oIP!PJU-9]/p#^YQUb2iJVm!!hW3B8I:T5tR/=;7n?'#/L&?Lk@^2<,:/go3TE$j.aJK7Vi<?0s%;lUBbF[34
%Nec<#'>FB6X:/,?)(g&t@C37cd?U^trs%&Y88jl/Yb_i<Q)eT+6;i"mGIkE0a(F$:F>kPjJTQ=>#P;&paAN-d5c6\Rhfbfi'WRS5
%5][/dpmZn&9\HcFp-#k[dZ1TW^UJf1"1keU/84Q=_ThoE;eI$/b,Y3jA`OJkNPm,6r=q0U+$\a3d^XTHkCD[Za]sFhjZ<B_26ciq
%lVI@jB7.=pQ<Wq=cDIek*^dVk0csnF]8sqIi/+Fe2PstoHuQ97?Q@27`/7i,j=Hu>bCX@OUXq=_GI\,]Cf&>VN>D?:R[h/[_RMdN
%OhPtASiC=Ts6_O%XW(Y^f#U._$O:pFjOq4*,m\K<),<m$:s[f!#[-f/r'+!g?A+6?s/oZ95T9n/R+H6bD)'1W^$,"(jbXgL3dqIQ
%qb1n1?9H&-BfO@OGbie!>j_LbVr,cQrjpp+dJgd=g!"Zrf]]3Om#Zt?//F"tU.md%VgV[OY9NoQO?#Yh>M8@d.S+3+2sV:d6ms_H
%0^W59(FJRQE<J*0(ZXp`8AdP6!20bZNT6(jn]6[=Af#1*)J?2,`0D<OoCe4pIZWjmB-Y<>JF8;XO=f23]\sCkPP$gh[3L@j\(Aoq
%3:LGTpj)X?R!n[T&,lSE?VXZ6[3JAT`G5sp9^))Sba5#:2"C.-*e[8_\O&:4`r$I_c/uBNe<!/Bm1AZ'K\`@nV12Kqq*%c6[SL>X
%U-H8X"\T)WlpSN.bdV"-d^DLWk/^=qlC,g8.G6+gd7Ma08>':'Ks)`M]m4a0E]O+ek9d>"Kkp#po^1rtdW)&Q@2ZPP&^OZ'R$]DN
%_gQcBE4O3mr2Q]63,/+#S"VE5'r0MIgcL\KH`p(RTu'(;<kis(p?(C2&K0*t@8#oK>+/QNIu:fPWqandK2.Xq[*SghZ/&[:cVd[4
%hEK`\eN%*f5TWJ\r6p\23VR(TM:VF4^a_:)dYj6-,KP.1*oAXAdVhDGob23JpgnH@^'b"4@D??-fd\WX1rZ\oeAI^@SP7ejpCOAH
%Y40\"$Lg"Wbt#C8+FBb`!!1*jSlC@0:I`$3n?RNlKHr[Y]J3`sdn=Eg];*o=WZWPpbYf*h20FuUkUW=Ci.iD)KR+1!]/MLFfF0hk
%lK>1kkb7Z-0RP;-A[&<(;'KCcRWD<WrYJA6I_B@&4j`p9@gV?@nQlI&p(iEhDE?F1Uj_fKc7K.)I.*NY.'Yk,8u3WK<j#At*bf28
%E203,dMs77HEb$hcPnJgZ`p\oCiWO*/:Wd&h5kei]mm.!rR%ink*ruaY^0)?Cqb8i9_3T5?AO,cQWDu(_3]eS:ut).$kI.MS2t_r
%cg8UZ%YNU5<[/CnAG$YG0\tqZV(@Ssr'%ZgY7;?1MC7$AkA+<^SEVNhT*)-*jI#B\.3[K\rPNe\^FlO\"Xd+dY<-NiQCNBnrMmL9
%MCT2Vc;lJh+.dU]o<d+^.DOE#5K,hcNLF-gkXUO0OhFlLS4BGlB`ZgdFDZumk$,&Mnup2'+kXRtZ02rV-gd*#fua3^Ep?S9C#O&[
%l`**/rratO7%K.r!@*lVb1>rQS[0El<.*T]Yh)l<aC4S2:I"XK89*YX4UW!F.U*qNY;mUt<RN#)=g^U(L[.r%%6-NSET6%K%8*Nt
%MmBfRHLLq%W,.J7oNlJ"_.BLZNGDBnX5:7+&ZQnog[_ei:u7V>*)e:+Ga_DY?#`M3lVXA1]PuLc>M4&T8&!;)YnqMOe3+aAh`-,)
%Rg_J^LOP(dD7K6)';A=c;eRQ([ur<r+LJVh6*DFkOT^)O`*b"t1VDr65iEh*fXHPC<dBP^:N_9E)F)i=Or0PWV_ct#7(d+nlg2YX
%jA>.b&KFg>rC0O;4'pt6:"cBU=)B"G]J!%5_/amBk:RIZG?uF=jF*hK`OSYaNmmuMiT_.Bo;!JSPeVU6Z4.''Vl5;^inu.af^VFD
%nmO9(O#4O'l=-C(H/HuJMpK&VZlX'/ebXt])<uaoWa/_n^%YH:p,%"%RJFqo_<C6eEA3ad4Q\B@\klc:l*?@FnP>:/B/nT32osl?
%mmhRH4;[H68=Bf$G05O+2/Q+^3e$E'Bl'lK%<ite'h$X9cMbmmCVJUi?b<;,YoHK$T?@N!B\9]b8ji"p:[dIpC[1L%I$*g?D0m&8
%A^4]V6<g>*4S/Ms30#.YWPb\F%4JtE3WMJa<ZU'U?ql7Z8BeCFIc*0$U*"ljI/_?QRJr*_A4t3mF8UkrM#pZ#5$4eVY"!&t"2nla
%;$)<^&o;):VmF.Q^Vj:j+"Eb:i$,KsCsZIOefjP[j,Hmm]T<!h9dLDAlL!J,R2,qNp:ec2n6m>k/0gQ1n^)oeC)NF&$LlVdi\K*_
%<M[27F4ZQFYN"p;KCa4j^J#19:jSdeU3ZYK@sjgUY^3k/Yd%nk:#i[-5QCP7,@OYLf:Rcn5m6b(On06f/[ION$Nn.e&g$ieCR=.>
%g[i@1>!$.'*4Z;Hka=&-lbe4_>.r>/CCU<^:b^/4Ke*()_@uGPc"H:d$FOuJgR&`@0D4n^")6i*O?T9hEM\fS<V:[t-X]0,'qUqc
%7-`n*ht7t@*'aEV=6TRWn%U7U(\[`31hlZQ`aR`M7alYI6`M:akqq5;,drgnJ9JmgL/Xp/`qFc6qMe+)Fh5d:j<\Dgo&+os>a!*[
%7UkrN]jUiD+GW^=,uo_XHiGTEd+[^8K#uYt*`JUUmmk6JR6d:EDjKpA_g#FYOEZ"Te&l[A^3T9\]$+3q7"\)'4D&tuO%@MG`o"bO
%bq!odd5(UY*@pT.<=VprcQ:F@Pj(X^>ima]@n1mi9FJ+9;g9a7OO"E:%__B-oZaq-`b3ddm-4@f,m'c3#nY/.dGgg9-Kj>#a56&*
%L?>pA>p;+N(eE`%:QL\8W9fZ!_b^P(iga3s/sncj!l"9HVWpXDq!/0XmGCNj>Xomb?7*L9hJl\%<i4cQkOOZVQ?iFjog:8tNA87T
%qcPW,(i2e8*&tTC.R/u"@+62pP,Q"`g$q?@;hP3`>aR]%E;V)3m1/0dm3^V9^Pk0S_j:CSLp<,P"Cq-=ZE$Q]WT9m1-mGZRh5I,+
%j9d\!:>;F09Hl8Qqu-uo3E&J,`,s<&7V4NtcUN-5W$b<6f?jgg@N1@0BrF"'KM@'<Z-SuOOf4JuF<fakIblKCnlnY\4t-79.+Y=k
%BR8o[#X&&T)G_G.1C&,l;8MM@@G]ac&bILH`l$5m`2$#<g)f6U&QS\0OM-]loLeoUo_DIdUusFcqUl`'hbW="Vrqf>=VI7hC.oMn
%RPR,mS^s/p65hAd8Am4bb)It;+br*2a"VbSQ8Pikj>>\kjA@L>o';q)3k_lpKAI5iUNmB.PrfK/SUA^U,;CW.3Z.!rIuFcM=+qSJ
%WVadE,RK0%YL+"Dff#%MIG,tBXAeI=EZNB+he7g"r+Q:sFo2PNV@IUZG#F_#5sAkTOP"=I4Gr%[Z6?]VFot@aCa7#7NN!M1^I)&A
%Y7\dE"#j[Q\IO8#%-6H@I_Ge979c-*i^\jo8G&l4?kP^L]rpn:d1-CJ&a98a[M_;b9MRXf7@AH2LF&M6"WEa^?YFN^"^a/K_3oc<
%0lfQh.W<ZNhqDaYR!(T;@A$$_3ptr/kO&5O9OcmPSShEu-XO/c:363nHmM@32Yj%PE8nmG%3gbW"S>.k,pOR#!YpRfM`7;.Rg1<N
%J^L[YVeg,L-oVW5)k]#dLet`-B_]sQm"l+LmA,dD?uBI6OJ!TWdq):GB4AZ+fU*@:ESU>_Zlpmaf2kh6hkk'4djQtP1Qep1^^j*]
%:CELu*_ri7Qg>uYh+f:25:7ECWt=RpjgB]<3puEQ8)js%XV$#WQ6pf8Sa()`o[AhhSZg6Spgbn:(_s"gMF#\;p#kZhGRCR4c:0kZ
%.$HXD<,srG4+^:/UZU5^g(0'6pgMt?r31ZGS3L0cZ]<#keM0orgNXbI`20*8141LX;@%,f//rWl-[59>)J@d*kRe_oOX0X'0jGtl
%mPM(2D,%4KGSPtN(5lt@E>)EI]8u)H9Q]al>EGf\BufY[]^NW)l]_$%$&p<9&u,bs`)J^_!?Q(\&gpb@Jq)183L0$+W"+OJ]M7,%
%i[ZfCH77=VbM\=6%,=S7Q$!TZ^!K:heMQtgeEisEa.ITe`eG"Of3rViYgmnPVBkE[2QShGiq;=QHs2(R5Br'+:(Ub32'gPtp!6F<
%DO'^_WV]/C#<`u$>!:FW,O;Lr?hLLJfB9I-OEjh)I8E@];MkD)'XZ2/nTA^I=-\%dHJ9:Y;$mjaIg*f]Nb`:hIXb'ipqk\dWF)`p
%B8O7]h,T94iD_RHT!*OF40:6$0`fR5)e0%5%An0#*!e2CH>9k[bo279c8$^eV0g7qc8rT$=iba)nW,"ri$]Jm;*%gLN^&*nCrbW8
%5eu0%2\-k@O.)$r<lRttVlgP>qIbr`EC\mk$.W"-P=$@?MOG)("b8u\j823moPH8r'OLN038_6)pmjXq:]&M+ZYT'%N/8(/BN%OS
%D`"(mKZ^9#:@(/;9W;hRg/q9BU@%DF'TX/RN+%+&kU\:RAMje`@>9JshB;a1Y*b^!7"S!D9Q&W0O>k38$X%TA<e/p%Fu&A/ENShK
%@mQ]dq,Aa2)q?Y0+P9T_d"L<%`F]kBa"O+Vr-6AOG2#4VLiRTNh[+.la1IIY;#0iY\"S\NFD2)41h0=\'`2=a]-FSAR7S[td:W7o
%dHNkHFZT="9ba>nbJboAK#F1<^@CL=E]8CT/]mn_4&rRH3$V8ED<NDCXpnms^[\6-jP(0-FoTRpLLo-Go>>p1VN)S&5CO)/nhgd7
%r[_"'=0Be2G7Bp0B@*K%;a!S0Md8A/f5@1(A?WYbV8rB^Is(/GId8CHEjGq7)rtMnXCVi-$m(l"B?0uCXI)i1nYUSWgDJcmE^6PV
%R9Z?XAKD`J[4VF0%=$r%crAKR(nkU:h;1J+[ETV[J_;eh@\:%9/\@%oSP,"^T`26pfHQ.'9OsU8"E3u#(u%LC13*R0VXna.QNuF9
%0r/ud7i`r2Y&)4`agN+8B)oh9a74;jm4<6=lZO%i:SD'4I%"ESH0jkhgW`B`06:I0f+Y6PrTBf$&.X.JONHI*'A9AL[RhW%D<C8V
%oVRd\L(g&FRt]PFoBZQYT-1%pcNH7LB66tN\%TZ(fj64ic$:Ah8Is6p7DSaR7QDJlo=elnfc@kP!]9aJ^dJdJ$64h]<Wnn7Q@rA<
%CU&(laODId[,PNchHui'TrX@q>g&agT*,5\h*9a'*/2e&V>UG#5<oedG'0;jhEr"IHB3Bb8)Be*=h"mem;=)QWi".US_H?&=D%_E
%T($f<pL\#YU9i4o1K)jgU:Ue.G:0?'5]$lAVdS7:*W4BnqX81^;J)`(q;?d("GAj\n95Kc=gR8>5OEjJ#"V<bQVe]C=3("$G-FRt
%'8ot;fJ5[k)a6LfDe;'WRl^(O-XT6U8ag*2)NK[)Z"g9BgJ!FF@#0tLV<)VJXg2>V?*[i\)rjN6"`=@t$IKQ6n18Kgs)]/qc:g_U
%dKY"j!C\op3An9f6kF^?m4hg@N>=2N18\lYUH'D9bq7uQYlMMCluLfE)<-FS_1\fT$LDeSr^;.#2MSuU"2YqE<,hB1C2'FMn0VtI
%?PaoC/TF%KA#.499X;8d<euDtNCW%?Ch_k:7[n2qK*P(-!6C3/b7rL_`hGX,[iu[!]67Nsqu]%`@!=A(;Xj"A-nV)HBHA2pdjufM
%obT-",U.$9r[L43!QHS+jM9Qtf*';lPg80Ta05P.#5Bppk\]f<JZ%BgNMACOgQgkcO9_JTTEGqqc-6L2J=L7;'ttYRS,cLs`5u&V
%IWhX+Xgo66O"E6J%rZJOF'E#F1JP#bMJPO6VIJ54AK.4p0G^8kMJc=F;cB'Djb_la$'QfbE8_'MZ+,k2d"Q3S7%c``*'0E+L3stq
%WZ03j\''=(a0q3UJ@M,m(*&KLFJ*`g]0MA#=>JL"05kr1&ac7Ar@!2mVU<gDp!m7-4joj]'_&g(I\QYi#%VS(QF?.aPn70CZo:IS
%AD4<1R.ecZh6n>)m0J>F45>JHmK(BCI^\6UV!<&tKGg-;fg*I&>Y(VqFJ@:&\Z#@O1#1_1m/9[VSg@_#Ttt@O8TKbk+U9c@;WaWJ
%C&lKmRjek-NUI_C;1;.6fs8H-l:gIj@X5\V;Ngb(BVPJeF46nPeH'*IftM[?'$l"`-nNVsrErDDCko]pdWiQpfK%K*c!q"/>%)[V
%K*'Bk*SJO;V1Z!pXt0PB&0fS>630[cC<^0/\$\e@A"#f;N`i`$A#kYp$E<[R_I-1p*GbVUqID@=0W0+NP%#F:2KA#`7-TIXlA`)@
%Y?8:tV,a5qBE3<O$(1HkI8Gs4iZq.\SN3N1AT5H^!`FE$q'9\rC@5pT9==.hYuK1Y.t',6MLQ].dHi$D>V,Rr)&9&I,Qn2aZo9.9
%gPtpn0\i;Q<1M80i,il(m<NZ0`!BWZ7d+sW\"$TtYHH3>SGLfh'$#,X33J\,.#r?JM%e2tflH6/BJe"VgWF+g9\5!"RuK[-pqlXY
%c3`V@?+=_6R*#?l]]9alGU<=g8K9cucbs(k#,4om\6fQhl.7nmppEr,5?OjL?]9&L%o:+;m,0&[;t'L8M*?[Ol83c0`E^2Nh3=)i
%0Rc>NhhG/j+J?"WVfAl>,dnOZUC.#W:*:h0YZ&q[hs/QR+:V$u(UWNX_)id5.7_7MfRASn#Z)hOJ:7lKgc/A@I?o,+R\GFFO-=L8
%n3/?/bS9I5GB,FmPdjpJ1&'\YDP`TRdQ@EaZ2KA8r2gA*Xjd6iARBf`lfd;/Z,_L<AJtGo(H_TbfL`c@p917E3mYB5Y*hG(UE%0m
%'fEH\(M#/EJ!'Nj*_4snqgaU<gg)6UklVVL%<M@-;8,uJq@H:g^,?1VCs(0]Xc;'K'=g$.%ug0+S,^EL=M#YJ"VA;7%)Ju<&8.th
%IB!^,NGeb:0&G)V(DI@d=k=b`b4-8k>d11F5'@9&k*D1Z0I]`?[B[^9;;b)0C0tI(E#g[sf2Ql`q`*Y04PGsB[X^o(i[br:aaItq
%DbVqi('#;M8c$oq>9qU0.1<'9Un<*ao6JGERMk@QTfs#+9Fb[uRJ,'/+XPou`\A`p&_)%3*X(8.[17=B?/G4H`Qu._hQ1@g;op'e
%F+-/(G2<'<,iFp7%ikpOfNLt"n:PTMG'a)GY!b#;.?)tZ@2a\^6t6:$N"fft+?=-@1C[`kV<Z/T78gr)MNk5F@+Fq1gFtSIf2j4e
%:_,M6!R<g1'5in8rq[<Fs#`UYJ9$HA;Cl,oRBX3b2i)ie@a[s`C@4*;*-]G$W.<NM(h6t#6tccJ6)+/9`SmT3_(fOkU28+96\Ek>
%X68u^IM;I:R?q7QNcVN>&pE+<^sZgi/J<-TOSC7!S#>TCQs//WR5lBF6;pfC'#_m[=&nXfgWAJC6MYhh#W\pfE[7h:Y8^WWcAS&J
%8\0kXAV(g>5\;iW8s%%';i_1s&QMV3NQ-Kj3hGt,6DeKWroTNEVXDj\54+$+a..-JIq`\.6P^<!BTWQS*$MSHPr7B2LG+ggJO$TC
%+*MB/5XMP9-5"4U#[[0,"k2\@NM'q8(;r=ChlP*4G6eMJa+UB48B;O$plY@'73l3,Jik'AY'^e=@BWV&4RaT;AaQrD:cm@3ZT$m`
%:H+O#qE__9(=,qmZj\`I!YUqZA(10H:LN(!m^#8Oc"%BIf:X("o/*GrGa6F[SPd(U3=HpW88._O,[sT6o5"_T+52@ohk[tQPY`2+
%((te(q"!S&\\pKo5j+2OcR,$(,`#7Qa6^;J=NCaoFeT6KW-u*E&CrWSU#q\@eto#8OusCDR$k/l]$Y)b"<ddG&ZP"Qo0A./=gPT)
%D\I:?W([cY(27nCBKBVC^k@"Lgm32$O$>>P_0sK0R/JC<Fnsf\KLA[RS8&Hb0t+3[fC`,P1dsh_=[H'A1D7aW'bY<I[%E(\KAb`D
%"ppRTXn\e#,%SoEPmg(SGWBUBF><m+.)8cNh^1RDF42!tiqicC%a.U/odh2O#K"T9U1Ok!,Tja>nT&!1"XRiRTM6Xh8ArrdIFsUs
%LeHnK6I7jXG+()F#D'7M18d9A&edkR&f<\7-2Mf59klQ958&+s8,([Ipfh-*E>g,X`S3q^'NcJjlgc+#.`m>nm5gI>JH='ZO^9=B
%@u3epqGku)G)Jc(<!<>spcq;@irk2+e!(O-[i%O@k:npC-BaT>&t&Nl&1B[S5s[9n&uEiO3XGD[B.,Gl8n\Rc+`Rmso`M_Z]2,n0
%UK'hrg[IQi@g;uAZt%P.%"J?hamfcag5l4nP:5cld3-b*_3l4(?qa9-jYS)JqJmgc`Up2&HufA'pVB6!>\R$+RuW_]T/oGW88'6A
%@R/4(,*(JF5Aplj#l0n*Lh<ech;>ENNDgT`FJbF!_?(PX*RFr(Sh[l=+Th0oLt)JP,;_h!87XI;0dG+(fORc>po9[X#"G5"0Cu+!
%2dpmIW=FWCKZ_ppKESqOqI*@IqLQlm*Re_5%c6g\;.JR[<XiZc,IC!@\4oUEG2W%8F8M*0f=TVL'LL6-l80ri)o]^*#*pIDd(#O-
%T[18)4'gQ!&n2VfPZ^QP-O^I?W-LI0g$%\PA`aX;"`WHeA4^:d]W(@l)GPpc?!:]0[iVq($\%_PgVu,sr;a#$+7BaXHY4Xtr'Y%V
%blpQ=E*V4uFN>0-U,Aid-po0*'C?M'%$]Q_m?A`de?n1[R>FI/-dYiD&>,rb)kjFXCt'md6BVW<h53HR-)Tb0C0I+YZj<o^0hs+q
%nD\hNe^Jo[GW:+kg7RLMRI`^n-UY&>@!BUNn^Qgc)5-1!!V<\(1,OddSM:=S:_dQY`f99V<<`^=W(]Y_&+?i%4TeZD%$5nUg\U.p
%O]2jWjS(S)A/&`=P#4Cte5"-9;blX&E?s_EeC`#W[Y#)M6_E.O*bAId<o%au=C)fA^TVIWbMj%)lV@johj;O;Q*t%bkoQ)aelBS0
%Yn8V@(6tI+4rO?!TH1%5f.7+&i(-<O>X.-8,&o\?EY7"2#Y.U,?dBoDHdbI^<U$]@($)-<85.\eOS^cYO@)Jns#BNH_m<E2!^[0f
%8>!mcLU9S`@R1D=?!tsK6n^_H&@7)sb8FLaU#lZce:K`#Z0(Z,_H2LXp0#?s24Ui@Ce#@#-Fpei"APYAJ+VVZ,T%(?6sQ'O?4^Rd
%`c?#YX1%mS`(.[&"t0ABZEm>*a)&amZ4ZWN#o66bcZ3Yf`aY(K>agSf&E!fJR^6d'RE%30'nB+KKs[D:5W("SX#@uYhFbW7ZJ/%,
%X^,2a[,28o9"KI_>)YoPF1oP@#_gACKS8$"'umgukXc#?l!KZ$>q+&;s1\LD^H.Vel-WcQ5K]h?1Ub`F78[n0<8GRXcAbI\l>kl3
%5".*-qj`?e%)JhS^FB4)2mTi%\Ld`?HJUPk3KVlb-C=p\`KHT-\`;(+6cWcjZmrb[#'gf4,n6OZeH0qe:*C56lnF\iG$Ydpi.kJg
%2f/O&<R`jQ!r%d^Y0OSF74eX`kfGte;:Th,>^(?@*UdY71nN60f-T9$A`<sFk&o)JgNrTQ7IhNj2o/U*Dt7G>Y7Gt^eTpaZeOMLN
%[nDk`[N4\h.ran@nnRmGDdZ?:[52X`+<:oN.mIh6X$(M!et1pUqcl1e7o5n,MA_a_X$Bs--)^ZC"_]G;_m%_p+(L7!T4R,B_ho0j
%:XoglBatn-f^-OQVWV^ab"_lfKBB$e&R3j,P!e'MftJQr.;<.U]ELij;M#a)#_+!q__]u>,:_.@1WYO/%*4oLETT].1Dm$YJ%0Jt
%edfc\=Cjco*PO7R>0J67PX6S9MF@t'l+^"Mb_KiTKCb.31R-6Cdk-E^WN_B*-&DqprEGcj(I.bY!Ni@6rjlub9>)AE\-QA00s^V[
%'Y-8'b8^EY`tV#V*@1^RG0lqI)Fcq(+CW`Pn`q96oMm.Z6Q9%<lhrFKGG>ffU"A5Ac&GLT)`Nh+*W<Knl''J*iSKMdb@U_FO+-jB
%jC8Xn[mV#NI*>LA;<^DoK[bRE;FWNIgTNr#!"bU)%@>)t3Wu0MHg$aq+/Fub)8Fp+P0[)UjJg:Tad5Rcpp3mkUelbJM4m]jRUF<N
%[Olc]Pk&7U3<g*?+Ih;LB$X:X<k#QDRS?&=_^M8]S"u>O$Y0>!*/$\t?a)0c"Pdf@,Us9@If&#kNYkD4>GIMhr(.X&2C-627XrH`
%!BG%N'>FdG#?S;5Ch"Z\kM;ea2E.,>=dh-Y5U&"Q9R,<O2Fo@S".8RUZuSq;BgU<^"js?(HX"i"P$Jbk"4N'_Bh*`X!F]A^<[467
%*1X!9f7D\:/JNm64=$PlZ_3?pQ9#)R*@j#`ertDQkecO&]h@uWm,o?kWbj5]$<+HmGeqsgfqLkAJF<q;VN;D6D9TkI3,d_lG72jC
%p]l;0:;[*$9P@j%op2Tr"@W\`rDt2T9=OR0/7o\$7.V$d,;I3XJr,R7hl`cqmCp_p9!7lVXTM>`KGr70"[WZ"Tf=/4m/[2_E]+u]
%_\I\_arkk;ZGpjHieBuJDFrIDTM>IE7SWQMcA#mSMM%)VhQhcs+R2W3U@7@/Ub32UcN=B;rGD#+rOmK6B5.T90pEo2AD=9G'aQ't
%hVZg2mEh5]=M-$&hYb''c1_J,:td"g:.ZU&/gT2@D+9q;,G3fqKqi9Ern%H<DcQBsebX:=kS:[l&T;"qS\m`H"@\'JH0<G5am!'<
%o18<GGj>.K;ngfscP4Y<]sZ48O&Y=H&MJ;&,Ei+BZ#)410Zg4+U,P'#feXjg)^l'$9ZZQEHO84/0Uk=m^Co#:j"d$[aqNVc[u&<S
%^r^?SU,l!Ggl%N?ajAKM^ect>SJpgQ*=>>YW[:$j4Jr"HO>7*CZu28'C^3;:k@='1jhQh2]anYeKn+3h@]WA&TA[qFo0&IlMAAHB
%D)B4VG^XQ:XN_HBWKp!XDa.fS1>*WcQ1dc$TN!EI4J)l$n1RnjeX<K'#A<#k`NqQn<%tp^[T/&q:*sQSX30##rQik+HcVSZ[?%7R
%hVi4YT[Ah955/2_YU]+b5'%V:U2;-RXOYim-RR8I5U/WZ-W+jf1N/2**9G^OYuO'1Ded?LrL%RT*X+["B\4-.UNU-)!IWLS!L,gX
%HfM`%"PgfK[082=/bap=9LEQ8A.Mj\Ab=a0fq!9kE#,kSX0].N!<Z.WncGm!7<R8p;\C(>.o';^"9:j>CZKuC-1qecAq_,WoVT(V
%#Tb@o8BHt#[U#t]A6u,G0UH4&R*-cO/(No=!q",+mS^]04?:sh$.`-1i`h9dZ:HS]UZMjj`?IN%SZF9j;[Xr,W=KP1+A-L)g1j[r
%CW\6OqX,hqi1S`'=0==10QM7jS.="0c#Q'\D0`q>=W^CWls..)*9+A-Z1L_]pbr_rUp[,n`*`Dmfj"?196]u_]:1!D1T^hHf[mi!
%a5BGo\"g!pps&FP&i2bojZP4/H4aS]%(>>>)(JJ,[Vs:[?gfq7Z;aHMqFfZ<SQ^E:<$1>d[=3U9-6?9YV8[b$[PA.?Hgf6Mm*n&-
%4,c2qqqDXYDsZi;]f_:A?6sLKqMPpV"ZWFK]o\ZWq4utn+4Y%^qe^37S9PYSi2b>Mg&\s]cQNR;I;Xu>iuteQ#A"f%]$Q5T"E')k
%,i;-LR43rHLBP?pY\XU;(gLOg'*$qbktTK#o2tM$Y=p#H+mdg!jFN1Y.\`gX+bkHUhqS5_`tbH%,bYesfd6:U+YrL1M(+?.GEu#D
%e6dKd:]QAe)mil\Vj86CL71eLocC/J(IausbVLjiMSP6O7?D>N_qg>W#"9YV08o-oFg?YQ!Bob"gHb#):3`sJ@qR/`<5?AC,,i\3
%S0deK-bXc<bZVEhT3rQ#.BHX*MsH2jM0lmYZIaR%,Bs/Re?Flo*X+7AkVKRdZ-BGEk=S`@6/sPc!eG?SO\H*m51dJ=gu_he6M-X=
%E*l1Z=#da:/%DF?:r3H(R`37H@S?`e-a))DShCQ\`G&Fj!r4sHb^<g<PJ3B\0g.QT*N\qmiERtj=7Q6l]\m-Vcn"kfLW:pFl`^HQ
%s*BQ2%Od,9;Ge^Dp#=Y]&Kg]Z:u!BXc>grf7<49!Y/us*lM9\EkLU&WXTKZEdVflj>),<t"o0"tZ!CHBC)#<P59Gk:.eF!KXFPa"
%*iMlG_)Jl0UY6lM@VhhTkU#3!)?P^aap22m'Ln&\5Z%#F?*9Y$Qdfb)@t.idllmUL]fUk#W<;b5b0=M=7tkD%aL5qebN!N5hAO"J
%#>j4tf!JPg;rrSXfGUlpS>N(?iDgor!tWfM&Ydf#7%4IXSj[njJFQdh\Vsho[<91Ps.ul"B\oV:%,1TMg21-a,'9fjPlb@"=`[ec
%qs#8F2@Ba4Td.$BEh\P9^"b4'[?p/DM3o31s-AT*T5Mf,`t,Z9o'tJHFEY@oWTnZuCtI\&c't7WF'bEh'<Kg:Mg)qk%tDmI?D[c8
%9F8,D5]uW#/6sDE?pV1IF!)#iEtfLF`=X<2OB5qcMs1TK&u]r:kTOVj?k]aMQ'!_S/@bsZF'O@AM2/<!Mj*D9c\^tW#44^,'Y+W8
%@9NN;RB<gUD2Cc-lLi@_[<m04AqO!l/V)q'/tme[YVRVWUGYsTk5CN+kl$/^RX&j9GtZE+X*?BuN'gYs>ACKEN/86l&/Z%NTbI'>
%fm"38<7!4r))*8<>WHp!0erA-o"4]$i9"mM$iNSd4D#)=,h7m+g!dgefODeK[IDGD_nslWo2UC'bQ'7$o;M@8VSo![KD88uU`YAF
%$9)6"6F,>`%WLD4@5N`A/rQ/M?kM=:7a9RNOF#9aRtFN\U8"9jfd6"cimbi_/q_$@'t&/;L\gDeYc.1Yr9@mOfH_U;Pa#^D3rE/1
%396.eR%47^[rh66B*g.gR(_PGA[Y<aLOCmu8s=l.W_FC2JuGrhePS@)7<U^H"Zq,oU8p'u\K,Eg6j#NU;@A9+Dt4Bqm0D?Vm=>lm
%#GU9o'E<hGLn1$TbY-TlfVg>Uqolo.mB`$F9K;)&?hPr_q%N58A]rQ"h6n!k(FR83<2WkHDs@FB'1(:4oRY4M0bgc$Z#6qu"`&PW
%95X;hQS%jgPJ*.(6g#k#:u^lQ5qu5M>c.+p17s/)M,%NX3i03phb6UXoXnNVDXHSGd**sb$#HP3F9/W7BD.`C!c^:X_a!0-l7NFM
%hA%:pH3>gA(^]"h.bNFM\k70/c$cFJR,.'Aj%`Y&4='=,&YHX^j2mgE](rUQ[(_5>@1RmA74OIf#od/ZMiqK%N7m$.DQj\(JQ?Df
%NE#V<mu%(MAd-7`VPd(pA(.bOIugD9V5P9_*ebL4nD=$W`P)<d&?'>^TT03CK![81"n3oK*AERD[%pud$lC6,C0J#NC&?T5-mO35
%hU#.qhqHbL8/lJ^Yj?OJ&g-CRP&T%BP:GD%(91]cRRk$D]i!#-57s?KPc7u!>=TmFEaTd;S+]QuhOkL@'@9hr;!bD9p4&Z^Qu[UY
%YbF%oc6V.6b:?grA++QVdC2IJ18!eMDb6LEV#AIjGd2Uur0<u(ods"H#ga@(2HiuG@[f-Cr+hIk*G!SC4]04BlN1:]3GntkFudN,
%l)_Ic"u87.B80CUTfRBN>Fb,8.?D5-.E@9K)/0T1[hes)Qf*ujZ$&dkY0GB^@MOMYbm3Q!GeHY#2@0MF>oo0tH_lq;,hc#"6e[&W
%\TssV"E,"O*7nLMP?uWB_qM6L4Nd5bl5Zp$qc[DjdQ;7;[8qj>1b#d%I)ck:!Fetl8d\ag?1!l1N:NQ<#<PAMpG$tP"mh<X&BFrt
%P7<"Ji/>q"N^&"@OiiYn6C2UbJ'U:k6=71F7H-90e'>R3k.H&EO0\BZ'p#GdagFM4a@\ZNp1oHB>?:o#1*.CIJfm8@Uo=e_=\V\\
%]>?+T(ok'-.LX!HJOeQ^JcK98eGjVdH-590d3Acr)UnVE2EEN+g'7NcUaFP]+jh-gc;\kOY7?3R"CcI$$@<4i<sjthBLo&^3#g6B
%'6=j*\DMu;0^$j7qtSh4hjH4-q#_kO2P_jMbf\)0gYS)rLF&mhL:,eo0O'BLOSTPON+=Xra5S`D\@<iO#j1.#>bdtRK)Tl2YkTj:
%Du44+XEWB=[m&U>";LPll5#?3a5J?LH8EH8\(IIC0#\@bhDt=m\6-eXKU**Y4,YP$_dHsAH5YA_@"k]p-UT\)BD:nHe$Sh]SiCZG
%\UOSO?]a,m/GOGhcMlh\reL&Orq7H5gY_tgs8N"q^\JiGMnf6eJ,&ous7;l^n3?p8msk27J+NF7oS<JFqpuqhi?/'hTE"E,^],ta
%l0Ig<o_UlOo0<6=pTK)Cn,N04p`'4[q]Gb/?iTMCr:b^6DuLj8=@u0~>
%AI9_PrivateDataEnd
